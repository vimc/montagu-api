/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.RolePermissionRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RolePermission extends TableImpl<RolePermissionRecord> {

    private static final long serialVersionUID = -1349584130;

    /**
     * The reference instance of <code>public.role_permission</code>
     */
    public static final RolePermission ROLE_PERMISSION = new RolePermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolePermissionRecord> getRecordType() {
        return RolePermissionRecord.class;
    }

    /**
     * The column <code>public.role_permission.role</code>.
     */
    public final TableField<RolePermissionRecord, Integer> ROLE = createField("role", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.role_permission.permission</code>.
     */
    public final TableField<RolePermissionRecord, String> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.role_permission</code> table reference
     */
    public RolePermission() {
        this("role_permission", null);
    }

    /**
     * Create an aliased <code>public.role_permission</code> table reference
     */
    public RolePermission(String alias) {
        this(alias, ROLE_PERMISSION);
    }

    private RolePermission(String alias, Table<RolePermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private RolePermission(String alias, Table<RolePermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RolePermissionRecord> getPrimaryKey() {
        return Keys.ROLE_PERMISSION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RolePermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<RolePermissionRecord>>asList(Keys.ROLE_PERMISSION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RolePermissionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RolePermissionRecord, ?>>asList(Keys.ROLE_PERMISSION__ROLE_PERMISSION_ROLE_FKEY, Keys.ROLE_PERMISSION__ROLE_PERMISSION_PERMISSION_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolePermission as(String alias) {
        return new RolePermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RolePermission rename(String name) {
        return new RolePermission(name, null);
    }
}
