/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.UserRoleRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserRole extends TableImpl<UserRoleRecord> {

    private static final long serialVersionUID = 914989972;

    /**
     * The reference instance of <code>public.user_role</code>
     */
    public static final UserRole USER_ROLE = new UserRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRoleRecord> getRecordType() {
        return UserRoleRecord.class;
    }

    /**
     * The column <code>public.user_role.username</code>.
     */
    public final TableField<UserRoleRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.user_role.role</code>.
     */
    public final TableField<UserRoleRecord, Integer> ROLE = createField("role", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.user_role.scope_id</code>.
     */
    public final TableField<UserRoleRecord, String> SCOPE_ID = createField("scope_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.user_role</code> table reference
     */
    public UserRole() {
        this("user_role", null);
    }

    /**
     * Create an aliased <code>public.user_role</code> table reference
     */
    public UserRole(String alias) {
        this(alias, USER_ROLE);
    }

    private UserRole(String alias, Table<UserRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserRole(String alias, Table<UserRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserRoleRecord> getPrimaryKey() {
        return Keys.USER_ROLE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRoleRecord>>asList(Keys.USER_ROLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserRoleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserRoleRecord, ?>>asList(Keys.USER_ROLE__USER_ROLE_USERNAME_FKEY, Keys.USER_ROLE__USER_ROLE_ROLE_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRole as(String alias) {
        return new UserRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserRole rename(String name) {
        return new UserRole(name, null);
    }
}
