/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables.records;


import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.api.db.tables.UserRole;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserRoleRecord extends UpdatableRecordImpl<UserRoleRecord> implements Record3<String, Integer, String> {

    private static final long serialVersionUID = -1884394542;

    /**
     * Setter for <code>public.user_role.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_role.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.user_role.role</code>.
     */
    public void setRole(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_role.role</code>.
     */
    public Integer getRole() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.user_role.scope_id</code>.
     */
    public void setScopeId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_role.scope_id</code>.
     */
    public String getScopeId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<String, Integer, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return UserRole.USER_ROLE.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return UserRole.USER_ROLE.ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UserRole.USER_ROLE.SCOPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getScopeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRoleRecord value1(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRoleRecord value2(Integer value) {
        setRole(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRoleRecord value3(String value) {
        setScopeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRoleRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRoleRecord
     */
    public UserRoleRecord() {
        super(UserRole.USER_ROLE);
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(String username, Integer role, String scopeId) {
        super(UserRole.USER_ROLE);

        set(0, username);
        set(1, role);
        set(2, scopeId);
    }
}
