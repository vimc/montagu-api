apply plugin: 'application'
mainClassName = "org.vaccineimpact.api.blackboxTests.AppKt"

dependencies {
    compile project(":testHelpers")

    testCompile "junit:junit:4.12"
    testCompile "org.assertj:assertj-core:3.9.1"

    testCompile "org.slf4j:slf4j-simple:1.7.25"

    testCompile "com.github.jkcclemens:khttp:0.1.0"
    testCompile "com.beust:klaxon:5.5"
    testCompile "com.opencsv:opencsv:4.1"
    testCompile "com.auth0:java-jwt:3.3.0"

    testCompile "com.github.fge:json-schema-validator:2.2.8"

    testCompile project(":testHelpers")
    testCompile project(":databaseInterface")
    testCompile project(":security")
    testCompile project(":validateSchema")
    testCompile project(":emails")
}

test {
    dependsOn 'copySpec', 'createTemplateFromDatabase'
    finalizedBy 'restoreDatabaseFromTemplate'
}

copyTestConfig.finalizedBy 'showTestConfig'

task createTemplateFromDatabase(type: JavaExec) {
    main = "org.vaccineimpact.api.blackboxTests.AppKt"
    classpath = sourceSets.main.runtimeClasspath
    args "createTemplateFromDatabase"
}

task restoreDatabaseFromTemplate(type: JavaExec) {
    main = "org.vaccineimpact.api.blackboxTests.AppKt"
    classpath = sourceSets.main.runtimeClasspath
    args "restoreDatabaseFromTemplate"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }

    sourceSets project(':app').sourceSets.main
    sourceSets project(':security').sourceSets.main
    sourceSets project(':emails').sourceSets.main
    sourceSets project(':models').sourceSets.main
}
