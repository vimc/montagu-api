/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.api.db.tables.TouchstoneName;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TouchstoneNameRecord extends UpdatableRecordImpl<TouchstoneNameRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.touchstone_name.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.touchstone_name.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.touchstone_name.description</code>.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.touchstone_name.description</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.touchstone_name.comment</code>.
     */
    public void setComment(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.touchstone_name.comment</code>.
     */
    public String getComment() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TouchstoneName.TOUCHSTONE_NAME.ID;
    }

    @Override
    public Field<String> field2() {
        return TouchstoneName.TOUCHSTONE_NAME.DESCRIPTION;
    }

    @Override
    public Field<String> field3() {
        return TouchstoneName.TOUCHSTONE_NAME.COMMENT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public String component3() {
        return getComment();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public String value3() {
        return getComment();
    }

    @Override
    public TouchstoneNameRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TouchstoneNameRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TouchstoneNameRecord value3(String value) {
        setComment(value);
        return this;
    }

    @Override
    public TouchstoneNameRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TouchstoneNameRecord
     */
    public TouchstoneNameRecord() {
        super(TouchstoneName.TOUCHSTONE_NAME);
    }

    /**
     * Create a detached, initialised TouchstoneNameRecord
     */
    public TouchstoneNameRecord(String id, String description, String comment) {
        super(TouchstoneName.TOUCHSTONE_NAME);

        setId(id);
        setDescription(description);
        setComment(comment);
    }
}
