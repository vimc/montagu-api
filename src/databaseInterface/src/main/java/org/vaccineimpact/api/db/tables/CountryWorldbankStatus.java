/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.CountryWorldbankStatusRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryWorldbankStatus extends TableImpl<CountryWorldbankStatusRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.country_worldbank_status</code>
     */
    public static final CountryWorldbankStatus COUNTRY_WORLDBANK_STATUS = new CountryWorldbankStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CountryWorldbankStatusRecord> getRecordType() {
        return CountryWorldbankStatusRecord.class;
    }

    /**
     * The column <code>public.country_worldbank_status.id</code>.
     */
    public final TableField<CountryWorldbankStatusRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.country_worldbank_status.touchstone</code>.
     */
    public final TableField<CountryWorldbankStatusRecord, String> TOUCHSTONE = createField(DSL.name("touchstone"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_worldbank_status.country</code>.
     */
    public final TableField<CountryWorldbankStatusRecord, String> COUNTRY = createField(DSL.name("country"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_worldbank_status.year</code>.
     */
    public final TableField<CountryWorldbankStatusRecord, Integer> YEAR = createField(DSL.name("year"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.country_worldbank_status.worldbank_status</code>.
     */
    public final TableField<CountryWorldbankStatusRecord, String> WORLDBANK_STATUS = createField(DSL.name("worldbank_status"), SQLDataType.CLOB.nullable(false), this, "");

    private CountryWorldbankStatus(Name alias, Table<CountryWorldbankStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private CountryWorldbankStatus(Name alias, Table<CountryWorldbankStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.country_worldbank_status</code> table
     * reference
     */
    public CountryWorldbankStatus(String alias) {
        this(DSL.name(alias), COUNTRY_WORLDBANK_STATUS);
    }

    /**
     * Create an aliased <code>public.country_worldbank_status</code> table
     * reference
     */
    public CountryWorldbankStatus(Name alias) {
        this(alias, COUNTRY_WORLDBANK_STATUS);
    }

    /**
     * Create a <code>public.country_worldbank_status</code> table reference
     */
    public CountryWorldbankStatus() {
        this(DSL.name("country_worldbank_status"), null);
    }

    public <O extends Record> CountryWorldbankStatus(Table<O> child, ForeignKey<O, CountryWorldbankStatusRecord> key) {
        super(child, key, COUNTRY_WORLDBANK_STATUS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<CountryWorldbankStatusRecord, Integer> getIdentity() {
        return (Identity<CountryWorldbankStatusRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CountryWorldbankStatusRecord> getPrimaryKey() {
        return Keys.COUNTRY_WORLDBANK_STATUS_PKEY;
    }

    @Override
    public List<UniqueKey<CountryWorldbankStatusRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.COUNTRY_WORLDBANK_STATUS_TOUCHSTONE_COUNTRY_YEAR_KEY);
    }

    @Override
    public List<ForeignKey<CountryWorldbankStatusRecord, ?>> getReferences() {
        return Arrays.asList(Keys.COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_TOUCHSTONE_FKEY, Keys.COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_COUNTRY_FKEY, Keys.COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_WORLDBANK_STATUS_FKEY);
    }

    private transient Touchstone _touchstone;
    private transient Country _country;
    private transient WorldbankStatus _worldbankStatus;

    /**
     * Get the implicit join path to the <code>public.touchstone</code> table.
     */
    public Touchstone touchstone() {
        if (_touchstone == null)
            _touchstone = new Touchstone(this, Keys.COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_TOUCHSTONE_FKEY);

        return _touchstone;
    }

    /**
     * Get the implicit join path to the <code>public.country</code> table.
     */
    public Country country() {
        if (_country == null)
            _country = new Country(this, Keys.COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_COUNTRY_FKEY);

        return _country;
    }

    /**
     * Get the implicit join path to the <code>public.worldbank_status</code>
     * table.
     */
    public WorldbankStatus worldbankStatus() {
        if (_worldbankStatus == null)
            _worldbankStatus = new WorldbankStatus(this, Keys.COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_WORLDBANK_STATUS_FKEY);

        return _worldbankStatus;
    }

    @Override
    public CountryWorldbankStatus as(String alias) {
        return new CountryWorldbankStatus(DSL.name(alias), this);
    }

    @Override
    public CountryWorldbankStatus as(Name alias) {
        return new CountryWorldbankStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryWorldbankStatus rename(String name) {
        return new CountryWorldbankStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryWorldbankStatus rename(Name name) {
        return new CountryWorldbankStatus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
