/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.ImpactEstimateIngredientRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImpactEstimateIngredient extends TableImpl<ImpactEstimateIngredientRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.impact_estimate_ingredient</code>
     */
    public static final ImpactEstimateIngredient IMPACT_ESTIMATE_INGREDIENT = new ImpactEstimateIngredient();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ImpactEstimateIngredientRecord> getRecordType() {
        return ImpactEstimateIngredientRecord.class;
    }

    /**
     * The column <code>public.impact_estimate_ingredient.id</code>.
     */
    public final TableField<ImpactEstimateIngredientRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>public.impact_estimate_ingredient.impact_estimate_recipe</code>.
     */
    public final TableField<ImpactEstimateIngredientRecord, Integer> IMPACT_ESTIMATE_RECIPE = createField(DSL.name("impact_estimate_recipe"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_ingredient.responsibility</code>.
     */
    public final TableField<ImpactEstimateIngredientRecord, Integer> RESPONSIBILITY = createField(DSL.name("responsibility"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_ingredient.burden_outcome</code>.
     */
    public final TableField<ImpactEstimateIngredientRecord, Short> BURDEN_OUTCOME = createField(DSL.name("burden_outcome"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_ingredient.name</code>.
     */
    public final TableField<ImpactEstimateIngredientRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

    private ImpactEstimateIngredient(Name alias, Table<ImpactEstimateIngredientRecord> aliased) {
        this(alias, aliased, null);
    }

    private ImpactEstimateIngredient(Name alias, Table<ImpactEstimateIngredientRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.impact_estimate_ingredient</code> table
     * reference
     */
    public ImpactEstimateIngredient(String alias) {
        this(DSL.name(alias), IMPACT_ESTIMATE_INGREDIENT);
    }

    /**
     * Create an aliased <code>public.impact_estimate_ingredient</code> table
     * reference
     */
    public ImpactEstimateIngredient(Name alias) {
        this(alias, IMPACT_ESTIMATE_INGREDIENT);
    }

    /**
     * Create a <code>public.impact_estimate_ingredient</code> table reference
     */
    public ImpactEstimateIngredient() {
        this(DSL.name("impact_estimate_ingredient"), null);
    }

    public <O extends Record> ImpactEstimateIngredient(Table<O> child, ForeignKey<O, ImpactEstimateIngredientRecord> key) {
        super(child, key, IMPACT_ESTIMATE_INGREDIENT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ImpactEstimateIngredientRecord, Integer> getIdentity() {
        return (Identity<ImpactEstimateIngredientRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<ImpactEstimateIngredientRecord> getPrimaryKey() {
        return Keys.IMPACT_ESTIMATE_INGREDIENT_PKEY;
    }

    @Override
    public List<UniqueKey<ImpactEstimateIngredientRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.IMPACT_ESTIMATE_INGREDIENT_RESPONSIBILITY_IMPACT_ESTIMATE_R_KEY);
    }

    @Override
    public List<ForeignKey<ImpactEstimateIngredientRecord, ?>> getReferences() {
        return Arrays.asList(Keys.IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_IMPACT_ESTIMATE_RECIPE_FKEY, Keys.IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_RESPONSIBILITY_FKEY, Keys.IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_BURDEN_OUTCOME_FKEY);
    }

    private transient ImpactEstimateRecipe _impactEstimateRecipe;
    private transient Responsibility _responsibility;
    private transient BurdenOutcome _burdenOutcome;

    /**
     * Get the implicit join path to the
     * <code>public.impact_estimate_recipe</code> table.
     */
    public ImpactEstimateRecipe impactEstimateRecipe() {
        if (_impactEstimateRecipe == null)
            _impactEstimateRecipe = new ImpactEstimateRecipe(this, Keys.IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_IMPACT_ESTIMATE_RECIPE_FKEY);

        return _impactEstimateRecipe;
    }

    /**
     * Get the implicit join path to the <code>public.responsibility</code>
     * table.
     */
    public Responsibility responsibility() {
        if (_responsibility == null)
            _responsibility = new Responsibility(this, Keys.IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_RESPONSIBILITY_FKEY);

        return _responsibility;
    }

    /**
     * Get the implicit join path to the <code>public.burden_outcome</code>
     * table.
     */
    public BurdenOutcome burdenOutcome() {
        if (_burdenOutcome == null)
            _burdenOutcome = new BurdenOutcome(this, Keys.IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_BURDEN_OUTCOME_FKEY);

        return _burdenOutcome;
    }

    @Override
    public ImpactEstimateIngredient as(String alias) {
        return new ImpactEstimateIngredient(DSL.name(alias), this);
    }

    @Override
    public ImpactEstimateIngredient as(Name alias) {
        return new ImpactEstimateIngredient(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ImpactEstimateIngredient rename(String name) {
        return new ImpactEstimateIngredient(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ImpactEstimateIngredient rename(Name name) {
        return new ImpactEstimateIngredient(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Short, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
