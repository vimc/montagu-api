/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.vaccineimpact.api.db.tables.ActivityType;
import org.vaccineimpact.api.db.tables.ApiAccessLog;
import org.vaccineimpact.api.db.tables.AppUser;
import org.vaccineimpact.api.db.tables.BurdenEstimate;
import org.vaccineimpact.api.db.tables.BurdenEstimateCountryExpectation;
import org.vaccineimpact.api.db.tables.BurdenEstimateExpectation;
import org.vaccineimpact.api.db.tables.BurdenEstimateOutcomeExpectation;
import org.vaccineimpact.api.db.tables.BurdenEstimateSet;
import org.vaccineimpact.api.db.tables.BurdenEstimateSetProblem;
import org.vaccineimpact.api.db.tables.BurdenEstimateSetStatus;
import org.vaccineimpact.api.db.tables.BurdenEstimateSetType;
import org.vaccineimpact.api.db.tables.BurdenOutcome;
import org.vaccineimpact.api.db.tables.CofinanceStatus;
import org.vaccineimpact.api.db.tables.Country;
import org.vaccineimpact.api.db.tables.CountryCofinance;
import org.vaccineimpact.api.db.tables.CountryDiseaseEndemic;
import org.vaccineimpact.api.db.tables.CountryFragility;
import org.vaccineimpact.api.db.tables.CountryMetadata;
import org.vaccineimpact.api.db.tables.CountryVaccineMetadata;
import org.vaccineimpact.api.db.tables.CountryWorldbankStatus;
import org.vaccineimpact.api.db.tables.Coverage;
import org.vaccineimpact.api.db.tables.CoverageSet;
import org.vaccineimpact.api.db.tables.CoverageSetUploadMetadata;
import org.vaccineimpact.api.db.tables.DemographicDataset;
import org.vaccineimpact.api.db.tables.DemographicSource;
import org.vaccineimpact.api.db.tables.DemographicStatistic;
import org.vaccineimpact.api.db.tables.DemographicStatisticType;
import org.vaccineimpact.api.db.tables.DemographicStatisticTypeVariant;
import org.vaccineimpact.api.db.tables.DemographicSubnationalStatistic;
import org.vaccineimpact.api.db.tables.DemographicValueUnit;
import org.vaccineimpact.api.db.tables.DemographicVariant;
import org.vaccineimpact.api.db.tables.DisabilityWeight;
import org.vaccineimpact.api.db.tables.Disease;
import org.vaccineimpact.api.db.tables.FlywaySchemaHistory;
import org.vaccineimpact.api.db.tables.FrancophoneStatus;
import org.vaccineimpact.api.db.tables.GaviEligibility;
import org.vaccineimpact.api.db.tables.GaviEligibilityStatus;
import org.vaccineimpact.api.db.tables.GaviFocalModel;
import org.vaccineimpact.api.db.tables.GaviRegion;
import org.vaccineimpact.api.db.tables.GaviSupportLevel;
import org.vaccineimpact.api.db.tables.Gender;
import org.vaccineimpact.api.db.tables.ImpactEstimate;
import org.vaccineimpact.api.db.tables.ImpactEstimateIngredient;
import org.vaccineimpact.api.db.tables.ImpactEstimateRecipe;
import org.vaccineimpact.api.db.tables.ImpactEstimateSet;
import org.vaccineimpact.api.db.tables.ImpactEstimateSetIngredient;
import org.vaccineimpact.api.db.tables.ImpactOutcome;
import org.vaccineimpact.api.db.tables.LegalAgreement;
import org.vaccineimpact.api.db.tables.Model;
import org.vaccineimpact.api.db.tables.ModelRun;
import org.vaccineimpact.api.db.tables.ModelRunParameter;
import org.vaccineimpact.api.db.tables.ModelRunParameterSet;
import org.vaccineimpact.api.db.tables.ModelRunParameterValue;
import org.vaccineimpact.api.db.tables.ModelVersion;
import org.vaccineimpact.api.db.tables.ModelVersionCountry;
import org.vaccineimpact.api.db.tables.ModellingGroup;
import org.vaccineimpact.api.db.tables.OnetimeToken;
import org.vaccineimpact.api.db.tables.Permission;
import org.vaccineimpact.api.db.tables.RegionSubnational;
import org.vaccineimpact.api.db.tables.Responsibility;
import org.vaccineimpact.api.db.tables.ResponsibilityComment;
import org.vaccineimpact.api.db.tables.ResponsibilitySet;
import org.vaccineimpact.api.db.tables.ResponsibilitySetComment;
import org.vaccineimpact.api.db.tables.ResponsibilitySetStatus;
import org.vaccineimpact.api.db.tables.Role;
import org.vaccineimpact.api.db.tables.RolePermission;
import org.vaccineimpact.api.db.tables.Scenario;
import org.vaccineimpact.api.db.tables.ScenarioCoverageSet;
import org.vaccineimpact.api.db.tables.ScenarioDescription;
import org.vaccineimpact.api.db.tables.ScenarioType;
import org.vaccineimpact.api.db.tables.SupportType;
import org.vaccineimpact.api.db.tables.Touchstone;
import org.vaccineimpact.api.db.tables.TouchstoneCountry;
import org.vaccineimpact.api.db.tables.TouchstoneDemographicDataset;
import org.vaccineimpact.api.db.tables.TouchstoneDemographicSource;
import org.vaccineimpact.api.db.tables.TouchstoneName;
import org.vaccineimpact.api.db.tables.TouchstoneStatus;
import org.vaccineimpact.api.db.tables.TouchstoneYears;
import org.vaccineimpact.api.db.tables.UploadInfo;
import org.vaccineimpact.api.db.tables.UserGroup;
import org.vaccineimpact.api.db.tables.UserGroupMembership;
import org.vaccineimpact.api.db.tables.UserGroupRole;
import org.vaccineimpact.api.db.tables.UserLegalAgreement;
import org.vaccineimpact.api.db.tables.Vaccine;
import org.vaccineimpact.api.db.tables.VaccineRoutineAge;
import org.vaccineimpact.api.db.tables.VxdelSegment;
import org.vaccineimpact.api.db.tables.WorldbankStatus;
import org.vaccineimpact.api.db.tables.records.ActivityTypeRecord;
import org.vaccineimpact.api.db.tables.records.ApiAccessLogRecord;
import org.vaccineimpact.api.db.tables.records.AppUserRecord;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateCountryExpectationRecord;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateExpectationRecord;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateOutcomeExpectationRecord;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateRecord;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateSetProblemRecord;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateSetRecord;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateSetStatusRecord;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateSetTypeRecord;
import org.vaccineimpact.api.db.tables.records.BurdenOutcomeRecord;
import org.vaccineimpact.api.db.tables.records.CofinanceStatusRecord;
import org.vaccineimpact.api.db.tables.records.CountryCofinanceRecord;
import org.vaccineimpact.api.db.tables.records.CountryDiseaseEndemicRecord;
import org.vaccineimpact.api.db.tables.records.CountryFragilityRecord;
import org.vaccineimpact.api.db.tables.records.CountryMetadataRecord;
import org.vaccineimpact.api.db.tables.records.CountryRecord;
import org.vaccineimpact.api.db.tables.records.CountryVaccineMetadataRecord;
import org.vaccineimpact.api.db.tables.records.CountryWorldbankStatusRecord;
import org.vaccineimpact.api.db.tables.records.CoverageRecord;
import org.vaccineimpact.api.db.tables.records.CoverageSetRecord;
import org.vaccineimpact.api.db.tables.records.CoverageSetUploadMetadataRecord;
import org.vaccineimpact.api.db.tables.records.DemographicDatasetRecord;
import org.vaccineimpact.api.db.tables.records.DemographicSourceRecord;
import org.vaccineimpact.api.db.tables.records.DemographicStatisticRecord;
import org.vaccineimpact.api.db.tables.records.DemographicStatisticTypeRecord;
import org.vaccineimpact.api.db.tables.records.DemographicStatisticTypeVariantRecord;
import org.vaccineimpact.api.db.tables.records.DemographicSubnationalStatisticRecord;
import org.vaccineimpact.api.db.tables.records.DemographicValueUnitRecord;
import org.vaccineimpact.api.db.tables.records.DemographicVariantRecord;
import org.vaccineimpact.api.db.tables.records.DisabilityWeightRecord;
import org.vaccineimpact.api.db.tables.records.DiseaseRecord;
import org.vaccineimpact.api.db.tables.records.FlywaySchemaHistoryRecord;
import org.vaccineimpact.api.db.tables.records.FrancophoneStatusRecord;
import org.vaccineimpact.api.db.tables.records.GaviEligibilityRecord;
import org.vaccineimpact.api.db.tables.records.GaviEligibilityStatusRecord;
import org.vaccineimpact.api.db.tables.records.GaviFocalModelRecord;
import org.vaccineimpact.api.db.tables.records.GaviRegionRecord;
import org.vaccineimpact.api.db.tables.records.GaviSupportLevelRecord;
import org.vaccineimpact.api.db.tables.records.GenderRecord;
import org.vaccineimpact.api.db.tables.records.ImpactEstimateIngredientRecord;
import org.vaccineimpact.api.db.tables.records.ImpactEstimateRecipeRecord;
import org.vaccineimpact.api.db.tables.records.ImpactEstimateRecord;
import org.vaccineimpact.api.db.tables.records.ImpactEstimateSetIngredientRecord;
import org.vaccineimpact.api.db.tables.records.ImpactEstimateSetRecord;
import org.vaccineimpact.api.db.tables.records.ImpactOutcomeRecord;
import org.vaccineimpact.api.db.tables.records.LegalAgreementRecord;
import org.vaccineimpact.api.db.tables.records.ModelRecord;
import org.vaccineimpact.api.db.tables.records.ModelRunParameterRecord;
import org.vaccineimpact.api.db.tables.records.ModelRunParameterSetRecord;
import org.vaccineimpact.api.db.tables.records.ModelRunParameterValueRecord;
import org.vaccineimpact.api.db.tables.records.ModelRunRecord;
import org.vaccineimpact.api.db.tables.records.ModelVersionCountryRecord;
import org.vaccineimpact.api.db.tables.records.ModelVersionRecord;
import org.vaccineimpact.api.db.tables.records.ModellingGroupRecord;
import org.vaccineimpact.api.db.tables.records.OnetimeTokenRecord;
import org.vaccineimpact.api.db.tables.records.PermissionRecord;
import org.vaccineimpact.api.db.tables.records.RegionSubnationalRecord;
import org.vaccineimpact.api.db.tables.records.ResponsibilityCommentRecord;
import org.vaccineimpact.api.db.tables.records.ResponsibilityRecord;
import org.vaccineimpact.api.db.tables.records.ResponsibilitySetCommentRecord;
import org.vaccineimpact.api.db.tables.records.ResponsibilitySetRecord;
import org.vaccineimpact.api.db.tables.records.ResponsibilitySetStatusRecord;
import org.vaccineimpact.api.db.tables.records.RolePermissionRecord;
import org.vaccineimpact.api.db.tables.records.RoleRecord;
import org.vaccineimpact.api.db.tables.records.ScenarioCoverageSetRecord;
import org.vaccineimpact.api.db.tables.records.ScenarioDescriptionRecord;
import org.vaccineimpact.api.db.tables.records.ScenarioRecord;
import org.vaccineimpact.api.db.tables.records.ScenarioTypeRecord;
import org.vaccineimpact.api.db.tables.records.SupportTypeRecord;
import org.vaccineimpact.api.db.tables.records.TouchstoneCountryRecord;
import org.vaccineimpact.api.db.tables.records.TouchstoneDemographicDatasetRecord;
import org.vaccineimpact.api.db.tables.records.TouchstoneDemographicSourceRecord;
import org.vaccineimpact.api.db.tables.records.TouchstoneNameRecord;
import org.vaccineimpact.api.db.tables.records.TouchstoneRecord;
import org.vaccineimpact.api.db.tables.records.TouchstoneStatusRecord;
import org.vaccineimpact.api.db.tables.records.TouchstoneYearsRecord;
import org.vaccineimpact.api.db.tables.records.UploadInfoRecord;
import org.vaccineimpact.api.db.tables.records.UserGroupMembershipRecord;
import org.vaccineimpact.api.db.tables.records.UserGroupRecord;
import org.vaccineimpact.api.db.tables.records.UserGroupRoleRecord;
import org.vaccineimpact.api.db.tables.records.UserLegalAgreementRecord;
import org.vaccineimpact.api.db.tables.records.VaccineRecord;
import org.vaccineimpact.api.db.tables.records.VaccineRoutineAgeRecord;
import org.vaccineimpact.api.db.tables.records.VxdelSegmentRecord;
import org.vaccineimpact.api.db.tables.records.WorldbankStatusRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ActivityTypeRecord> ACTIVITY_TYPE_PKEY = Internal.createUniqueKey(ActivityType.ACTIVITY_TYPE, DSL.name("activity_type_pkey"), new TableField[] { ActivityType.ACTIVITY_TYPE.ID }, true);
    public static final UniqueKey<ApiAccessLogRecord> API_ACCESS_LOG_PKEY = Internal.createUniqueKey(ApiAccessLog.API_ACCESS_LOG, DSL.name("api_access_log_pkey"), new TableField[] { ApiAccessLog.API_ACCESS_LOG.ID }, true);
    public static final UniqueKey<AppUserRecord> APP_USER_PKEY = Internal.createUniqueKey(AppUser.APP_USER, DSL.name("app_user_pkey"), new TableField[] { AppUser.APP_USER.USERNAME }, true);
    public static final UniqueKey<BurdenEstimateRecord> BURDEN_ESTIMATE_UNIQUE = Internal.createUniqueKey(BurdenEstimate.BURDEN_ESTIMATE, DSL.name("burden_estimate_unique"), new TableField[] { BurdenEstimate.BURDEN_ESTIMATE.BURDEN_ESTIMATE_SET, BurdenEstimate.BURDEN_ESTIMATE.COUNTRY, BurdenEstimate.BURDEN_ESTIMATE.YEAR, BurdenEstimate.BURDEN_ESTIMATE.AGE, BurdenEstimate.BURDEN_ESTIMATE.BURDEN_OUTCOME }, true);
    public static final UniqueKey<BurdenEstimateCountryExpectationRecord> BURDEN_ESTIMATE_COUNTRY_EXPECTATION_PKEY = Internal.createUniqueKey(BurdenEstimateCountryExpectation.BURDEN_ESTIMATE_COUNTRY_EXPECTATION, DSL.name("burden_estimate_country_expectation_pkey"), new TableField[] { BurdenEstimateCountryExpectation.BURDEN_ESTIMATE_COUNTRY_EXPECTATION.BURDEN_ESTIMATE_EXPECTATION, BurdenEstimateCountryExpectation.BURDEN_ESTIMATE_COUNTRY_EXPECTATION.COUNTRY }, true);
    public static final UniqueKey<BurdenEstimateExpectationRecord> BURDEN_ESTIMATE_EXPECTATION_PKEY = Internal.createUniqueKey(BurdenEstimateExpectation.BURDEN_ESTIMATE_EXPECTATION, DSL.name("burden_estimate_expectation_pkey"), new TableField[] { BurdenEstimateExpectation.BURDEN_ESTIMATE_EXPECTATION.ID }, true);
    public static final UniqueKey<BurdenEstimateOutcomeExpectationRecord> BURDEN_ESTIMATE_OUTCOME_EXPECTATION_PKEY = Internal.createUniqueKey(BurdenEstimateOutcomeExpectation.BURDEN_ESTIMATE_OUTCOME_EXPECTATION, DSL.name("burden_estimate_outcome_expectation_pkey"), new TableField[] { BurdenEstimateOutcomeExpectation.BURDEN_ESTIMATE_OUTCOME_EXPECTATION.BURDEN_ESTIMATE_EXPECTATION, BurdenEstimateOutcomeExpectation.BURDEN_ESTIMATE_OUTCOME_EXPECTATION.OUTCOME }, true);
    public static final UniqueKey<BurdenEstimateSetRecord> BURDEN_ESTIMATE_SET_PKEY = Internal.createUniqueKey(BurdenEstimateSet.BURDEN_ESTIMATE_SET, DSL.name("burden_estimate_set_pkey"), new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.ID }, true);
    public static final UniqueKey<BurdenEstimateSetProblemRecord> BURDEN_ESTIMATE_SET_PROBLEM_PKEY = Internal.createUniqueKey(BurdenEstimateSetProblem.BURDEN_ESTIMATE_SET_PROBLEM, DSL.name("burden_estimate_set_problem_pkey"), new TableField[] { BurdenEstimateSetProblem.BURDEN_ESTIMATE_SET_PROBLEM.ID }, true);
    public static final UniqueKey<BurdenEstimateSetStatusRecord> BURDEN_ESTIMATE_SET_STATUS_PKEY = Internal.createUniqueKey(BurdenEstimateSetStatus.BURDEN_ESTIMATE_SET_STATUS, DSL.name("burden_estimate_set_status_pkey"), new TableField[] { BurdenEstimateSetStatus.BURDEN_ESTIMATE_SET_STATUS.CODE }, true);
    public static final UniqueKey<BurdenEstimateSetTypeRecord> BURDEN_ESTIMATE_SET_TYPE_PKEY = Internal.createUniqueKey(BurdenEstimateSetType.BURDEN_ESTIMATE_SET_TYPE, DSL.name("burden_estimate_set_type_pkey"), new TableField[] { BurdenEstimateSetType.BURDEN_ESTIMATE_SET_TYPE.CODE }, true);
    public static final UniqueKey<BurdenOutcomeRecord> BURDEN_OUTCOME_CODE_KEY = Internal.createUniqueKey(BurdenOutcome.BURDEN_OUTCOME, DSL.name("burden_outcome_code_key"), new TableField[] { BurdenOutcome.BURDEN_OUTCOME.CODE }, true);
    public static final UniqueKey<BurdenOutcomeRecord> BURDEN_OUTCOME_PKEY = Internal.createUniqueKey(BurdenOutcome.BURDEN_OUTCOME, DSL.name("burden_outcome_pkey"), new TableField[] { BurdenOutcome.BURDEN_OUTCOME.ID }, true);
    public static final UniqueKey<CofinanceStatusRecord> COFINANCE_STATUS_PKEY = Internal.createUniqueKey(CofinanceStatus.COFINANCE_STATUS, DSL.name("cofinance_status_pkey"), new TableField[] { CofinanceStatus.COFINANCE_STATUS.ID }, true);
    public static final UniqueKey<CountryRecord> COUNTRY_NID_UNIQUE = Internal.createUniqueKey(Country.COUNTRY, DSL.name("country_nid_unique"), new TableField[] { Country.COUNTRY.NID }, true);
    public static final UniqueKey<CountryRecord> COUNTRY_PKEY = Internal.createUniqueKey(Country.COUNTRY, DSL.name("country_pkey"), new TableField[] { Country.COUNTRY.ID }, true);
    public static final UniqueKey<CountryCofinanceRecord> COUNTRY_COFINANCE_PKEY = Internal.createUniqueKey(CountryCofinance.COUNTRY_COFINANCE, DSL.name("country_cofinance_pkey"), new TableField[] { CountryCofinance.COUNTRY_COFINANCE.ID }, true);
    public static final UniqueKey<CountryDiseaseEndemicRecord> COUNTRY_DISEASE_ENDEMIC_PKEY = Internal.createUniqueKey(CountryDiseaseEndemic.COUNTRY_DISEASE_ENDEMIC, DSL.name("country_disease_endemic_pkey"), new TableField[] { CountryDiseaseEndemic.COUNTRY_DISEASE_ENDEMIC.ID }, true);
    public static final UniqueKey<CountryFragilityRecord> COUNTRY_FRAGILITY_PKEY = Internal.createUniqueKey(CountryFragility.COUNTRY_FRAGILITY, DSL.name("country_fragility_pkey"), new TableField[] { CountryFragility.COUNTRY_FRAGILITY.ID }, true);
    public static final UniqueKey<CountryMetadataRecord> COUNTRY_METADATA_PKEY = Internal.createUniqueKey(CountryMetadata.COUNTRY_METADATA, DSL.name("country_metadata_pkey"), new TableField[] { CountryMetadata.COUNTRY_METADATA.ID }, true);
    public static final UniqueKey<CountryVaccineMetadataRecord> COUNTRY_VACCINE_METADATA_PKEY = Internal.createUniqueKey(CountryVaccineMetadata.COUNTRY_VACCINE_METADATA, DSL.name("country_vaccine_metadata_pkey"), new TableField[] { CountryVaccineMetadata.COUNTRY_VACCINE_METADATA.ID }, true);
    public static final UniqueKey<CountryWorldbankStatusRecord> COUNTRY_WORLDBANK_STATUS_PKEY = Internal.createUniqueKey(CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS, DSL.name("country_worldbank_status_pkey"), new TableField[] { CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS.ID }, true);
    public static final UniqueKey<CountryWorldbankStatusRecord> COUNTRY_WORLDBANK_STATUS_TOUCHSTONE_COUNTRY_YEAR_KEY = Internal.createUniqueKey(CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS, DSL.name("country_worldbank_status_touchstone_country_year_key"), new TableField[] { CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS.TOUCHSTONE, CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS.COUNTRY, CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS.YEAR }, true);
    public static final UniqueKey<CoverageRecord> COVERAGE_PKEY = Internal.createUniqueKey(Coverage.COVERAGE, DSL.name("coverage_pkey"), new TableField[] { Coverage.COVERAGE.ID }, true);
    public static final UniqueKey<CoverageSetRecord> COVERAGE_SET_PKEY = Internal.createUniqueKey(CoverageSet.COVERAGE_SET, DSL.name("coverage_set_pkey"), new TableField[] { CoverageSet.COVERAGE_SET.ID }, true);
    public static final UniqueKey<CoverageSetUploadMetadataRecord> COVERAGE_SET_UPLOAD_METADATA_PKEY = Internal.createUniqueKey(CoverageSetUploadMetadata.COVERAGE_SET_UPLOAD_METADATA, DSL.name("coverage_set_upload_metadata_pkey"), new TableField[] { CoverageSetUploadMetadata.COVERAGE_SET_UPLOAD_METADATA.ID }, true);
    public static final UniqueKey<DemographicDatasetRecord> DEMOGRAPHIC_DATASET_PKEY = Internal.createUniqueKey(DemographicDataset.DEMOGRAPHIC_DATASET, DSL.name("demographic_dataset_pkey"), new TableField[] { DemographicDataset.DEMOGRAPHIC_DATASET.ID }, true);
    public static final UniqueKey<DemographicSourceRecord> DEMOGRAPHIC_SOURCE_PKEY = Internal.createUniqueKey(DemographicSource.DEMOGRAPHIC_SOURCE, DSL.name("demographic_source_pkey"), new TableField[] { DemographicSource.DEMOGRAPHIC_SOURCE.ID }, true);
    public static final UniqueKey<DemographicStatisticRecord> DEMOGRAPHIC_STATISTIC_PKEY = Internal.createUniqueKey(DemographicStatistic.DEMOGRAPHIC_STATISTIC, DSL.name("demographic_statistic_pkey"), new TableField[] { DemographicStatistic.DEMOGRAPHIC_STATISTIC.ID }, true);
    public static final UniqueKey<DemographicStatisticTypeRecord> DEMOGRAPHIC_STATISTIC_TYPE_PKEY = Internal.createUniqueKey(DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE, DSL.name("demographic_statistic_type_pkey"), new TableField[] { DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE.ID }, true);
    public static final UniqueKey<DemographicStatisticTypeRecord> DEMOGRAPHIC_STATISTIC_TYPE_UNIQUE = Internal.createUniqueKey(DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE, DSL.name("demographic_statistic_type_unique"), new TableField[] { DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE.CODE }, true);
    public static final UniqueKey<DemographicStatisticTypeVariantRecord> DEMOGRAPHIC_STATISTIC_TYPE_VARIANT_PKEY = Internal.createUniqueKey(DemographicStatisticTypeVariant.DEMOGRAPHIC_STATISTIC_TYPE_VARIANT, DSL.name("demographic_statistic_type_variant_pkey"), new TableField[] { DemographicStatisticTypeVariant.DEMOGRAPHIC_STATISTIC_TYPE_VARIANT.DEMOGRAPHIC_STATISTIC_TYPE, DemographicStatisticTypeVariant.DEMOGRAPHIC_STATISTIC_TYPE_VARIANT.DEMOGRAPHIC_VARIANT }, true);
    public static final UniqueKey<DemographicValueUnitRecord> DEMOGRAPHIC_VALUE_UNIT_PKEY = Internal.createUniqueKey(DemographicValueUnit.DEMOGRAPHIC_VALUE_UNIT, DSL.name("demographic_value_unit_pkey"), new TableField[] { DemographicValueUnit.DEMOGRAPHIC_VALUE_UNIT.ID }, true);
    public static final UniqueKey<DemographicVariantRecord> DEMOGRAPHIC_VARIANT_PKEY = Internal.createUniqueKey(DemographicVariant.DEMOGRAPHIC_VARIANT, DSL.name("demographic_variant_pkey"), new TableField[] { DemographicVariant.DEMOGRAPHIC_VARIANT.ID }, true);
    public static final UniqueKey<DisabilityWeightRecord> DISABILITY_WEIGHT_PKEY = Internal.createUniqueKey(DisabilityWeight.DISABILITY_WEIGHT, DSL.name("disability_weight_pkey"), new TableField[] { DisabilityWeight.DISABILITY_WEIGHT.ID }, true);
    public static final UniqueKey<DiseaseRecord> DISEASE_PKEY = Internal.createUniqueKey(Disease.DISEASE, DSL.name("disease_pkey"), new TableField[] { Disease.DISEASE.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<FrancophoneStatusRecord> FRANCOPHONE_STATUS_PKEY = Internal.createUniqueKey(FrancophoneStatus.FRANCOPHONE_STATUS, DSL.name("francophone_status_pkey"), new TableField[] { FrancophoneStatus.FRANCOPHONE_STATUS.ID }, true);
    public static final UniqueKey<GaviEligibilityRecord> GAVI_ELIGIBILITY_PKEY = Internal.createUniqueKey(GaviEligibility.GAVI_ELIGIBILITY, DSL.name("gavi_eligibility_pkey"), new TableField[] { GaviEligibility.GAVI_ELIGIBILITY.ID }, true);
    public static final UniqueKey<GaviEligibilityRecord> GAVI_ELIGIBILITY_TOUCHSTONE_COUNTRY_YEAR_KEY = Internal.createUniqueKey(GaviEligibility.GAVI_ELIGIBILITY, DSL.name("gavi_eligibility_touchstone_country_year_key"), new TableField[] { GaviEligibility.GAVI_ELIGIBILITY.TOUCHSTONE, GaviEligibility.GAVI_ELIGIBILITY.COUNTRY, GaviEligibility.GAVI_ELIGIBILITY.YEAR }, true);
    public static final UniqueKey<GaviEligibilityStatusRecord> GAVI_ELIGIBILITY_STATUS_PKEY = Internal.createUniqueKey(GaviEligibilityStatus.GAVI_ELIGIBILITY_STATUS, DSL.name("gavi_eligibility_status_pkey"), new TableField[] { GaviEligibilityStatus.GAVI_ELIGIBILITY_STATUS.ID }, true);
    public static final UniqueKey<GaviFocalModelRecord> GAVI_FOCAL_MODEL_PKEY = Internal.createUniqueKey(GaviFocalModel.GAVI_FOCAL_MODEL, DSL.name("gavi_focal_model_pkey"), new TableField[] { GaviFocalModel.GAVI_FOCAL_MODEL.ID }, true);
    public static final UniqueKey<GaviRegionRecord> GAVI_REGION_PKEY = Internal.createUniqueKey(GaviRegion.GAVI_REGION, DSL.name("gavi_region_pkey"), new TableField[] { GaviRegion.GAVI_REGION.ID }, true);
    public static final UniqueKey<GaviSupportLevelRecord> GAVI_SUPPORT_LEVEL_PKEY = Internal.createUniqueKey(GaviSupportLevel.GAVI_SUPPORT_LEVEL, DSL.name("gavi_support_level_pkey"), new TableField[] { GaviSupportLevel.GAVI_SUPPORT_LEVEL.ID }, true);
    public static final UniqueKey<GenderRecord> GENDER_PKEY = Internal.createUniqueKey(Gender.GENDER, DSL.name("gender_pkey"), new TableField[] { Gender.GENDER.ID }, true);
    public static final UniqueKey<ImpactEstimateRecord> IMPACT_ESTIMATE_PKEY = Internal.createUniqueKey(ImpactEstimate.IMPACT_ESTIMATE, DSL.name("impact_estimate_pkey"), new TableField[] { ImpactEstimate.IMPACT_ESTIMATE.ID }, true);
    public static final UniqueKey<ImpactEstimateIngredientRecord> IMPACT_ESTIMATE_INGREDIENT_PKEY = Internal.createUniqueKey(ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT, DSL.name("impact_estimate_ingredient_pkey"), new TableField[] { ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.ID }, true);
    public static final UniqueKey<ImpactEstimateIngredientRecord> IMPACT_ESTIMATE_INGREDIENT_RESPONSIBILITY_IMPACT_ESTIMATE_R_KEY = Internal.createUniqueKey(ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT, DSL.name("impact_estimate_ingredient_responsibility_impact_estimate_r_key"), new TableField[] { ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.RESPONSIBILITY, ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.IMPACT_ESTIMATE_RECIPE, ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.BURDEN_OUTCOME, ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.NAME }, true);
    public static final UniqueKey<ImpactEstimateRecipeRecord> IMPACT_ESTIMATE_RECIPE_PKEY = Internal.createUniqueKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_pkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.ID }, true);
    public static final UniqueKey<ImpactEstimateSetRecord> IMPACT_ESTIMATE_SET_PKEY = Internal.createUniqueKey(ImpactEstimateSet.IMPACT_ESTIMATE_SET, DSL.name("impact_estimate_set_pkey"), new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.ID }, true);
    public static final UniqueKey<ImpactEstimateSetIngredientRecord> IMPACT_ESTIMATE_SET_INGREDIENT_PKEY = Internal.createUniqueKey(ImpactEstimateSetIngredient.IMPACT_ESTIMATE_SET_INGREDIENT, DSL.name("impact_estimate_set_ingredient_pkey"), new TableField[] { ImpactEstimateSetIngredient.IMPACT_ESTIMATE_SET_INGREDIENT.ID }, true);
    public static final UniqueKey<ImpactOutcomeRecord> IMPACT_OUTCOME_PKEY = Internal.createUniqueKey(ImpactOutcome.IMPACT_OUTCOME, DSL.name("impact_outcome_pkey"), new TableField[] { ImpactOutcome.IMPACT_OUTCOME.ID }, true);
    public static final UniqueKey<LegalAgreementRecord> LEGAL_AGREEMENT_PKEY = Internal.createUniqueKey(LegalAgreement.LEGAL_AGREEMENT, DSL.name("legal_agreement_pkey"), new TableField[] { LegalAgreement.LEGAL_AGREEMENT.NAME }, true);
    public static final UniqueKey<ModelRecord> MODEL_PKEY = Internal.createUniqueKey(Model.MODEL, DSL.name("model_pkey"), new TableField[] { Model.MODEL.ID }, true);
    public static final UniqueKey<ModelRunRecord> MODEL_RUN_PKEY = Internal.createUniqueKey(ModelRun.MODEL_RUN, DSL.name("model_run_pkey"), new TableField[] { ModelRun.MODEL_RUN.INTERNAL_ID }, true);
    public static final UniqueKey<ModelRunParameterRecord> MODEL_RUN_PARAMETER_KEY_MODEL_RUN_PARAMETER_SET_KEY = Internal.createUniqueKey(ModelRunParameter.MODEL_RUN_PARAMETER, DSL.name("model_run_parameter_key_model_run_parameter_set_key"), new TableField[] { ModelRunParameter.MODEL_RUN_PARAMETER.KEY, ModelRunParameter.MODEL_RUN_PARAMETER.MODEL_RUN_PARAMETER_SET }, true);
    public static final UniqueKey<ModelRunParameterRecord> MODEL_RUN_PARAMETER_PKEY = Internal.createUniqueKey(ModelRunParameter.MODEL_RUN_PARAMETER, DSL.name("model_run_parameter_pkey"), new TableField[] { ModelRunParameter.MODEL_RUN_PARAMETER.ID }, true);
    public static final UniqueKey<ModelRunParameterSetRecord> MODEL_RUN_PARAMETER_SET_PKEY = Internal.createUniqueKey(ModelRunParameterSet.MODEL_RUN_PARAMETER_SET, DSL.name("model_run_parameter_set_pkey"), new TableField[] { ModelRunParameterSet.MODEL_RUN_PARAMETER_SET.ID }, true);
    public static final UniqueKey<ModelRunParameterValueRecord> MODEL_RUN_PARAMETER_VALUE_MODEL_RUN_PARAMETER_MODEL_RUN_KEY = Internal.createUniqueKey(ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE, DSL.name("model_run_parameter_value_model_run_parameter_model_run_key"), new TableField[] { ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE.MODEL_RUN_PARAMETER, ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE.MODEL_RUN }, true);
    public static final UniqueKey<ModelRunParameterValueRecord> MODEL_RUN_PARAMETER_VALUE_PKEY = Internal.createUniqueKey(ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE, DSL.name("model_run_parameter_value_pkey"), new TableField[] { ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE.ID }, true);
    public static final UniqueKey<ModelVersionRecord> MODEL_VERSION_MODEL_VERSION_KEY = Internal.createUniqueKey(ModelVersion.MODEL_VERSION, DSL.name("model_version_model_version_key"), new TableField[] { ModelVersion.MODEL_VERSION.MODEL, ModelVersion.MODEL_VERSION.VERSION }, true);
    public static final UniqueKey<ModelVersionRecord> MODEL_VERSION_PKEY = Internal.createUniqueKey(ModelVersion.MODEL_VERSION, DSL.name("model_version_pkey"), new TableField[] { ModelVersion.MODEL_VERSION.ID }, true);
    public static final UniqueKey<ModelVersionCountryRecord> MODEL_VERSION_COUNTRY_PKEY = Internal.createUniqueKey(ModelVersionCountry.MODEL_VERSION_COUNTRY, DSL.name("model_version_country_pkey"), new TableField[] { ModelVersionCountry.MODEL_VERSION_COUNTRY.MODEL_VERSION, ModelVersionCountry.MODEL_VERSION_COUNTRY.COUNTRY }, true);
    public static final UniqueKey<ModellingGroupRecord> MODELLING_GROUP_PKEY = Internal.createUniqueKey(ModellingGroup.MODELLING_GROUP, DSL.name("modelling_group_pkey"), new TableField[] { ModellingGroup.MODELLING_GROUP.ID }, true);
    public static final UniqueKey<OnetimeTokenRecord> ONETIME_TOKEN_PKEY = Internal.createUniqueKey(OnetimeToken.ONETIME_TOKEN, DSL.name("onetime_token_pkey"), new TableField[] { OnetimeToken.ONETIME_TOKEN.ID }, true);
    public static final UniqueKey<PermissionRecord> PERMISSION_PKEY = Internal.createUniqueKey(Permission.PERMISSION, DSL.name("permission_pkey"), new TableField[] { Permission.PERMISSION.NAME }, true);
    public static final UniqueKey<RegionSubnationalRecord> REGION_SUBNATIONAL_ID_NAME_KEY = Internal.createUniqueKey(RegionSubnational.REGION_SUBNATIONAL, DSL.name("region_subnational_id_name_key"), new TableField[] { RegionSubnational.REGION_SUBNATIONAL.ID, RegionSubnational.REGION_SUBNATIONAL.NAME }, true);
    public static final UniqueKey<RegionSubnationalRecord> REGION_SUBNATIONAL_PKEY = Internal.createUniqueKey(RegionSubnational.REGION_SUBNATIONAL, DSL.name("region_subnational_pkey"), new TableField[] { RegionSubnational.REGION_SUBNATIONAL.ID }, true);
    public static final UniqueKey<ResponsibilityRecord> RESPONSIBILITY_PKEY = Internal.createUniqueKey(Responsibility.RESPONSIBILITY, DSL.name("responsibility_pkey"), new TableField[] { Responsibility.RESPONSIBILITY.ID }, true);
    public static final UniqueKey<ResponsibilityRecord> RESPONSIBILITY_RESPONSIBILITY_SET_SCENARIO_KEY = Internal.createUniqueKey(Responsibility.RESPONSIBILITY, DSL.name("responsibility_responsibility_set_scenario_key"), new TableField[] { Responsibility.RESPONSIBILITY.RESPONSIBILITY_SET, Responsibility.RESPONSIBILITY.SCENARIO }, true);
    public static final UniqueKey<ResponsibilityCommentRecord> RESPONSIBILITY_COMMENT_PKEY = Internal.createUniqueKey(ResponsibilityComment.RESPONSIBILITY_COMMENT, DSL.name("responsibility_comment_pkey"), new TableField[] { ResponsibilityComment.RESPONSIBILITY_COMMENT.ID }, true);
    public static final UniqueKey<ResponsibilitySetRecord> RESPONSIBILITY_SET_MODELLING_GROUP_TOUCHSTONE_KEY = Internal.createUniqueKey(ResponsibilitySet.RESPONSIBILITY_SET, DSL.name("responsibility_set_modelling_group_touchstone_key"), new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.MODELLING_GROUP, ResponsibilitySet.RESPONSIBILITY_SET.TOUCHSTONE }, true);
    public static final UniqueKey<ResponsibilitySetRecord> RESPONSIBILITY_SET_PKEY = Internal.createUniqueKey(ResponsibilitySet.RESPONSIBILITY_SET, DSL.name("responsibility_set_pkey"), new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.ID }, true);
    public static final UniqueKey<ResponsibilitySetCommentRecord> RESPONSIBILITY_SET_COMMENT_PKEY = Internal.createUniqueKey(ResponsibilitySetComment.RESPONSIBILITY_SET_COMMENT, DSL.name("responsibility_set_comment_pkey"), new TableField[] { ResponsibilitySetComment.RESPONSIBILITY_SET_COMMENT.ID }, true);
    public static final UniqueKey<ResponsibilitySetStatusRecord> RESPONSIBILITY_SET_STATUS_PKEY = Internal.createUniqueKey(ResponsibilitySetStatus.RESPONSIBILITY_SET_STATUS, DSL.name("responsibility_set_status_pkey"), new TableField[] { ResponsibilitySetStatus.RESPONSIBILITY_SET_STATUS.ID }, true);
    public static final UniqueKey<RoleRecord> ROLE_PKEY = Internal.createUniqueKey(Role.ROLE, DSL.name("role_pkey"), new TableField[] { Role.ROLE.ID }, true);
    public static final UniqueKey<RolePermissionRecord> ROLE_PERMISSION_PKEY = Internal.createUniqueKey(RolePermission.ROLE_PERMISSION, DSL.name("role_permission_pkey"), new TableField[] { RolePermission.ROLE_PERMISSION.ROLE, RolePermission.ROLE_PERMISSION.PERMISSION }, true);
    public static final UniqueKey<ScenarioRecord> SCENARIO_PKEY = Internal.createUniqueKey(Scenario.SCENARIO, DSL.name("scenario_pkey"), new TableField[] { Scenario.SCENARIO.ID }, true);
    public static final UniqueKey<ScenarioRecord> SCENARIO_TOUCHSTONE_SCENARIO_DESCRIPTION_KEY = Internal.createUniqueKey(Scenario.SCENARIO, DSL.name("scenario_touchstone_scenario_description_key"), new TableField[] { Scenario.SCENARIO.TOUCHSTONE, Scenario.SCENARIO.SCENARIO_DESCRIPTION }, true);
    public static final UniqueKey<ScenarioCoverageSetRecord> SCENARIO_COVERAGE_SET_PKEY = Internal.createUniqueKey(ScenarioCoverageSet.SCENARIO_COVERAGE_SET, DSL.name("scenario_coverage_set_pkey"), new TableField[] { ScenarioCoverageSet.SCENARIO_COVERAGE_SET.ID }, true);
    public static final UniqueKey<ScenarioCoverageSetRecord> SCENARIO_COVERAGE_SET_SCENARIO_ORDER_KEY = Internal.createUniqueKey(ScenarioCoverageSet.SCENARIO_COVERAGE_SET, DSL.name("scenario_coverage_set_scenario_order_key"), new TableField[] { ScenarioCoverageSet.SCENARIO_COVERAGE_SET.SCENARIO, ScenarioCoverageSet.SCENARIO_COVERAGE_SET.ORDER }, true);
    public static final UniqueKey<ScenarioDescriptionRecord> SCENARIO_DESCRIPTION_PKEY = Internal.createUniqueKey(ScenarioDescription.SCENARIO_DESCRIPTION, DSL.name("scenario_description_pkey"), new TableField[] { ScenarioDescription.SCENARIO_DESCRIPTION.ID }, true);
    public static final UniqueKey<ScenarioTypeRecord> SCENARIO_TYPE_PKEY = Internal.createUniqueKey(ScenarioType.SCENARIO_TYPE, DSL.name("scenario_type_pkey"), new TableField[] { ScenarioType.SCENARIO_TYPE.ID }, true);
    public static final UniqueKey<SupportTypeRecord> SUPPORT_TYPE_PKEY = Internal.createUniqueKey(SupportType.SUPPORT_TYPE, DSL.name("support_type_pkey"), new TableField[] { SupportType.SUPPORT_TYPE.ID }, true);
    public static final UniqueKey<TouchstoneRecord> TOUCHSTONE_PKEY = Internal.createUniqueKey(Touchstone.TOUCHSTONE, DSL.name("touchstone_pkey"), new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final UniqueKey<TouchstoneRecord> TOUCHSTONE_TOUCHSTONE_NAME_VERSION_KEY = Internal.createUniqueKey(Touchstone.TOUCHSTONE, DSL.name("touchstone_touchstone_name_version_key"), new TableField[] { Touchstone.TOUCHSTONE.TOUCHSTONE_NAME, Touchstone.TOUCHSTONE.VERSION }, true);
    public static final UniqueKey<TouchstoneCountryRecord> TOUCHSTONE_COUNTRY_PKEY = Internal.createUniqueKey(TouchstoneCountry.TOUCHSTONE_COUNTRY, DSL.name("touchstone_country_pkey"), new TableField[] { TouchstoneCountry.TOUCHSTONE_COUNTRY.ID }, true);
    public static final UniqueKey<TouchstoneDemographicDatasetRecord> TOUCHSTONE_DEMOGRAPHIC_DATASET_PKEY = Internal.createUniqueKey(TouchstoneDemographicDataset.TOUCHSTONE_DEMOGRAPHIC_DATASET, DSL.name("touchstone_demographic_dataset_pkey"), new TableField[] { TouchstoneDemographicDataset.TOUCHSTONE_DEMOGRAPHIC_DATASET.ID }, true);
    public static final UniqueKey<TouchstoneDemographicSourceRecord> TOUCHSTONE_DEMOGRAPHIC_SOURCE_PKEY = Internal.createUniqueKey(TouchstoneDemographicSource.TOUCHSTONE_DEMOGRAPHIC_SOURCE, DSL.name("touchstone_demographic_source_pkey"), new TableField[] { TouchstoneDemographicSource.TOUCHSTONE_DEMOGRAPHIC_SOURCE.ID }, true);
    public static final UniqueKey<TouchstoneNameRecord> TOUCHSTONE_NAME_PKEY = Internal.createUniqueKey(TouchstoneName.TOUCHSTONE_NAME, DSL.name("touchstone_name_pkey"), new TableField[] { TouchstoneName.TOUCHSTONE_NAME.ID }, true);
    public static final UniqueKey<TouchstoneStatusRecord> TOUCHSTONE_STATUS_PKEY = Internal.createUniqueKey(TouchstoneStatus.TOUCHSTONE_STATUS, DSL.name("touchstone_status_pkey"), new TableField[] { TouchstoneStatus.TOUCHSTONE_STATUS.ID }, true);
    public static final UniqueKey<TouchstoneYearsRecord> TOUCHSTONE_YEARS_PKEY = Internal.createUniqueKey(TouchstoneYears.TOUCHSTONE_YEARS, DSL.name("touchstone_years_pkey"), new TableField[] { TouchstoneYears.TOUCHSTONE_YEARS.ID }, true);
    public static final UniqueKey<UploadInfoRecord> UPLOAD_INFO_PKEY = Internal.createUniqueKey(UploadInfo.UPLOAD_INFO, DSL.name("upload_info_pkey"), new TableField[] { UploadInfo.UPLOAD_INFO.ID }, true);
    public static final UniqueKey<UserGroupRecord> USER_GROUP_PKEY = Internal.createUniqueKey(UserGroup.USER_GROUP, DSL.name("user_group_pkey"), new TableField[] { UserGroup.USER_GROUP.ID }, true);
    public static final UniqueKey<UserGroupMembershipRecord> USER_GROUP_MEMBERSHIP_PKEY = Internal.createUniqueKey(UserGroupMembership.USER_GROUP_MEMBERSHIP, DSL.name("user_group_membership_pkey"), new TableField[] { UserGroupMembership.USER_GROUP_MEMBERSHIP.USERNAME, UserGroupMembership.USER_GROUP_MEMBERSHIP.USER_GROUP }, true);
    public static final UniqueKey<UserGroupRoleRecord> USER_GROUP_ROLE_PKEY = Internal.createUniqueKey(UserGroupRole.USER_GROUP_ROLE, DSL.name("user_group_role_pkey"), new TableField[] { UserGroupRole.USER_GROUP_ROLE.USER_GROUP, UserGroupRole.USER_GROUP_ROLE.ROLE, UserGroupRole.USER_GROUP_ROLE.SCOPE_ID }, true);
    public static final UniqueKey<VaccineRecord> VACCINE_PKEY = Internal.createUniqueKey(Vaccine.VACCINE, DSL.name("vaccine_pkey"), new TableField[] { Vaccine.VACCINE.ID }, true);
    public static final UniqueKey<VaccineRoutineAgeRecord> VACCINE_ROUTINE_AGE_PKEY = Internal.createUniqueKey(VaccineRoutineAge.VACCINE_ROUTINE_AGE, DSL.name("vaccine_routine_age_pkey"), new TableField[] { VaccineRoutineAge.VACCINE_ROUTINE_AGE.ID }, true);
    public static final UniqueKey<VxdelSegmentRecord> VXDEL_SEGMENT_PKEY = Internal.createUniqueKey(VxdelSegment.VXDEL_SEGMENT, DSL.name("vxdel_segment_pkey"), new TableField[] { VxdelSegment.VXDEL_SEGMENT.ID }, true);
    public static final UniqueKey<WorldbankStatusRecord> WORLDBANK_STATUS_PKEY = Internal.createUniqueKey(WorldbankStatus.WORLDBANK_STATUS, DSL.name("worldbank_status_pkey"), new TableField[] { WorldbankStatus.WORLDBANK_STATUS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ApiAccessLogRecord, AppUserRecord> API_ACCESS_LOG__API_ACCESS_LOG_WHO_FKEY = Internal.createForeignKey(ApiAccessLog.API_ACCESS_LOG, DSL.name("api_access_log_who_fkey"), new TableField[] { ApiAccessLog.API_ACCESS_LOG.WHO }, Keys.APP_USER_PKEY, new TableField[] { AppUser.APP_USER.USERNAME }, true);
    public static final ForeignKey<BurdenEstimateRecord, BurdenEstimateSetRecord> BURDEN_ESTIMATE__BURDEN_ESTIMATE_BURDEN_ESTIMATE_SET = Internal.createForeignKey(BurdenEstimate.BURDEN_ESTIMATE, DSL.name("burden_estimate_burden_estimate_set"), new TableField[] { BurdenEstimate.BURDEN_ESTIMATE.BURDEN_ESTIMATE_SET }, Keys.BURDEN_ESTIMATE_SET_PKEY, new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<BurdenEstimateRecord, BurdenOutcomeRecord> BURDEN_ESTIMATE__BURDEN_ESTIMATE_BURDEN_OUTCOME = Internal.createForeignKey(BurdenEstimate.BURDEN_ESTIMATE, DSL.name("burden_estimate_burden_outcome"), new TableField[] { BurdenEstimate.BURDEN_ESTIMATE.BURDEN_OUTCOME }, Keys.BURDEN_OUTCOME_PKEY, new TableField[] { BurdenOutcome.BURDEN_OUTCOME.ID }, true);
    public static final ForeignKey<BurdenEstimateRecord, CountryRecord> BURDEN_ESTIMATE__BURDEN_ESTIMATE_COUNTRY_NID = Internal.createForeignKey(BurdenEstimate.BURDEN_ESTIMATE, DSL.name("burden_estimate_country_nid"), new TableField[] { BurdenEstimate.BURDEN_ESTIMATE.COUNTRY }, Keys.COUNTRY_NID_UNIQUE, new TableField[] { Country.COUNTRY.NID }, true);
    public static final ForeignKey<BurdenEstimateRecord, ModelRunRecord> BURDEN_ESTIMATE__BURDEN_ESTIMATE_MODEL_RUN = Internal.createForeignKey(BurdenEstimate.BURDEN_ESTIMATE, DSL.name("burden_estimate_model_run"), new TableField[] { BurdenEstimate.BURDEN_ESTIMATE.MODEL_RUN }, Keys.MODEL_RUN_PKEY, new TableField[] { ModelRun.MODEL_RUN.INTERNAL_ID }, true);
    public static final ForeignKey<BurdenEstimateCountryExpectationRecord, BurdenEstimateExpectationRecord> BURDEN_ESTIMATE_COUNTRY_EXPECTATION__BURDEN_ESTIMATE_COUNTRY_EXPECT_BURDEN_ESTIMATE_EXPECTATION_FKEY = Internal.createForeignKey(BurdenEstimateCountryExpectation.BURDEN_ESTIMATE_COUNTRY_EXPECTATION, DSL.name("burden_estimate_country_expect_burden_estimate_expectation_fkey"), new TableField[] { BurdenEstimateCountryExpectation.BURDEN_ESTIMATE_COUNTRY_EXPECTATION.BURDEN_ESTIMATE_EXPECTATION }, Keys.BURDEN_ESTIMATE_EXPECTATION_PKEY, new TableField[] { BurdenEstimateExpectation.BURDEN_ESTIMATE_EXPECTATION.ID }, true);
    public static final ForeignKey<BurdenEstimateCountryExpectationRecord, CountryRecord> BURDEN_ESTIMATE_COUNTRY_EXPECTATION__BURDEN_ESTIMATE_COUNTRY_EXPECTATION_COUNTRY_FKEY = Internal.createForeignKey(BurdenEstimateCountryExpectation.BURDEN_ESTIMATE_COUNTRY_EXPECTATION, DSL.name("burden_estimate_country_expectation_country_fkey"), new TableField[] { BurdenEstimateCountryExpectation.BURDEN_ESTIMATE_COUNTRY_EXPECTATION.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<BurdenEstimateOutcomeExpectationRecord, BurdenEstimateExpectationRecord> BURDEN_ESTIMATE_OUTCOME_EXPECTATION__BURDEN_ESTIMATE_OUTCOME_EXPECT_BURDEN_ESTIMATE_EXPECTATION_FKEY = Internal.createForeignKey(BurdenEstimateOutcomeExpectation.BURDEN_ESTIMATE_OUTCOME_EXPECTATION, DSL.name("burden_estimate_outcome_expect_burden_estimate_expectation_fkey"), new TableField[] { BurdenEstimateOutcomeExpectation.BURDEN_ESTIMATE_OUTCOME_EXPECTATION.BURDEN_ESTIMATE_EXPECTATION }, Keys.BURDEN_ESTIMATE_EXPECTATION_PKEY, new TableField[] { BurdenEstimateExpectation.BURDEN_ESTIMATE_EXPECTATION.ID }, true);
    public static final ForeignKey<BurdenEstimateOutcomeExpectationRecord, BurdenOutcomeRecord> BURDEN_ESTIMATE_OUTCOME_EXPECTATION__BURDEN_ESTIMATE_OUTCOME_EXPECTATION_OUTCOME_FKEY = Internal.createForeignKey(BurdenEstimateOutcomeExpectation.BURDEN_ESTIMATE_OUTCOME_EXPECTATION, DSL.name("burden_estimate_outcome_expectation_outcome_fkey"), new TableField[] { BurdenEstimateOutcomeExpectation.BURDEN_ESTIMATE_OUTCOME_EXPECTATION.OUTCOME }, Keys.BURDEN_OUTCOME_CODE_KEY, new TableField[] { BurdenOutcome.BURDEN_OUTCOME.CODE }, true);
    public static final ForeignKey<BurdenEstimateSetRecord, ModelRunParameterSetRecord> BURDEN_ESTIMATE_SET__BURDEN_ESTIMATE_SET_MODEL_RUN_PARAMETER_SET_FKEY = Internal.createForeignKey(BurdenEstimateSet.BURDEN_ESTIMATE_SET, DSL.name("burden_estimate_set_model_run_parameter_set_fkey"), new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.MODEL_RUN_PARAMETER_SET }, Keys.MODEL_RUN_PARAMETER_SET_PKEY, new TableField[] { ModelRunParameterSet.MODEL_RUN_PARAMETER_SET.ID }, true);
    public static final ForeignKey<BurdenEstimateSetRecord, ModelVersionRecord> BURDEN_ESTIMATE_SET__BURDEN_ESTIMATE_SET_MODEL_VERSION_FKEY = Internal.createForeignKey(BurdenEstimateSet.BURDEN_ESTIMATE_SET, DSL.name("burden_estimate_set_model_version_fkey"), new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.MODEL_VERSION }, Keys.MODEL_VERSION_PKEY, new TableField[] { ModelVersion.MODEL_VERSION.ID }, true);
    public static final ForeignKey<BurdenEstimateSetRecord, ResponsibilityRecord> BURDEN_ESTIMATE_SET__BURDEN_ESTIMATE_SET_RESPONSIBILITY_FKEY = Internal.createForeignKey(BurdenEstimateSet.BURDEN_ESTIMATE_SET, DSL.name("burden_estimate_set_responsibility_fkey"), new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.RESPONSIBILITY }, Keys.RESPONSIBILITY_PKEY, new TableField[] { Responsibility.RESPONSIBILITY.ID }, true);
    public static final ForeignKey<BurdenEstimateSetRecord, BurdenEstimateSetTypeRecord> BURDEN_ESTIMATE_SET__BURDEN_ESTIMATE_SET_SET_TYPE_FKEY = Internal.createForeignKey(BurdenEstimateSet.BURDEN_ESTIMATE_SET, DSL.name("burden_estimate_set_set_type_fkey"), new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.SET_TYPE }, Keys.BURDEN_ESTIMATE_SET_TYPE_PKEY, new TableField[] { BurdenEstimateSetType.BURDEN_ESTIMATE_SET_TYPE.CODE }, true);
    public static final ForeignKey<BurdenEstimateSetRecord, BurdenEstimateSetStatusRecord> BURDEN_ESTIMATE_SET__BURDEN_ESTIMATE_SET_STATUS_FKEY = Internal.createForeignKey(BurdenEstimateSet.BURDEN_ESTIMATE_SET, DSL.name("burden_estimate_set_status_fkey"), new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.STATUS }, Keys.BURDEN_ESTIMATE_SET_STATUS_PKEY, new TableField[] { BurdenEstimateSetStatus.BURDEN_ESTIMATE_SET_STATUS.CODE }, true);
    public static final ForeignKey<BurdenEstimateSetRecord, AppUserRecord> BURDEN_ESTIMATE_SET__BURDEN_ESTIMATE_SET_UPLOADED_BY_FKEY = Internal.createForeignKey(BurdenEstimateSet.BURDEN_ESTIMATE_SET, DSL.name("burden_estimate_set_uploaded_by_fkey"), new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.UPLOADED_BY }, Keys.APP_USER_PKEY, new TableField[] { AppUser.APP_USER.USERNAME }, true);
    public static final ForeignKey<BurdenEstimateSetProblemRecord, BurdenEstimateSetRecord> BURDEN_ESTIMATE_SET_PROBLEM__BURDEN_ESTIMATE_SET_PROBLEM_BURDEN_ESTIMATE_SET_FKEY = Internal.createForeignKey(BurdenEstimateSetProblem.BURDEN_ESTIMATE_SET_PROBLEM, DSL.name("burden_estimate_set_problem_burden_estimate_set_fkey"), new TableField[] { BurdenEstimateSetProblem.BURDEN_ESTIMATE_SET_PROBLEM.BURDEN_ESTIMATE_SET }, Keys.BURDEN_ESTIMATE_SET_PKEY, new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<CountryCofinanceRecord, CofinanceStatusRecord> COUNTRY_COFINANCE__COUNTRY_COFINANCE_COFINANCE_STATUS_FKEY = Internal.createForeignKey(CountryCofinance.COUNTRY_COFINANCE, DSL.name("country_cofinance_cofinance_status_fkey"), new TableField[] { CountryCofinance.COUNTRY_COFINANCE.COFINANCE_STATUS }, Keys.COFINANCE_STATUS_PKEY, new TableField[] { CofinanceStatus.COFINANCE_STATUS.ID }, true);
    public static final ForeignKey<CountryCofinanceRecord, CountryRecord> COUNTRY_COFINANCE__COUNTRY_COFINANCE_COUNTRY_FKEY = Internal.createForeignKey(CountryCofinance.COUNTRY_COFINANCE, DSL.name("country_cofinance_country_fkey"), new TableField[] { CountryCofinance.COUNTRY_COFINANCE.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<CountryCofinanceRecord, TouchstoneRecord> COUNTRY_COFINANCE__COUNTRY_COFINANCE_TOUCHSTONE_FKEY = Internal.createForeignKey(CountryCofinance.COUNTRY_COFINANCE, DSL.name("country_cofinance_touchstone_fkey"), new TableField[] { CountryCofinance.COUNTRY_COFINANCE.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<CountryDiseaseEndemicRecord, CountryRecord> COUNTRY_DISEASE_ENDEMIC__COUNTRY_DISEASE_ENDEMIC_COUNTRY_FKEY = Internal.createForeignKey(CountryDiseaseEndemic.COUNTRY_DISEASE_ENDEMIC, DSL.name("country_disease_endemic_country_fkey"), new TableField[] { CountryDiseaseEndemic.COUNTRY_DISEASE_ENDEMIC.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<CountryDiseaseEndemicRecord, DiseaseRecord> COUNTRY_DISEASE_ENDEMIC__COUNTRY_DISEASE_ENDEMIC_DISEASE_FKEY = Internal.createForeignKey(CountryDiseaseEndemic.COUNTRY_DISEASE_ENDEMIC, DSL.name("country_disease_endemic_disease_fkey"), new TableField[] { CountryDiseaseEndemic.COUNTRY_DISEASE_ENDEMIC.DISEASE }, Keys.DISEASE_PKEY, new TableField[] { Disease.DISEASE.ID }, true);
    public static final ForeignKey<CountryDiseaseEndemicRecord, TouchstoneRecord> COUNTRY_DISEASE_ENDEMIC__COUNTRY_DISEASE_ENDEMIC_TOUCHSTONE_FKEY = Internal.createForeignKey(CountryDiseaseEndemic.COUNTRY_DISEASE_ENDEMIC, DSL.name("country_disease_endemic_touchstone_fkey"), new TableField[] { CountryDiseaseEndemic.COUNTRY_DISEASE_ENDEMIC.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<CountryFragilityRecord, CountryRecord> COUNTRY_FRAGILITY__COUNTRY_FRAGILITY_COUNTRY_FKEY = Internal.createForeignKey(CountryFragility.COUNTRY_FRAGILITY, DSL.name("country_fragility_country_fkey"), new TableField[] { CountryFragility.COUNTRY_FRAGILITY.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<CountryFragilityRecord, TouchstoneRecord> COUNTRY_FRAGILITY__COUNTRY_FRAGILITY_TOUCHSTONE_FKEY = Internal.createForeignKey(CountryFragility.COUNTRY_FRAGILITY, DSL.name("country_fragility_touchstone_fkey"), new TableField[] { CountryFragility.COUNTRY_FRAGILITY.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<CountryMetadataRecord, CountryRecord> COUNTRY_METADATA__COUNTRY_METADATA_COUNTRY_FKEY = Internal.createForeignKey(CountryMetadata.COUNTRY_METADATA, DSL.name("country_metadata_country_fkey"), new TableField[] { CountryMetadata.COUNTRY_METADATA.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<CountryMetadataRecord, FrancophoneStatusRecord> COUNTRY_METADATA__COUNTRY_METADATA_FRANCOPHONE_FKEY = Internal.createForeignKey(CountryMetadata.COUNTRY_METADATA, DSL.name("country_metadata_francophone_fkey"), new TableField[] { CountryMetadata.COUNTRY_METADATA.FRANCOPHONE }, Keys.FRANCOPHONE_STATUS_PKEY, new TableField[] { FrancophoneStatus.FRANCOPHONE_STATUS.ID }, true);
    public static final ForeignKey<CountryMetadataRecord, GaviRegionRecord> COUNTRY_METADATA__COUNTRY_METADATA_GAVI_REGION_FKEY = Internal.createForeignKey(CountryMetadata.COUNTRY_METADATA, DSL.name("country_metadata_gavi_region_fkey"), new TableField[] { CountryMetadata.COUNTRY_METADATA.GAVI_REGION }, Keys.GAVI_REGION_PKEY, new TableField[] { GaviRegion.GAVI_REGION.ID }, true);
    public static final ForeignKey<CountryMetadataRecord, TouchstoneRecord> COUNTRY_METADATA__COUNTRY_METADATA_TOUCHSTONE_FKEY = Internal.createForeignKey(CountryMetadata.COUNTRY_METADATA, DSL.name("country_metadata_touchstone_fkey"), new TableField[] { CountryMetadata.COUNTRY_METADATA.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<CountryMetadataRecord, VxdelSegmentRecord> COUNTRY_METADATA__COUNTRY_METADATA_VXDEL_SEGMENT_FKEY = Internal.createForeignKey(CountryMetadata.COUNTRY_METADATA, DSL.name("country_metadata_vxdel_segment_fkey"), new TableField[] { CountryMetadata.COUNTRY_METADATA.VXDEL_SEGMENT }, Keys.VXDEL_SEGMENT_PKEY, new TableField[] { VxdelSegment.VXDEL_SEGMENT.ID }, true);
    public static final ForeignKey<CountryVaccineMetadataRecord, CountryRecord> COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_COUNTRY_FKEY = Internal.createForeignKey(CountryVaccineMetadata.COUNTRY_VACCINE_METADATA, DSL.name("country_vaccine_metadata_country_fkey"), new TableField[] { CountryVaccineMetadata.COUNTRY_VACCINE_METADATA.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<CountryVaccineMetadataRecord, TouchstoneRecord> COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_TOUCHSTONE_FKEY = Internal.createForeignKey(CountryVaccineMetadata.COUNTRY_VACCINE_METADATA, DSL.name("country_vaccine_metadata_touchstone_fkey"), new TableField[] { CountryVaccineMetadata.COUNTRY_VACCINE_METADATA.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<CountryVaccineMetadataRecord, VaccineRecord> COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_VACCINE_FKEY = Internal.createForeignKey(CountryVaccineMetadata.COUNTRY_VACCINE_METADATA, DSL.name("country_vaccine_metadata_vaccine_fkey"), new TableField[] { CountryVaccineMetadata.COUNTRY_VACCINE_METADATA.VACCINE }, Keys.VACCINE_PKEY, new TableField[] { Vaccine.VACCINE.ID }, true);
    public static final ForeignKey<CountryWorldbankStatusRecord, CountryRecord> COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_COUNTRY_FKEY = Internal.createForeignKey(CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS, DSL.name("country_worldbank_status_country_fkey"), new TableField[] { CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<CountryWorldbankStatusRecord, TouchstoneRecord> COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_TOUCHSTONE_FKEY = Internal.createForeignKey(CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS, DSL.name("country_worldbank_status_touchstone_fkey"), new TableField[] { CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<CountryWorldbankStatusRecord, WorldbankStatusRecord> COUNTRY_WORLDBANK_STATUS__COUNTRY_WORLDBANK_STATUS_WORLDBANK_STATUS_FKEY = Internal.createForeignKey(CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS, DSL.name("country_worldbank_status_worldbank_status_fkey"), new TableField[] { CountryWorldbankStatus.COUNTRY_WORLDBANK_STATUS.WORLDBANK_STATUS }, Keys.WORLDBANK_STATUS_PKEY, new TableField[] { WorldbankStatus.WORLDBANK_STATUS.ID }, true);
    public static final ForeignKey<CoverageRecord, CountryRecord> COVERAGE__COVERAGE_COUNTRY_FKEY = Internal.createForeignKey(Coverage.COVERAGE, DSL.name("coverage_country_fkey"), new TableField[] { Coverage.COVERAGE.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<CoverageRecord, CoverageSetRecord> COVERAGE__COVERAGE_COVERAGE_SET_FKEY = Internal.createForeignKey(Coverage.COVERAGE, DSL.name("coverage_coverage_set_fkey"), new TableField[] { Coverage.COVERAGE.COVERAGE_SET }, Keys.COVERAGE_SET_PKEY, new TableField[] { CoverageSet.COVERAGE_SET.ID }, true);
    public static final ForeignKey<CoverageRecord, GenderRecord> COVERAGE__COVERAGE_GENDER_FKEY = Internal.createForeignKey(Coverage.COVERAGE, DSL.name("coverage_gender_fkey"), new TableField[] { Coverage.COVERAGE.GENDER }, Keys.GENDER_PKEY, new TableField[] { Gender.GENDER.ID }, true);
    public static final ForeignKey<CoverageSetRecord, ActivityTypeRecord> COVERAGE_SET__COVERAGE_SET_ACTIVITY_TYPE_FKEY = Internal.createForeignKey(CoverageSet.COVERAGE_SET, DSL.name("coverage_set_activity_type_fkey"), new TableField[] { CoverageSet.COVERAGE_SET.ACTIVITY_TYPE }, Keys.ACTIVITY_TYPE_PKEY, new TableField[] { ActivityType.ACTIVITY_TYPE.ID }, true);
    public static final ForeignKey<CoverageSetRecord, CoverageSetUploadMetadataRecord> COVERAGE_SET__COVERAGE_SET_COVERAGE_SET_UPLOAD_METADATA_FKEY = Internal.createForeignKey(CoverageSet.COVERAGE_SET, DSL.name("coverage_set_coverage_set_upload_metadata_fkey"), new TableField[] { CoverageSet.COVERAGE_SET.COVERAGE_SET_UPLOAD_METADATA }, Keys.COVERAGE_SET_UPLOAD_METADATA_PKEY, new TableField[] { CoverageSetUploadMetadata.COVERAGE_SET_UPLOAD_METADATA.ID }, true);
    public static final ForeignKey<CoverageSetRecord, GaviSupportLevelRecord> COVERAGE_SET__COVERAGE_SET_GAVI_SUPPORT_LEVEL_FKEY = Internal.createForeignKey(CoverageSet.COVERAGE_SET, DSL.name("coverage_set_gavi_support_level_fkey"), new TableField[] { CoverageSet.COVERAGE_SET.GAVI_SUPPORT_LEVEL }, Keys.GAVI_SUPPORT_LEVEL_PKEY, new TableField[] { GaviSupportLevel.GAVI_SUPPORT_LEVEL.ID }, true);
    public static final ForeignKey<CoverageSetRecord, TouchstoneRecord> COVERAGE_SET__COVERAGE_SET_TOUCHSTONE_FKEY = Internal.createForeignKey(CoverageSet.COVERAGE_SET, DSL.name("coverage_set_touchstone_fkey"), new TableField[] { CoverageSet.COVERAGE_SET.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<CoverageSetRecord, VaccineRecord> COVERAGE_SET__COVERAGE_SET_VACCINE_FKEY = Internal.createForeignKey(CoverageSet.COVERAGE_SET, DSL.name("coverage_set_vaccine_fkey"), new TableField[] { CoverageSet.COVERAGE_SET.VACCINE }, Keys.VACCINE_PKEY, new TableField[] { Vaccine.VACCINE.ID }, true);
    public static final ForeignKey<CoverageSetUploadMetadataRecord, AppUserRecord> COVERAGE_SET_UPLOAD_METADATA__COVERAGE_SET_UPLOAD_METADATA_UPLOADED_BY_FKEY = Internal.createForeignKey(CoverageSetUploadMetadata.COVERAGE_SET_UPLOAD_METADATA, DSL.name("coverage_set_upload_metadata_uploaded_by_fkey"), new TableField[] { CoverageSetUploadMetadata.COVERAGE_SET_UPLOAD_METADATA.UPLOADED_BY }, Keys.APP_USER_PKEY, new TableField[] { AppUser.APP_USER.USERNAME }, true);
    public static final ForeignKey<DemographicDatasetRecord, DemographicSourceRecord> DEMOGRAPHIC_DATASET__DEMOGRAPHIC_DATASET_DEMOGRAPHIC_SOURCE_FKEY = Internal.createForeignKey(DemographicDataset.DEMOGRAPHIC_DATASET, DSL.name("demographic_dataset_demographic_source_fkey"), new TableField[] { DemographicDataset.DEMOGRAPHIC_DATASET.DEMOGRAPHIC_SOURCE }, Keys.DEMOGRAPHIC_SOURCE_PKEY, new TableField[] { DemographicSource.DEMOGRAPHIC_SOURCE.ID }, true);
    public static final ForeignKey<DemographicDatasetRecord, DemographicStatisticTypeRecord> DEMOGRAPHIC_DATASET__DEMOGRAPHIC_DATASET_DEMOGRAPHIC_STATISTIC_TYPE_FKEY = Internal.createForeignKey(DemographicDataset.DEMOGRAPHIC_DATASET, DSL.name("demographic_dataset_demographic_statistic_type_fkey"), new TableField[] { DemographicDataset.DEMOGRAPHIC_DATASET.DEMOGRAPHIC_STATISTIC_TYPE }, Keys.DEMOGRAPHIC_STATISTIC_TYPE_PKEY, new TableField[] { DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE.ID }, true);
    public static final ForeignKey<DemographicStatisticRecord, CountryRecord> DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_COUNTRY_FKEY = Internal.createForeignKey(DemographicStatistic.DEMOGRAPHIC_STATISTIC, DSL.name("demographic_statistic_country_fkey"), new TableField[] { DemographicStatistic.DEMOGRAPHIC_STATISTIC.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<DemographicStatisticRecord, DemographicDatasetRecord> DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_DATASET_FKEY = Internal.createForeignKey(DemographicStatistic.DEMOGRAPHIC_STATISTIC, DSL.name("demographic_statistic_demographic_dataset_fkey"), new TableField[] { DemographicStatistic.DEMOGRAPHIC_STATISTIC.DEMOGRAPHIC_DATASET }, Keys.DEMOGRAPHIC_DATASET_PKEY, new TableField[] { DemographicDataset.DEMOGRAPHIC_DATASET.ID }, true);
    public static final ForeignKey<DemographicStatisticRecord, DemographicSourceRecord> DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_SOURCE_FKEY = Internal.createForeignKey(DemographicStatistic.DEMOGRAPHIC_STATISTIC, DSL.name("demographic_statistic_demographic_source_fkey"), new TableField[] { DemographicStatistic.DEMOGRAPHIC_STATISTIC.DEMOGRAPHIC_SOURCE }, Keys.DEMOGRAPHIC_SOURCE_PKEY, new TableField[] { DemographicSource.DEMOGRAPHIC_SOURCE.ID }, true);
    public static final ForeignKey<DemographicStatisticRecord, DemographicStatisticTypeRecord> DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_STATISTIC_TYPE_FKEY = Internal.createForeignKey(DemographicStatistic.DEMOGRAPHIC_STATISTIC, DSL.name("demographic_statistic_demographic_statistic_type_fkey"), new TableField[] { DemographicStatistic.DEMOGRAPHIC_STATISTIC.DEMOGRAPHIC_STATISTIC_TYPE }, Keys.DEMOGRAPHIC_STATISTIC_TYPE_PKEY, new TableField[] { DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE.ID }, true);
    public static final ForeignKey<DemographicStatisticRecord, DemographicVariantRecord> DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_VARIANT_FKEY = Internal.createForeignKey(DemographicStatistic.DEMOGRAPHIC_STATISTIC, DSL.name("demographic_statistic_demographic_variant_fkey"), new TableField[] { DemographicStatistic.DEMOGRAPHIC_STATISTIC.DEMOGRAPHIC_VARIANT }, Keys.DEMOGRAPHIC_VARIANT_PKEY, new TableField[] { DemographicVariant.DEMOGRAPHIC_VARIANT.ID }, true);
    public static final ForeignKey<DemographicStatisticRecord, GenderRecord> DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_GENDER_FKEY = Internal.createForeignKey(DemographicStatistic.DEMOGRAPHIC_STATISTIC, DSL.name("demographic_statistic_gender_fkey"), new TableField[] { DemographicStatistic.DEMOGRAPHIC_STATISTIC.GENDER }, Keys.GENDER_PKEY, new TableField[] { Gender.GENDER.ID }, true);
    public static final ForeignKey<DemographicStatisticTypeRecord, DemographicVariantRecord> DEMOGRAPHIC_STATISTIC_TYPE__DEMOGRAPHIC_STATISTIC_TYPE_DEFAULT_VARIANT_FKEY = Internal.createForeignKey(DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE, DSL.name("demographic_statistic_type_default_variant_fkey"), new TableField[] { DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE.DEFAULT_VARIANT }, Keys.DEMOGRAPHIC_VARIANT_PKEY, new TableField[] { DemographicVariant.DEMOGRAPHIC_VARIANT.ID }, true);
    public static final ForeignKey<DemographicStatisticTypeRecord, DemographicValueUnitRecord> DEMOGRAPHIC_STATISTIC_TYPE__DEMOGRAPHIC_STATISTIC_TYPE_DEMOGRAPHIC_VALUE_UNIT_FKEY = Internal.createForeignKey(DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE, DSL.name("demographic_statistic_type_demographic_value_unit_fkey"), new TableField[] { DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE.DEMOGRAPHIC_VALUE_UNIT }, Keys.DEMOGRAPHIC_VALUE_UNIT_PKEY, new TableField[] { DemographicValueUnit.DEMOGRAPHIC_VALUE_UNIT.ID }, true);
    public static final ForeignKey<DemographicStatisticTypeVariantRecord, DemographicStatisticTypeRecord> DEMOGRAPHIC_STATISTIC_TYPE_VARIANT__DEMOGRAPHIC_STATISTIC_TYPE_VARI_DEMOGRAPHIC_STATISTIC_TYPE_FKEY = Internal.createForeignKey(DemographicStatisticTypeVariant.DEMOGRAPHIC_STATISTIC_TYPE_VARIANT, DSL.name("demographic_statistic_type_vari_demographic_statistic_type_fkey"), new TableField[] { DemographicStatisticTypeVariant.DEMOGRAPHIC_STATISTIC_TYPE_VARIANT.DEMOGRAPHIC_STATISTIC_TYPE }, Keys.DEMOGRAPHIC_STATISTIC_TYPE_PKEY, new TableField[] { DemographicStatisticType.DEMOGRAPHIC_STATISTIC_TYPE.ID }, true);
    public static final ForeignKey<DemographicStatisticTypeVariantRecord, DemographicVariantRecord> DEMOGRAPHIC_STATISTIC_TYPE_VARIANT__DEMOGRAPHIC_STATISTIC_TYPE_VARIANT_DEMOGRAPHIC_VARIANT_FKEY = Internal.createForeignKey(DemographicStatisticTypeVariant.DEMOGRAPHIC_STATISTIC_TYPE_VARIANT, DSL.name("demographic_statistic_type_variant_demographic_variant_fkey"), new TableField[] { DemographicStatisticTypeVariant.DEMOGRAPHIC_STATISTIC_TYPE_VARIANT.DEMOGRAPHIC_VARIANT }, Keys.DEMOGRAPHIC_VARIANT_PKEY, new TableField[] { DemographicVariant.DEMOGRAPHIC_VARIANT.ID }, true);
    public static final ForeignKey<DemographicSubnationalStatisticRecord, DemographicDatasetRecord> DEMOGRAPHIC_SUBNATIONAL_STATISTIC__DEMOGRAPHIC_SUBNATIONAL_STATISTIC_DEMOGRAPHIC_DATASET_FKEY = Internal.createForeignKey(DemographicSubnationalStatistic.DEMOGRAPHIC_SUBNATIONAL_STATISTIC, DSL.name("demographic_subnational_statistic_demographic_dataset_fkey"), new TableField[] { DemographicSubnationalStatistic.DEMOGRAPHIC_SUBNATIONAL_STATISTIC.DEMOGRAPHIC_DATASET }, Keys.DEMOGRAPHIC_DATASET_PKEY, new TableField[] { DemographicDataset.DEMOGRAPHIC_DATASET.ID }, true);
    public static final ForeignKey<DemographicSubnationalStatisticRecord, GenderRecord> DEMOGRAPHIC_SUBNATIONAL_STATISTIC__DEMOGRAPHIC_SUBNATIONAL_STATISTIC_GENDER_FKEY = Internal.createForeignKey(DemographicSubnationalStatistic.DEMOGRAPHIC_SUBNATIONAL_STATISTIC, DSL.name("demographic_subnational_statistic_gender_fkey"), new TableField[] { DemographicSubnationalStatistic.DEMOGRAPHIC_SUBNATIONAL_STATISTIC.GENDER }, Keys.GENDER_PKEY, new TableField[] { Gender.GENDER.ID }, true);
    public static final ForeignKey<DemographicSubnationalStatisticRecord, RegionSubnationalRecord> DEMOGRAPHIC_SUBNATIONAL_STATISTIC__DEMOGRAPHIC_SUBNATIONAL_STATISTIC_REGION_FKEY = Internal.createForeignKey(DemographicSubnationalStatistic.DEMOGRAPHIC_SUBNATIONAL_STATISTIC, DSL.name("demographic_subnational_statistic_region_fkey"), new TableField[] { DemographicSubnationalStatistic.DEMOGRAPHIC_SUBNATIONAL_STATISTIC.REGION }, Keys.REGION_SUBNATIONAL_PKEY, new TableField[] { RegionSubnational.REGION_SUBNATIONAL.ID }, true);
    public static final ForeignKey<DisabilityWeightRecord, DiseaseRecord> DISABILITY_WEIGHT__DISABILITY_WEIGHT_DISEASE_FKEY = Internal.createForeignKey(DisabilityWeight.DISABILITY_WEIGHT, DSL.name("disability_weight_disease_fkey"), new TableField[] { DisabilityWeight.DISABILITY_WEIGHT.DISEASE }, Keys.DISEASE_PKEY, new TableField[] { Disease.DISEASE.ID }, true);
    public static final ForeignKey<DisabilityWeightRecord, TouchstoneRecord> DISABILITY_WEIGHT__DISABILITY_WEIGHT_TOUCHSTONE_FKEY = Internal.createForeignKey(DisabilityWeight.DISABILITY_WEIGHT, DSL.name("disability_weight_touchstone_fkey"), new TableField[] { DisabilityWeight.DISABILITY_WEIGHT.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<GaviEligibilityRecord, CountryRecord> GAVI_ELIGIBILITY__GAVI_ELIGIBILITY_COUNTRY_FKEY = Internal.createForeignKey(GaviEligibility.GAVI_ELIGIBILITY, DSL.name("gavi_eligibility_country_fkey"), new TableField[] { GaviEligibility.GAVI_ELIGIBILITY.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<GaviEligibilityRecord, GaviEligibilityStatusRecord> GAVI_ELIGIBILITY__GAVI_ELIGIBILITY_STATUS_FKEY = Internal.createForeignKey(GaviEligibility.GAVI_ELIGIBILITY, DSL.name("gavi_eligibility_status_fkey"), new TableField[] { GaviEligibility.GAVI_ELIGIBILITY.STATUS }, Keys.GAVI_ELIGIBILITY_STATUS_PKEY, new TableField[] { GaviEligibilityStatus.GAVI_ELIGIBILITY_STATUS.ID }, true);
    public static final ForeignKey<GaviEligibilityRecord, TouchstoneRecord> GAVI_ELIGIBILITY__GAVI_ELIGIBILITY_TOUCHSTONE_FKEY = Internal.createForeignKey(GaviEligibility.GAVI_ELIGIBILITY, DSL.name("gavi_eligibility_touchstone_fkey"), new TableField[] { GaviEligibility.GAVI_ELIGIBILITY.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<GaviFocalModelRecord, DiseaseRecord> GAVI_FOCAL_MODEL__GAVI_FOCAL_MODEL_DISEASE_FKEY = Internal.createForeignKey(GaviFocalModel.GAVI_FOCAL_MODEL, DSL.name("gavi_focal_model_disease_fkey"), new TableField[] { GaviFocalModel.GAVI_FOCAL_MODEL.DISEASE }, Keys.DISEASE_PKEY, new TableField[] { Disease.DISEASE.ID }, true);
    public static final ForeignKey<GaviFocalModelRecord, ModelRecord> GAVI_FOCAL_MODEL__GAVI_FOCAL_MODEL_MODEL_FKEY = Internal.createForeignKey(GaviFocalModel.GAVI_FOCAL_MODEL, DSL.name("gavi_focal_model_model_fkey"), new TableField[] { GaviFocalModel.GAVI_FOCAL_MODEL.MODEL }, Keys.MODEL_PKEY, new TableField[] { Model.MODEL.ID }, true);
    public static final ForeignKey<GaviFocalModelRecord, TouchstoneRecord> GAVI_FOCAL_MODEL__GAVI_FOCAL_MODEL_TOUCHSTONE_FKEY = Internal.createForeignKey(GaviFocalModel.GAVI_FOCAL_MODEL, DSL.name("gavi_focal_model_touchstone_fkey"), new TableField[] { GaviFocalModel.GAVI_FOCAL_MODEL.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<ImpactEstimateRecord, CountryRecord> IMPACT_ESTIMATE__IMPACT_ESTIMATE_COUNTRY_FKEY = Internal.createForeignKey(ImpactEstimate.IMPACT_ESTIMATE, DSL.name("impact_estimate_country_fkey"), new TableField[] { ImpactEstimate.IMPACT_ESTIMATE.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<ImpactEstimateRecord, ImpactEstimateSetRecord> IMPACT_ESTIMATE__IMPACT_ESTIMATE_IMPACT_ESTIMATE_SET_FKEY = Internal.createForeignKey(ImpactEstimate.IMPACT_ESTIMATE, DSL.name("impact_estimate_impact_estimate_set_fkey"), new TableField[] { ImpactEstimate.IMPACT_ESTIMATE.IMPACT_ESTIMATE_SET }, Keys.IMPACT_ESTIMATE_SET_PKEY, new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<ImpactEstimateIngredientRecord, BurdenOutcomeRecord> IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_BURDEN_OUTCOME_FKEY = Internal.createForeignKey(ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT, DSL.name("impact_estimate_ingredient_burden_outcome_fkey"), new TableField[] { ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.BURDEN_OUTCOME }, Keys.BURDEN_OUTCOME_PKEY, new TableField[] { BurdenOutcome.BURDEN_OUTCOME.ID }, true);
    public static final ForeignKey<ImpactEstimateIngredientRecord, ImpactEstimateRecipeRecord> IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_IMPACT_ESTIMATE_RECIPE_FKEY = Internal.createForeignKey(ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT, DSL.name("impact_estimate_ingredient_impact_estimate_recipe_fkey"), new TableField[] { ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.IMPACT_ESTIMATE_RECIPE }, Keys.IMPACT_ESTIMATE_RECIPE_PKEY, new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.ID }, true);
    public static final ForeignKey<ImpactEstimateIngredientRecord, ResponsibilityRecord> IMPACT_ESTIMATE_INGREDIENT__IMPACT_ESTIMATE_INGREDIENT_RESPONSIBILITY_FKEY = Internal.createForeignKey(ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT, DSL.name("impact_estimate_ingredient_responsibility_fkey"), new TableField[] { ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.RESPONSIBILITY }, Keys.RESPONSIBILITY_PKEY, new TableField[] { Responsibility.RESPONSIBILITY.ID }, true);
    public static final ForeignKey<ImpactEstimateRecipeRecord, ActivityTypeRecord> IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_ACTIVITY_TYPE_FKEY = Internal.createForeignKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_activity_type_fkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.ACTIVITY_TYPE }, Keys.ACTIVITY_TYPE_PKEY, new TableField[] { ActivityType.ACTIVITY_TYPE.ID }, true);
    public static final ForeignKey<ImpactEstimateRecipeRecord, ImpactEstimateSetRecord> IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_CURRENT_IMPACT_ESTIMATE_SET_FKEY = Internal.createForeignKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_current_impact_estimate_set_fkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.CURRENT_IMPACT_ESTIMATE_SET }, Keys.IMPACT_ESTIMATE_SET_PKEY, new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<ImpactEstimateRecipeRecord, DiseaseRecord> IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_DISEASE_FKEY = Internal.createForeignKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_disease_fkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.DISEASE }, Keys.DISEASE_PKEY, new TableField[] { Disease.DISEASE.ID }, true);
    public static final ForeignKey<ImpactEstimateRecipeRecord, ImpactEstimateIngredientRecord> IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_FOCAL_INGREDIENT_FKEY = Internal.createForeignKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_focal_ingredient_fkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.FOCAL_INGREDIENT }, Keys.IMPACT_ESTIMATE_INGREDIENT_PKEY, new TableField[] { ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.ID }, true);
    public static final ForeignKey<ImpactEstimateRecipeRecord, ImpactOutcomeRecord> IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_IMPACT_OUTCOME_FKEY = Internal.createForeignKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_impact_outcome_fkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.IMPACT_OUTCOME }, Keys.IMPACT_OUTCOME_PKEY, new TableField[] { ImpactOutcome.IMPACT_OUTCOME.ID }, true);
    public static final ForeignKey<ImpactEstimateRecipeRecord, ResponsibilitySetRecord> IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_RESPONSIBILITY_SET_FKEY = Internal.createForeignKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_responsibility_set_fkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.RESPONSIBILITY_SET }, Keys.RESPONSIBILITY_SET_PKEY, new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.ID }, true);
    public static final ForeignKey<ImpactEstimateRecipeRecord, SupportTypeRecord> IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_SUPPORT_TYPE_FKEY = Internal.createForeignKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_support_type_fkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.SUPPORT_TYPE }, Keys.SUPPORT_TYPE_PKEY, new TableField[] { SupportType.SUPPORT_TYPE.ID }, true);
    public static final ForeignKey<ImpactEstimateRecipeRecord, VaccineRecord> IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_VACCINE_FKEY = Internal.createForeignKey(ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE, DSL.name("impact_estimate_recipe_vaccine_fkey"), new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.VACCINE }, Keys.VACCINE_PKEY, new TableField[] { Vaccine.VACCINE.ID }, true);
    public static final ForeignKey<ImpactEstimateSetRecord, TouchstoneRecord> IMPACT_ESTIMATE_SET__IMPACT_ESTIMATE_SET_COVERAGE_TOUCHSTONE_FKEY = Internal.createForeignKey(ImpactEstimateSet.IMPACT_ESTIMATE_SET, DSL.name("impact_estimate_set_coverage_touchstone_fkey"), new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.COVERAGE_TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<ImpactEstimateSetRecord, BurdenEstimateSetRecord> IMPACT_ESTIMATE_SET__IMPACT_ESTIMATE_SET_FOCAL_BURDEN_ESTIMATE_SET_FKEY = Internal.createForeignKey(ImpactEstimateSet.IMPACT_ESTIMATE_SET, DSL.name("impact_estimate_set_focal_burden_estimate_set_fkey"), new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.FOCAL_BURDEN_ESTIMATE_SET }, Keys.BURDEN_ESTIMATE_SET_PKEY, new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<ImpactEstimateSetRecord, CoverageSetRecord> IMPACT_ESTIMATE_SET__IMPACT_ESTIMATE_SET_FOCAL_COVERAGE_SET_FKEY = Internal.createForeignKey(ImpactEstimateSet.IMPACT_ESTIMATE_SET, DSL.name("impact_estimate_set_focal_coverage_set_fkey"), new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.FOCAL_COVERAGE_SET }, Keys.COVERAGE_SET_PKEY, new TableField[] { CoverageSet.COVERAGE_SET.ID }, true);
    public static final ForeignKey<ImpactEstimateSetRecord, ImpactEstimateRecipeRecord> IMPACT_ESTIMATE_SET__IMPACT_ESTIMATE_SET_IMPACT_ESTIMATE_RECIPE_FKEY = Internal.createForeignKey(ImpactEstimateSet.IMPACT_ESTIMATE_SET, DSL.name("impact_estimate_set_impact_estimate_recipe_fkey"), new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.IMPACT_ESTIMATE_RECIPE }, Keys.IMPACT_ESTIMATE_RECIPE_PKEY, new TableField[] { ImpactEstimateRecipe.IMPACT_ESTIMATE_RECIPE.ID }, true);
    public static final ForeignKey<ImpactEstimateSetRecord, TouchstoneRecord> IMPACT_ESTIMATE_SET__IMPACT_ESTIMATE_SET_RECIPE_TOUCHSTONE_FKEY = Internal.createForeignKey(ImpactEstimateSet.IMPACT_ESTIMATE_SET, DSL.name("impact_estimate_set_recipe_touchstone_fkey"), new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.RECIPE_TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<ImpactEstimateSetIngredientRecord, BurdenEstimateSetRecord> IMPACT_ESTIMATE_SET_INGREDIENT__IMPACT_ESTIMATE_SET_INGREDIENT_BURDEN_ESTIMATE_SET_FKEY = Internal.createForeignKey(ImpactEstimateSetIngredient.IMPACT_ESTIMATE_SET_INGREDIENT, DSL.name("impact_estimate_set_ingredient_burden_estimate_set_fkey"), new TableField[] { ImpactEstimateSetIngredient.IMPACT_ESTIMATE_SET_INGREDIENT.BURDEN_ESTIMATE_SET }, Keys.BURDEN_ESTIMATE_SET_PKEY, new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<ImpactEstimateSetIngredientRecord, ImpactEstimateIngredientRecord> IMPACT_ESTIMATE_SET_INGREDIENT__IMPACT_ESTIMATE_SET_INGREDIENT_IMPACT_ESTIMATE_INGREDIENT_FKEY = Internal.createForeignKey(ImpactEstimateSetIngredient.IMPACT_ESTIMATE_SET_INGREDIENT, DSL.name("impact_estimate_set_ingredient_impact_estimate_ingredient_fkey"), new TableField[] { ImpactEstimateSetIngredient.IMPACT_ESTIMATE_SET_INGREDIENT.IMPACT_ESTIMATE_INGREDIENT }, Keys.IMPACT_ESTIMATE_INGREDIENT_PKEY, new TableField[] { ImpactEstimateIngredient.IMPACT_ESTIMATE_INGREDIENT.ID }, true);
    public static final ForeignKey<ImpactEstimateSetIngredientRecord, ImpactEstimateSetRecord> IMPACT_ESTIMATE_SET_INGREDIENT__IMPACT_ESTIMATE_SET_INGREDIENT_IMPACT_ESTIMATE_SET_FKEY = Internal.createForeignKey(ImpactEstimateSetIngredient.IMPACT_ESTIMATE_SET_INGREDIENT, DSL.name("impact_estimate_set_ingredient_impact_estimate_set_fkey"), new TableField[] { ImpactEstimateSetIngredient.IMPACT_ESTIMATE_SET_INGREDIENT.IMPACT_ESTIMATE_SET }, Keys.IMPACT_ESTIMATE_SET_PKEY, new TableField[] { ImpactEstimateSet.IMPACT_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<ModelRecord, ModelVersionRecord> MODEL__MODEL_CURRENT_VERSION_FKEY = Internal.createForeignKey(Model.MODEL, DSL.name("model_current_version_fkey"), new TableField[] { Model.MODEL.CURRENT_VERSION }, Keys.MODEL_VERSION_PKEY, new TableField[] { ModelVersion.MODEL_VERSION.ID }, true);
    public static final ForeignKey<ModelRecord, DiseaseRecord> MODEL__MODEL_DISEASE_FKEY = Internal.createForeignKey(Model.MODEL, DSL.name("model_disease_fkey"), new TableField[] { Model.MODEL.DISEASE }, Keys.DISEASE_PKEY, new TableField[] { Disease.DISEASE.ID }, true);
    public static final ForeignKey<ModelRecord, GenderRecord> MODEL__MODEL_GENDER_FKEY = Internal.createForeignKey(Model.MODEL, DSL.name("model_gender_fkey"), new TableField[] { Model.MODEL.GENDER }, Keys.GENDER_PKEY, new TableField[] { Gender.GENDER.ID }, true);
    public static final ForeignKey<ModelRecord, ModellingGroupRecord> MODEL__MODEL_MODELLING_GROUP_FKEY = Internal.createForeignKey(Model.MODEL, DSL.name("model_modelling_group_fkey"), new TableField[] { Model.MODEL.MODELLING_GROUP }, Keys.MODELLING_GROUP_PKEY, new TableField[] { ModellingGroup.MODELLING_GROUP.ID }, true);
    public static final ForeignKey<ModelRunRecord, ModelRunParameterSetRecord> MODEL_RUN__MODEL_RUN_MODEL_RUN_PARAMETER_SET_FKEY = Internal.createForeignKey(ModelRun.MODEL_RUN, DSL.name("model_run_model_run_parameter_set_fkey"), new TableField[] { ModelRun.MODEL_RUN.MODEL_RUN_PARAMETER_SET }, Keys.MODEL_RUN_PARAMETER_SET_PKEY, new TableField[] { ModelRunParameterSet.MODEL_RUN_PARAMETER_SET.ID }, true);
    public static final ForeignKey<ModelRunParameterRecord, ModelRunParameterSetRecord> MODEL_RUN_PARAMETER__MODEL_RUN_PARAMETER_MODEL_RUN_PARAMETER_SET_FKEY = Internal.createForeignKey(ModelRunParameter.MODEL_RUN_PARAMETER, DSL.name("model_run_parameter_model_run_parameter_set_fkey"), new TableField[] { ModelRunParameter.MODEL_RUN_PARAMETER.MODEL_RUN_PARAMETER_SET }, Keys.MODEL_RUN_PARAMETER_SET_PKEY, new TableField[] { ModelRunParameterSet.MODEL_RUN_PARAMETER_SET.ID }, true);
    public static final ForeignKey<ModelRunParameterSetRecord, ModelVersionRecord> MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_MODEL_VERSION_FKEY = Internal.createForeignKey(ModelRunParameterSet.MODEL_RUN_PARAMETER_SET, DSL.name("model_run_parameter_set_model_version_fkey"), new TableField[] { ModelRunParameterSet.MODEL_RUN_PARAMETER_SET.MODEL_VERSION }, Keys.MODEL_VERSION_PKEY, new TableField[] { ModelVersion.MODEL_VERSION.ID }, true);
    public static final ForeignKey<ModelRunParameterSetRecord, ResponsibilitySetRecord> MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_RESPONSIBILITY_SET_FKEY = Internal.createForeignKey(ModelRunParameterSet.MODEL_RUN_PARAMETER_SET, DSL.name("model_run_parameter_set_responsibility_set_fkey"), new TableField[] { ModelRunParameterSet.MODEL_RUN_PARAMETER_SET.RESPONSIBILITY_SET }, Keys.RESPONSIBILITY_SET_PKEY, new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.ID }, true);
    public static final ForeignKey<ModelRunParameterSetRecord, UploadInfoRecord> MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_UPLOAD_INFO_FKEY = Internal.createForeignKey(ModelRunParameterSet.MODEL_RUN_PARAMETER_SET, DSL.name("model_run_parameter_set_upload_info_fkey"), new TableField[] { ModelRunParameterSet.MODEL_RUN_PARAMETER_SET.UPLOAD_INFO }, Keys.UPLOAD_INFO_PKEY, new TableField[] { UploadInfo.UPLOAD_INFO.ID }, true);
    public static final ForeignKey<ModelRunParameterValueRecord, ModelRunRecord> MODEL_RUN_PARAMETER_VALUE__MODEL_RUN_PARAMETER_VALUE_MODEL_RUN_FKEY = Internal.createForeignKey(ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE, DSL.name("model_run_parameter_value_model_run_fkey"), new TableField[] { ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE.MODEL_RUN }, Keys.MODEL_RUN_PKEY, new TableField[] { ModelRun.MODEL_RUN.INTERNAL_ID }, true);
    public static final ForeignKey<ModelRunParameterValueRecord, ModelRunParameterRecord> MODEL_RUN_PARAMETER_VALUE__MODEL_RUN_PARAMETER_VALUE_MODEL_RUN_PARAMETER_FKEY = Internal.createForeignKey(ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE, DSL.name("model_run_parameter_value_model_run_parameter_fkey"), new TableField[] { ModelRunParameterValue.MODEL_RUN_PARAMETER_VALUE.MODEL_RUN_PARAMETER }, Keys.MODEL_RUN_PARAMETER_PKEY, new TableField[] { ModelRunParameter.MODEL_RUN_PARAMETER.ID }, true);
    public static final ForeignKey<ModelVersionRecord, ModelRecord> MODEL_VERSION__MODEL_VERSION_MODEL_FKEY = Internal.createForeignKey(ModelVersion.MODEL_VERSION, DSL.name("model_version_model_fkey"), new TableField[] { ModelVersion.MODEL_VERSION.MODEL }, Keys.MODEL_PKEY, new TableField[] { Model.MODEL.ID }, true);
    public static final ForeignKey<ModelVersionCountryRecord, CountryRecord> MODEL_VERSION_COUNTRY__MODEL_VERSION_COUNTRY_COUNTRY_FKEY = Internal.createForeignKey(ModelVersionCountry.MODEL_VERSION_COUNTRY, DSL.name("model_version_country_country_fkey"), new TableField[] { ModelVersionCountry.MODEL_VERSION_COUNTRY.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<ModelVersionCountryRecord, ModelVersionRecord> MODEL_VERSION_COUNTRY__MODEL_VERSION_COUNTRY_MODEL_VERSION_FKEY = Internal.createForeignKey(ModelVersionCountry.MODEL_VERSION_COUNTRY, DSL.name("model_version_country_model_version_fkey"), new TableField[] { ModelVersionCountry.MODEL_VERSION_COUNTRY.MODEL_VERSION }, Keys.MODEL_VERSION_PKEY, new TableField[] { ModelVersion.MODEL_VERSION.ID }, true);
    public static final ForeignKey<ModellingGroupRecord, ModellingGroupRecord> MODELLING_GROUP__MODELLING_GROUP_CURRENT_FKEY = Internal.createForeignKey(ModellingGroup.MODELLING_GROUP, DSL.name("modelling_group_current_fkey"), new TableField[] { ModellingGroup.MODELLING_GROUP.REPLACED_BY }, Keys.MODELLING_GROUP_PKEY, new TableField[] { ModellingGroup.MODELLING_GROUP.ID }, true);
    public static final ForeignKey<RegionSubnationalRecord, CountryRecord> REGION_SUBNATIONAL__REGION_SUBNATIONAL_COUNTRY_FKEY = Internal.createForeignKey(RegionSubnational.REGION_SUBNATIONAL, DSL.name("region_subnational_country_fkey"), new TableField[] { RegionSubnational.REGION_SUBNATIONAL.COUNTRY }, Keys.COUNTRY_NID_UNIQUE, new TableField[] { Country.COUNTRY.NID }, true);
    public static final ForeignKey<ResponsibilityRecord, BurdenEstimateSetRecord> RESPONSIBILITY__RESPONSIBILITY_CURRENT_BURDEN_ESTIMATE_SET_FKEY = Internal.createForeignKey(Responsibility.RESPONSIBILITY, DSL.name("responsibility_current_burden_estimate_set_fkey"), new TableField[] { Responsibility.RESPONSIBILITY.CURRENT_BURDEN_ESTIMATE_SET }, Keys.BURDEN_ESTIMATE_SET_PKEY, new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<ResponsibilityRecord, BurdenEstimateSetRecord> RESPONSIBILITY__RESPONSIBILITY_CURRENT_STOCHASTIC_BURDEN_ESTIMATE_SET_FKEY = Internal.createForeignKey(Responsibility.RESPONSIBILITY, DSL.name("responsibility_current_stochastic_burden_estimate_set_fkey"), new TableField[] { Responsibility.RESPONSIBILITY.CURRENT_STOCHASTIC_BURDEN_ESTIMATE_SET }, Keys.BURDEN_ESTIMATE_SET_PKEY, new TableField[] { BurdenEstimateSet.BURDEN_ESTIMATE_SET.ID }, true);
    public static final ForeignKey<ResponsibilityRecord, BurdenEstimateExpectationRecord> RESPONSIBILITY__RESPONSIBILITY_EXPECTATIONS_FKEY = Internal.createForeignKey(Responsibility.RESPONSIBILITY, DSL.name("responsibility_expectations_fkey"), new TableField[] { Responsibility.RESPONSIBILITY.EXPECTATIONS }, Keys.BURDEN_ESTIMATE_EXPECTATION_PKEY, new TableField[] { BurdenEstimateExpectation.BURDEN_ESTIMATE_EXPECTATION.ID }, true);
    public static final ForeignKey<ResponsibilityRecord, ResponsibilitySetRecord> RESPONSIBILITY__RESPONSIBILITY_RESPONSIBILITY_SET_FKEY = Internal.createForeignKey(Responsibility.RESPONSIBILITY, DSL.name("responsibility_responsibility_set_fkey"), new TableField[] { Responsibility.RESPONSIBILITY.RESPONSIBILITY_SET }, Keys.RESPONSIBILITY_SET_PKEY, new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.ID }, true);
    public static final ForeignKey<ResponsibilityRecord, ScenarioRecord> RESPONSIBILITY__RESPONSIBILITY_SCENARIO_FKEY = Internal.createForeignKey(Responsibility.RESPONSIBILITY, DSL.name("responsibility_scenario_fkey"), new TableField[] { Responsibility.RESPONSIBILITY.SCENARIO }, Keys.SCENARIO_PKEY, new TableField[] { Scenario.SCENARIO.ID }, true);
    public static final ForeignKey<ResponsibilityCommentRecord, AppUserRecord> RESPONSIBILITY_COMMENT__RESPONSIBILITY_COMMENT_ADDED_BY_FKEY = Internal.createForeignKey(ResponsibilityComment.RESPONSIBILITY_COMMENT, DSL.name("responsibility_comment_added_by_fkey"), new TableField[] { ResponsibilityComment.RESPONSIBILITY_COMMENT.ADDED_BY }, Keys.APP_USER_PKEY, new TableField[] { AppUser.APP_USER.USERNAME }, true);
    public static final ForeignKey<ResponsibilityCommentRecord, ResponsibilityRecord> RESPONSIBILITY_COMMENT__RESPONSIBILITY_COMMENT_RESPONSIBILITY_FKEY = Internal.createForeignKey(ResponsibilityComment.RESPONSIBILITY_COMMENT, DSL.name("responsibility_comment_responsibility_fkey"), new TableField[] { ResponsibilityComment.RESPONSIBILITY_COMMENT.RESPONSIBILITY }, Keys.RESPONSIBILITY_PKEY, new TableField[] { Responsibility.RESPONSIBILITY.ID }, true);
    public static final ForeignKey<ResponsibilitySetRecord, ModellingGroupRecord> RESPONSIBILITY_SET__RESPONSIBILITY_SET_MODELLING_GROUP_FKEY = Internal.createForeignKey(ResponsibilitySet.RESPONSIBILITY_SET, DSL.name("responsibility_set_modelling_group_fkey"), new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.MODELLING_GROUP }, Keys.MODELLING_GROUP_PKEY, new TableField[] { ModellingGroup.MODELLING_GROUP.ID }, true);
    public static final ForeignKey<ResponsibilitySetRecord, ResponsibilitySetStatusRecord> RESPONSIBILITY_SET__RESPONSIBILITY_SET_STATUS_FKEY = Internal.createForeignKey(ResponsibilitySet.RESPONSIBILITY_SET, DSL.name("responsibility_set_status_fkey"), new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.STATUS }, Keys.RESPONSIBILITY_SET_STATUS_PKEY, new TableField[] { ResponsibilitySetStatus.RESPONSIBILITY_SET_STATUS.ID }, true);
    public static final ForeignKey<ResponsibilitySetRecord, TouchstoneRecord> RESPONSIBILITY_SET__RESPONSIBILITY_SET_TOUCHSTONE_FKEY = Internal.createForeignKey(ResponsibilitySet.RESPONSIBILITY_SET, DSL.name("responsibility_set_touchstone_fkey"), new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<ResponsibilitySetCommentRecord, AppUserRecord> RESPONSIBILITY_SET_COMMENT__RESPONSIBILITY_SET_COMMENT_ADDED_BY_FKEY = Internal.createForeignKey(ResponsibilitySetComment.RESPONSIBILITY_SET_COMMENT, DSL.name("responsibility_set_comment_added_by_fkey"), new TableField[] { ResponsibilitySetComment.RESPONSIBILITY_SET_COMMENT.ADDED_BY }, Keys.APP_USER_PKEY, new TableField[] { AppUser.APP_USER.USERNAME }, true);
    public static final ForeignKey<ResponsibilitySetCommentRecord, ResponsibilitySetRecord> RESPONSIBILITY_SET_COMMENT__RESPONSIBILITY_SET_COMMENT_RESPONSIBILITY_SET_FKEY = Internal.createForeignKey(ResponsibilitySetComment.RESPONSIBILITY_SET_COMMENT, DSL.name("responsibility_set_comment_responsibility_set_fkey"), new TableField[] { ResponsibilitySetComment.RESPONSIBILITY_SET_COMMENT.RESPONSIBILITY_SET }, Keys.RESPONSIBILITY_SET_PKEY, new TableField[] { ResponsibilitySet.RESPONSIBILITY_SET.ID }, true);
    public static final ForeignKey<RolePermissionRecord, PermissionRecord> ROLE_PERMISSION__ROLE_PERMISSION_PERMISSION_FKEY = Internal.createForeignKey(RolePermission.ROLE_PERMISSION, DSL.name("role_permission_permission_fkey"), new TableField[] { RolePermission.ROLE_PERMISSION.PERMISSION }, Keys.PERMISSION_PKEY, new TableField[] { Permission.PERMISSION.NAME }, true);
    public static final ForeignKey<RolePermissionRecord, RoleRecord> ROLE_PERMISSION__ROLE_PERMISSION_ROLE_FKEY = Internal.createForeignKey(RolePermission.ROLE_PERMISSION, DSL.name("role_permission_role_fkey"), new TableField[] { RolePermission.ROLE_PERMISSION.ROLE }, Keys.ROLE_PKEY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<ScenarioRecord, CoverageSetRecord> SCENARIO__SCENARIO_FOCAL_COVERAGE_SET_FKEY = Internal.createForeignKey(Scenario.SCENARIO, DSL.name("scenario_focal_coverage_set_fkey"), new TableField[] { Scenario.SCENARIO.FOCAL_COVERAGE_SET }, Keys.COVERAGE_SET_PKEY, new TableField[] { CoverageSet.COVERAGE_SET.ID }, true);
    public static final ForeignKey<ScenarioRecord, ScenarioDescriptionRecord> SCENARIO__SCENARIO_SCENARIO_DESCRIPTION_FKEY = Internal.createForeignKey(Scenario.SCENARIO, DSL.name("scenario_scenario_description_fkey"), new TableField[] { Scenario.SCENARIO.SCENARIO_DESCRIPTION }, Keys.SCENARIO_DESCRIPTION_PKEY, new TableField[] { ScenarioDescription.SCENARIO_DESCRIPTION.ID }, true);
    public static final ForeignKey<ScenarioRecord, TouchstoneRecord> SCENARIO__SCENARIO_TOUCHSTONE_FKEY = Internal.createForeignKey(Scenario.SCENARIO, DSL.name("scenario_touchstone_fkey"), new TableField[] { Scenario.SCENARIO.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<ScenarioCoverageSetRecord, CoverageSetRecord> SCENARIO_COVERAGE_SET__SCENARIO_COVERAGE_SET_COVERAGE_SET_FKEY = Internal.createForeignKey(ScenarioCoverageSet.SCENARIO_COVERAGE_SET, DSL.name("scenario_coverage_set_coverage_set_fkey"), new TableField[] { ScenarioCoverageSet.SCENARIO_COVERAGE_SET.COVERAGE_SET }, Keys.COVERAGE_SET_PKEY, new TableField[] { CoverageSet.COVERAGE_SET.ID }, true);
    public static final ForeignKey<ScenarioCoverageSetRecord, ScenarioRecord> SCENARIO_COVERAGE_SET__SCENARIO_COVERAGE_SET_SCENARIO_FKEY = Internal.createForeignKey(ScenarioCoverageSet.SCENARIO_COVERAGE_SET, DSL.name("scenario_coverage_set_scenario_fkey"), new TableField[] { ScenarioCoverageSet.SCENARIO_COVERAGE_SET.SCENARIO }, Keys.SCENARIO_PKEY, new TableField[] { Scenario.SCENARIO.ID }, true);
    public static final ForeignKey<ScenarioDescriptionRecord, DiseaseRecord> SCENARIO_DESCRIPTION__SCENARIO_DESCRIPTION_DISEASE_FKEY = Internal.createForeignKey(ScenarioDescription.SCENARIO_DESCRIPTION, DSL.name("scenario_description_disease_fkey"), new TableField[] { ScenarioDescription.SCENARIO_DESCRIPTION.DISEASE }, Keys.DISEASE_PKEY, new TableField[] { Disease.DISEASE.ID }, true);
    public static final ForeignKey<ScenarioDescriptionRecord, ScenarioTypeRecord> SCENARIO_DESCRIPTION__SCENARIO_DESCRIPTION_SCENARIO_TYPE_FKEY = Internal.createForeignKey(ScenarioDescription.SCENARIO_DESCRIPTION, DSL.name("scenario_description_scenario_type_fkey"), new TableField[] { ScenarioDescription.SCENARIO_DESCRIPTION.SCENARIO_TYPE }, Keys.SCENARIO_TYPE_PKEY, new TableField[] { ScenarioType.SCENARIO_TYPE.ID }, true);
    public static final ForeignKey<TouchstoneRecord, TouchstoneStatusRecord> TOUCHSTONE__TOUCHSTONE_STATUS_FKEY = Internal.createForeignKey(Touchstone.TOUCHSTONE, DSL.name("touchstone_status_fkey"), new TableField[] { Touchstone.TOUCHSTONE.STATUS }, Keys.TOUCHSTONE_STATUS_PKEY, new TableField[] { TouchstoneStatus.TOUCHSTONE_STATUS.ID }, true);
    public static final ForeignKey<TouchstoneRecord, TouchstoneNameRecord> TOUCHSTONE__TOUCHSTONE_TOUCHSTONE_NAME_FKEY = Internal.createForeignKey(Touchstone.TOUCHSTONE, DSL.name("touchstone_touchstone_name_fkey"), new TableField[] { Touchstone.TOUCHSTONE.TOUCHSTONE_NAME }, Keys.TOUCHSTONE_NAME_PKEY, new TableField[] { TouchstoneName.TOUCHSTONE_NAME.ID }, true);
    public static final ForeignKey<TouchstoneCountryRecord, CountryRecord> TOUCHSTONE_COUNTRY__TOUCHSTONE_COUNTRY_COUNTRY_FKEY = Internal.createForeignKey(TouchstoneCountry.TOUCHSTONE_COUNTRY, DSL.name("touchstone_country_country_fkey"), new TableField[] { TouchstoneCountry.TOUCHSTONE_COUNTRY.COUNTRY }, Keys.COUNTRY_PKEY, new TableField[] { Country.COUNTRY.ID }, true);
    public static final ForeignKey<TouchstoneCountryRecord, DiseaseRecord> TOUCHSTONE_COUNTRY__TOUCHSTONE_COUNTRY_DISEASE_FKEY = Internal.createForeignKey(TouchstoneCountry.TOUCHSTONE_COUNTRY, DSL.name("touchstone_country_disease_fkey"), new TableField[] { TouchstoneCountry.TOUCHSTONE_COUNTRY.DISEASE }, Keys.DISEASE_PKEY, new TableField[] { Disease.DISEASE.ID }, true);
    public static final ForeignKey<TouchstoneCountryRecord, TouchstoneRecord> TOUCHSTONE_COUNTRY__TOUCHSTONE_COUNTRY_TOUCHSTONE_FKEY = Internal.createForeignKey(TouchstoneCountry.TOUCHSTONE_COUNTRY, DSL.name("touchstone_country_touchstone_fkey"), new TableField[] { TouchstoneCountry.TOUCHSTONE_COUNTRY.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<TouchstoneDemographicDatasetRecord, DemographicDatasetRecord> TOUCHSTONE_DEMOGRAPHIC_DATASET__TOUCHSTONE_DEMOGRAPHIC_DATASET_DEMOGRAPHIC_DATASET_FKEY = Internal.createForeignKey(TouchstoneDemographicDataset.TOUCHSTONE_DEMOGRAPHIC_DATASET, DSL.name("touchstone_demographic_dataset_demographic_dataset_fkey"), new TableField[] { TouchstoneDemographicDataset.TOUCHSTONE_DEMOGRAPHIC_DATASET.DEMOGRAPHIC_DATASET }, Keys.DEMOGRAPHIC_DATASET_PKEY, new TableField[] { DemographicDataset.DEMOGRAPHIC_DATASET.ID }, true);
    public static final ForeignKey<TouchstoneDemographicDatasetRecord, TouchstoneRecord> TOUCHSTONE_DEMOGRAPHIC_DATASET__TOUCHSTONE_DEMOGRAPHIC_DATASET_TOUCHSTONE_FKEY = Internal.createForeignKey(TouchstoneDemographicDataset.TOUCHSTONE_DEMOGRAPHIC_DATASET, DSL.name("touchstone_demographic_dataset_touchstone_fkey"), new TableField[] { TouchstoneDemographicDataset.TOUCHSTONE_DEMOGRAPHIC_DATASET.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<TouchstoneDemographicSourceRecord, DemographicSourceRecord> TOUCHSTONE_DEMOGRAPHIC_SOURCE__TOUCHSTONE_DEMOGRAPHIC_SOURCE_DEMOGRAPHIC_SOURCE_FKEY = Internal.createForeignKey(TouchstoneDemographicSource.TOUCHSTONE_DEMOGRAPHIC_SOURCE, DSL.name("touchstone_demographic_source_demographic_source_fkey"), new TableField[] { TouchstoneDemographicSource.TOUCHSTONE_DEMOGRAPHIC_SOURCE.DEMOGRAPHIC_SOURCE }, Keys.DEMOGRAPHIC_SOURCE_PKEY, new TableField[] { DemographicSource.DEMOGRAPHIC_SOURCE.ID }, true);
    public static final ForeignKey<TouchstoneDemographicSourceRecord, TouchstoneRecord> TOUCHSTONE_DEMOGRAPHIC_SOURCE__TOUCHSTONE_DEMOGRAPHIC_SOURCE_TOUCHSTONE_FKEY = Internal.createForeignKey(TouchstoneDemographicSource.TOUCHSTONE_DEMOGRAPHIC_SOURCE, DSL.name("touchstone_demographic_source_touchstone_fkey"), new TableField[] { TouchstoneDemographicSource.TOUCHSTONE_DEMOGRAPHIC_SOURCE.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<TouchstoneYearsRecord, DiseaseRecord> TOUCHSTONE_YEARS__TOUCHSTONE_YEARS_DISEASE_FKEY = Internal.createForeignKey(TouchstoneYears.TOUCHSTONE_YEARS, DSL.name("touchstone_years_disease_fkey"), new TableField[] { TouchstoneYears.TOUCHSTONE_YEARS.DISEASE }, Keys.DISEASE_PKEY, new TableField[] { Disease.DISEASE.ID }, true);
    public static final ForeignKey<TouchstoneYearsRecord, TouchstoneRecord> TOUCHSTONE_YEARS__TOUCHSTONE_YEARS_TOUCHSTONE_FKEY = Internal.createForeignKey(TouchstoneYears.TOUCHSTONE_YEARS, DSL.name("touchstone_years_touchstone_fkey"), new TableField[] { TouchstoneYears.TOUCHSTONE_YEARS.TOUCHSTONE }, Keys.TOUCHSTONE_PKEY, new TableField[] { Touchstone.TOUCHSTONE.ID }, true);
    public static final ForeignKey<UserGroupMembershipRecord, UserGroupRecord> USER_GROUP_MEMBERSHIP__USER_GROUP_MEMBERSHIP_USER_GROUP_FKEY = Internal.createForeignKey(UserGroupMembership.USER_GROUP_MEMBERSHIP, DSL.name("user_group_membership_user_group_fkey"), new TableField[] { UserGroupMembership.USER_GROUP_MEMBERSHIP.USER_GROUP }, Keys.USER_GROUP_PKEY, new TableField[] { UserGroup.USER_GROUP.ID }, true);
    public static final ForeignKey<UserGroupMembershipRecord, AppUserRecord> USER_GROUP_MEMBERSHIP__USER_GROUP_MEMBERSHIP_USERNAME_FKEY = Internal.createForeignKey(UserGroupMembership.USER_GROUP_MEMBERSHIP, DSL.name("user_group_membership_username_fkey"), new TableField[] { UserGroupMembership.USER_GROUP_MEMBERSHIP.USERNAME }, Keys.APP_USER_PKEY, new TableField[] { AppUser.APP_USER.USERNAME }, true);
    public static final ForeignKey<UserGroupRoleRecord, RoleRecord> USER_GROUP_ROLE__USER_GROUP_ROLE_ROLE_FKEY = Internal.createForeignKey(UserGroupRole.USER_GROUP_ROLE, DSL.name("user_group_role_role_fkey"), new TableField[] { UserGroupRole.USER_GROUP_ROLE.ROLE }, Keys.ROLE_PKEY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<UserGroupRoleRecord, UserGroupRecord> USER_GROUP_ROLE__USER_GROUP_ROLE_USER_GROUP_FKEY = Internal.createForeignKey(UserGroupRole.USER_GROUP_ROLE, DSL.name("user_group_role_user_group_fkey"), new TableField[] { UserGroupRole.USER_GROUP_ROLE.USER_GROUP }, Keys.USER_GROUP_PKEY, new TableField[] { UserGroup.USER_GROUP.ID }, true);
    public static final ForeignKey<UserLegalAgreementRecord, LegalAgreementRecord> USER_LEGAL_AGREEMENT__USER_LEGAL_AGREEMENT_LEGAL_AGREEMENT_FKEY = Internal.createForeignKey(UserLegalAgreement.USER_LEGAL_AGREEMENT, DSL.name("user_legal_agreement_legal_agreement_fkey"), new TableField[] { UserLegalAgreement.USER_LEGAL_AGREEMENT.LEGAL_AGREEMENT }, Keys.LEGAL_AGREEMENT_PKEY, new TableField[] { LegalAgreement.LEGAL_AGREEMENT.NAME }, true);
    public static final ForeignKey<UserLegalAgreementRecord, AppUserRecord> USER_LEGAL_AGREEMENT__USER_LEGAL_AGREEMENT_USERNAME_FKEY = Internal.createForeignKey(UserLegalAgreement.USER_LEGAL_AGREEMENT, DSL.name("user_legal_agreement_username_fkey"), new TableField[] { UserLegalAgreement.USER_LEGAL_AGREEMENT.USERNAME }, Keys.APP_USER_PKEY, new TableField[] { AppUser.APP_USER.USERNAME }, true);
    public static final ForeignKey<VaccineRoutineAgeRecord, VaccineRecord> VACCINE_ROUTINE_AGE__VACCINE_ROUTINE_AGE_VACCINE_FKEY = Internal.createForeignKey(VaccineRoutineAge.VACCINE_ROUTINE_AGE, DSL.name("vaccine_routine_age_vaccine_fkey"), new TableField[] { VaccineRoutineAge.VACCINE_ROUTINE_AGE.VACCINE }, Keys.VACCINE_PKEY, new TableField[] { Vaccine.VACCINE.ID }, true);
}
