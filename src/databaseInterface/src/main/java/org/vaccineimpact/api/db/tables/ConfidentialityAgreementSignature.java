/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.ConfidentialityAgreementSignatureRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfidentialityAgreementSignature extends TableImpl<ConfidentialityAgreementSignatureRecord> {

    private static final long serialVersionUID = 1634694856;

    /**
     * The reference instance of <code>public.confidentiality_agreement_signature</code>
     */
    public static final ConfidentialityAgreementSignature CONFIDENTIALITY_AGREEMENT_SIGNATURE = new ConfidentialityAgreementSignature();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfidentialityAgreementSignatureRecord> getRecordType() {
        return ConfidentialityAgreementSignatureRecord.class;
    }

    /**
     * The column <code>public.confidentiality_agreement_signature.confidentiality_agreement</code>.
     */
    public final TableField<ConfidentialityAgreementSignatureRecord, String> CONFIDENTIALITY_AGREEMENT = createField("confidentiality_agreement", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.confidentiality_agreement_signature.username</code>.
     */
    public final TableField<ConfidentialityAgreementSignatureRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.confidentiality_agreement_signature.date</code>.
     */
    public final TableField<ConfidentialityAgreementSignatureRecord, Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>public.confidentiality_agreement_signature</code> table reference
     */
    public ConfidentialityAgreementSignature() {
        this(DSL.name("confidentiality_agreement_signature"), null);
    }

    /**
     * Create an aliased <code>public.confidentiality_agreement_signature</code> table reference
     */
    public ConfidentialityAgreementSignature(String alias) {
        this(DSL.name(alias), CONFIDENTIALITY_AGREEMENT_SIGNATURE);
    }

    /**
     * Create an aliased <code>public.confidentiality_agreement_signature</code> table reference
     */
    public ConfidentialityAgreementSignature(Name alias) {
        this(alias, CONFIDENTIALITY_AGREEMENT_SIGNATURE);
    }

    private ConfidentialityAgreementSignature(Name alias, Table<ConfidentialityAgreementSignatureRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfidentialityAgreementSignature(Name alias, Table<ConfidentialityAgreementSignatureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ConfidentialityAgreementSignatureRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ConfidentialityAgreementSignatureRecord, ?>>asList(Keys.CONFIDENTIALITY_AGREEMENT_SIGNATURE__CONFIDENTIALITY_AGREEMENT_SIGNAT_CONFIDENTIALITY_AGREEMENT_FKEY, Keys.CONFIDENTIALITY_AGREEMENT_SIGNATURE__CONFIDENTIALITY_AGREEMENT_SIGNATURE_USERNAME_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfidentialityAgreementSignature as(String alias) {
        return new ConfidentialityAgreementSignature(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfidentialityAgreementSignature as(Name alias) {
        return new ConfidentialityAgreementSignature(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfidentialityAgreementSignature rename(String name) {
        return new ConfidentialityAgreementSignature(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfidentialityAgreementSignature rename(Name name) {
        return new ConfidentialityAgreementSignature(name, null);
    }
}
