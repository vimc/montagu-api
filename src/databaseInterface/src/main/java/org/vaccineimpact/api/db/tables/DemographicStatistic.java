/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.DemographicStatisticRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DemographicStatistic extends TableImpl<DemographicStatisticRecord> {

    private static final long serialVersionUID = 768477739;

    /**
     * The reference instance of <code>public.demographic_statistic</code>
     */
    public static final DemographicStatistic DEMOGRAPHIC_STATISTIC = new DemographicStatistic();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DemographicStatisticRecord> getRecordType() {
        return DemographicStatisticRecord.class;
    }

    /**
     * The column <code>public.demographic_statistic.id</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('demographic_statistic_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.demographic_statistic.age_from</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> AGE_FROM = createField("age_from", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.demographic_statistic.age_to</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> AGE_TO = createField("age_to", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.demographic_statistic.value</code>.
     */
    public final TableField<DemographicStatisticRecord, BigDecimal> VALUE = createField("value", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.demographic_statistic.year</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.demographic_statistic.demographic_variant</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> DEMOGRAPHIC_VARIANT = createField("demographic_variant", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.demographic_statistic.gender</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> GENDER = createField("gender", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.demographic_statistic.country</code>.
     */
    public final TableField<DemographicStatisticRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.demographic_statistic.demographic_source</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> DEMOGRAPHIC_SOURCE = createField("demographic_source", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.demographic_statistic.demographic_statistic_type</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> DEMOGRAPHIC_STATISTIC_TYPE = createField("demographic_statistic_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.demographic_statistic.demographic_dataset</code>.
     */
    public final TableField<DemographicStatisticRecord, Integer> DEMOGRAPHIC_DATASET = createField("demographic_dataset", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.demographic_statistic</code> table reference
     */
    public DemographicStatistic() {
        this(DSL.name("demographic_statistic"), null);
    }

    /**
     * Create an aliased <code>public.demographic_statistic</code> table reference
     */
    public DemographicStatistic(String alias) {
        this(DSL.name(alias), DEMOGRAPHIC_STATISTIC);
    }

    /**
     * Create an aliased <code>public.demographic_statistic</code> table reference
     */
    public DemographicStatistic(Name alias) {
        this(alias, DEMOGRAPHIC_STATISTIC);
    }

    private DemographicStatistic(Name alias, Table<DemographicStatisticRecord> aliased) {
        this(alias, aliased, null);
    }

    private DemographicStatistic(Name alias, Table<DemographicStatisticRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEMOGRAPHIC_STATISTIC_COUNTRY_IDX, Indexes.DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_SOURCE_IDX, Indexes.DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_STATISTIC_TYPE_IDX, Indexes.DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_VARIANT_IDX, Indexes.DEMOGRAPHIC_STATISTIC_GENDER_IDX, Indexes.DEMOGRAPHIC_STATISTIC_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DemographicStatisticRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEMOGRAPHIC_STATISTIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DemographicStatisticRecord> getPrimaryKey() {
        return Keys.DEMOGRAPHIC_STATISTIC_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DemographicStatisticRecord>> getKeys() {
        return Arrays.<UniqueKey<DemographicStatisticRecord>>asList(Keys.DEMOGRAPHIC_STATISTIC_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DemographicStatisticRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DemographicStatisticRecord, ?>>asList(Keys.DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_VARIANT_FKEY, Keys.DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_GENDER_FKEY, Keys.DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_COUNTRY_FKEY, Keys.DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_SOURCE_FKEY, Keys.DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_STATISTIC_TYPE_FKEY, Keys.DEMOGRAPHIC_STATISTIC__DEMOGRAPHIC_STATISTIC_DEMOGRAPHIC_DATASET_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemographicStatistic as(String alias) {
        return new DemographicStatistic(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemographicStatistic as(Name alias) {
        return new DemographicStatistic(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DemographicStatistic rename(String name) {
        return new DemographicStatistic(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DemographicStatistic rename(Name name) {
        return new DemographicStatistic(name, null);
    }
}
