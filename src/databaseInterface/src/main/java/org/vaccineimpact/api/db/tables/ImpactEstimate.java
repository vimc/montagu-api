/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.ImpactEstimateRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImpactEstimate extends TableImpl<ImpactEstimateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.impact_estimate</code>
     */
    public static final ImpactEstimate IMPACT_ESTIMATE = new ImpactEstimate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ImpactEstimateRecord> getRecordType() {
        return ImpactEstimateRecord.class;
    }

    /**
     * The column <code>public.impact_estimate.id</code>.
     */
    public final TableField<ImpactEstimateRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.impact_estimate.impact_estimate_set</code>.
     */
    public final TableField<ImpactEstimateRecord, Integer> IMPACT_ESTIMATE_SET = createField(DSL.name("impact_estimate_set"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate.year</code>.
     */
    public final TableField<ImpactEstimateRecord, Integer> YEAR = createField(DSL.name("year"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate.country</code>.
     */
    public final TableField<ImpactEstimateRecord, String> COUNTRY = createField(DSL.name("country"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate.value</code>.
     */
    public final TableField<ImpactEstimateRecord, BigDecimal> VALUE = createField(DSL.name("value"), SQLDataType.NUMERIC, this, "");

    private ImpactEstimate(Name alias, Table<ImpactEstimateRecord> aliased) {
        this(alias, aliased, null);
    }

    private ImpactEstimate(Name alias, Table<ImpactEstimateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.impact_estimate</code> table reference
     */
    public ImpactEstimate(String alias) {
        this(DSL.name(alias), IMPACT_ESTIMATE);
    }

    /**
     * Create an aliased <code>public.impact_estimate</code> table reference
     */
    public ImpactEstimate(Name alias) {
        this(alias, IMPACT_ESTIMATE);
    }

    /**
     * Create a <code>public.impact_estimate</code> table reference
     */
    public ImpactEstimate() {
        this(DSL.name("impact_estimate"), null);
    }

    public <O extends Record> ImpactEstimate(Table<O> child, ForeignKey<O, ImpactEstimateRecord> key) {
        super(child, key, IMPACT_ESTIMATE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ImpactEstimateRecord, Integer> getIdentity() {
        return (Identity<ImpactEstimateRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<ImpactEstimateRecord> getPrimaryKey() {
        return Keys.IMPACT_ESTIMATE_PKEY;
    }

    @Override
    public List<ForeignKey<ImpactEstimateRecord, ?>> getReferences() {
        return Arrays.asList(Keys.IMPACT_ESTIMATE__IMPACT_ESTIMATE_IMPACT_ESTIMATE_SET_FKEY, Keys.IMPACT_ESTIMATE__IMPACT_ESTIMATE_COUNTRY_FKEY);
    }

    private transient ImpactEstimateSet _impactEstimateSet;
    private transient Country _country;

    /**
     * Get the implicit join path to the <code>public.impact_estimate_set</code>
     * table.
     */
    public ImpactEstimateSet impactEstimateSet() {
        if (_impactEstimateSet == null)
            _impactEstimateSet = new ImpactEstimateSet(this, Keys.IMPACT_ESTIMATE__IMPACT_ESTIMATE_IMPACT_ESTIMATE_SET_FKEY);

        return _impactEstimateSet;
    }

    /**
     * Get the implicit join path to the <code>public.country</code> table.
     */
    public Country country() {
        if (_country == null)
            _country = new Country(this, Keys.IMPACT_ESTIMATE__IMPACT_ESTIMATE_COUNTRY_FKEY);

        return _country;
    }

    @Override
    public ImpactEstimate as(String alias) {
        return new ImpactEstimate(DSL.name(alias), this);
    }

    @Override
    public ImpactEstimate as(Name alias) {
        return new ImpactEstimate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ImpactEstimate rename(String name) {
        return new ImpactEstimate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ImpactEstimate rename(Name name) {
        return new ImpactEstimate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, String, BigDecimal> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
