/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.ModelRunParameterValueRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelRunParameterValue extends TableImpl<ModelRunParameterValueRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.model_run_parameter_value</code>
     */
    public static final ModelRunParameterValue MODEL_RUN_PARAMETER_VALUE = new ModelRunParameterValue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ModelRunParameterValueRecord> getRecordType() {
        return ModelRunParameterValueRecord.class;
    }

    /**
     * The column <code>public.model_run_parameter_value.id</code>.
     */
    public final TableField<ModelRunParameterValueRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.model_run_parameter_value.model_run</code>.
     */
    public final TableField<ModelRunParameterValueRecord, Integer> MODEL_RUN = createField(DSL.name("model_run"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>public.model_run_parameter_value.model_run_parameter</code>.
     */
    public final TableField<ModelRunParameterValueRecord, Integer> MODEL_RUN_PARAMETER = createField(DSL.name("model_run_parameter"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.model_run_parameter_value.value</code>.
     */
    public final TableField<ModelRunParameterValueRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.CLOB.nullable(false), this, "");

    private ModelRunParameterValue(Name alias, Table<ModelRunParameterValueRecord> aliased) {
        this(alias, aliased, null);
    }

    private ModelRunParameterValue(Name alias, Table<ModelRunParameterValueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.model_run_parameter_value</code> table
     * reference
     */
    public ModelRunParameterValue(String alias) {
        this(DSL.name(alias), MODEL_RUN_PARAMETER_VALUE);
    }

    /**
     * Create an aliased <code>public.model_run_parameter_value</code> table
     * reference
     */
    public ModelRunParameterValue(Name alias) {
        this(alias, MODEL_RUN_PARAMETER_VALUE);
    }

    /**
     * Create a <code>public.model_run_parameter_value</code> table reference
     */
    public ModelRunParameterValue() {
        this(DSL.name("model_run_parameter_value"), null);
    }

    public <O extends Record> ModelRunParameterValue(Table<O> child, ForeignKey<O, ModelRunParameterValueRecord> key) {
        super(child, key, MODEL_RUN_PARAMETER_VALUE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ModelRunParameterValueRecord, Integer> getIdentity() {
        return (Identity<ModelRunParameterValueRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<ModelRunParameterValueRecord> getPrimaryKey() {
        return Keys.MODEL_RUN_PARAMETER_VALUE_PKEY;
    }

    @Override
    public List<UniqueKey<ModelRunParameterValueRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.MODEL_RUN_PARAMETER_VALUE_MODEL_RUN_PARAMETER_MODEL_RUN_KEY);
    }

    @Override
    public List<ForeignKey<ModelRunParameterValueRecord, ?>> getReferences() {
        return Arrays.asList(Keys.MODEL_RUN_PARAMETER_VALUE__MODEL_RUN_PARAMETER_VALUE_MODEL_RUN_FKEY, Keys.MODEL_RUN_PARAMETER_VALUE__MODEL_RUN_PARAMETER_VALUE_MODEL_RUN_PARAMETER_FKEY);
    }

    private transient ModelRun _modelRun;
    private transient ModelRunParameter _modelRunParameter;

    /**
     * Get the implicit join path to the <code>public.model_run</code> table.
     */
    public ModelRun modelRun() {
        if (_modelRun == null)
            _modelRun = new ModelRun(this, Keys.MODEL_RUN_PARAMETER_VALUE__MODEL_RUN_PARAMETER_VALUE_MODEL_RUN_FKEY);

        return _modelRun;
    }

    /**
     * Get the implicit join path to the <code>public.model_run_parameter</code>
     * table.
     */
    public ModelRunParameter modelRunParameter() {
        if (_modelRunParameter == null)
            _modelRunParameter = new ModelRunParameter(this, Keys.MODEL_RUN_PARAMETER_VALUE__MODEL_RUN_PARAMETER_VALUE_MODEL_RUN_PARAMETER_FKEY);

        return _modelRunParameter;
    }

    @Override
    public ModelRunParameterValue as(String alias) {
        return new ModelRunParameterValue(DSL.name(alias), this);
    }

    @Override
    public ModelRunParameterValue as(Name alias) {
        return new ModelRunParameterValue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ModelRunParameterValue rename(String name) {
        return new ModelRunParameterValue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ModelRunParameterValue rename(Name name) {
        return new ModelRunParameterValue(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
