/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.ImpactEstimateRecipeRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImpactEstimateRecipe extends TableImpl<ImpactEstimateRecipeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.impact_estimate_recipe</code>
     */
    public static final ImpactEstimateRecipe IMPACT_ESTIMATE_RECIPE = new ImpactEstimateRecipe();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ImpactEstimateRecipeRecord> getRecordType() {
        return ImpactEstimateRecipeRecord.class;
    }

    /**
     * The column <code>public.impact_estimate_recipe.id</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.version</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.responsibility_set</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, Integer> RESPONSIBILITY_SET = createField(DSL.name("responsibility_set"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.name</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.script</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, String> SCRIPT = createField(DSL.name("script"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.comment</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, String> COMMENT = createField(DSL.name("comment"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.impact_estimate_recipe.impact_outcome</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, String> IMPACT_OUTCOME = createField(DSL.name("impact_outcome"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.activity_type</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, String> ACTIVITY_TYPE = createField(DSL.name("activity_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.support_type</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, String> SUPPORT_TYPE = createField(DSL.name("support_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.disease</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, String> DISEASE = createField(DSL.name("disease"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.vaccine</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, String> VACCINE = createField(DSL.name("vaccine"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.impact_estimate_recipe.focal_ingredient</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, Integer> FOCAL_INGREDIENT = createField(DSL.name("focal_ingredient"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>public.impact_estimate_recipe.current_impact_estimate_set</code>.
     */
    public final TableField<ImpactEstimateRecipeRecord, Integer> CURRENT_IMPACT_ESTIMATE_SET = createField(DSL.name("current_impact_estimate_set"), SQLDataType.INTEGER, this, "");

    private ImpactEstimateRecipe(Name alias, Table<ImpactEstimateRecipeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ImpactEstimateRecipe(Name alias, Table<ImpactEstimateRecipeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.impact_estimate_recipe</code> table
     * reference
     */
    public ImpactEstimateRecipe(String alias) {
        this(DSL.name(alias), IMPACT_ESTIMATE_RECIPE);
    }

    /**
     * Create an aliased <code>public.impact_estimate_recipe</code> table
     * reference
     */
    public ImpactEstimateRecipe(Name alias) {
        this(alias, IMPACT_ESTIMATE_RECIPE);
    }

    /**
     * Create a <code>public.impact_estimate_recipe</code> table reference
     */
    public ImpactEstimateRecipe() {
        this(DSL.name("impact_estimate_recipe"), null);
    }

    public <O extends Record> ImpactEstimateRecipe(Table<O> child, ForeignKey<O, ImpactEstimateRecipeRecord> key) {
        super(child, key, IMPACT_ESTIMATE_RECIPE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ImpactEstimateRecipeRecord, Integer> getIdentity() {
        return (Identity<ImpactEstimateRecipeRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<ImpactEstimateRecipeRecord> getPrimaryKey() {
        return Keys.IMPACT_ESTIMATE_RECIPE_PKEY;
    }

    @Override
    public List<ForeignKey<ImpactEstimateRecipeRecord, ?>> getReferences() {
        return Arrays.asList(Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_RESPONSIBILITY_SET_FKEY, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_IMPACT_OUTCOME_FKEY, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_ACTIVITY_TYPE_FKEY, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_SUPPORT_TYPE_FKEY, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_DISEASE_FKEY, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_VACCINE_FKEY, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_FOCAL_INGREDIENT_FKEY, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_CURRENT_IMPACT_ESTIMATE_SET_FKEY);
    }

    private transient ResponsibilitySet _responsibilitySet;
    private transient ImpactOutcome _impactOutcome;
    private transient ActivityType _activityType;
    private transient SupportType _supportType;
    private transient Disease _disease;
    private transient Vaccine _vaccine;
    private transient ImpactEstimateIngredient _impactEstimateIngredient;
    private transient ImpactEstimateSet _impactEstimateSet;

    /**
     * Get the implicit join path to the <code>public.responsibility_set</code>
     * table.
     */
    public ResponsibilitySet responsibilitySet() {
        if (_responsibilitySet == null)
            _responsibilitySet = new ResponsibilitySet(this, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_RESPONSIBILITY_SET_FKEY);

        return _responsibilitySet;
    }

    /**
     * Get the implicit join path to the <code>public.impact_outcome</code>
     * table.
     */
    public ImpactOutcome impactOutcome() {
        if (_impactOutcome == null)
            _impactOutcome = new ImpactOutcome(this, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_IMPACT_OUTCOME_FKEY);

        return _impactOutcome;
    }

    /**
     * Get the implicit join path to the <code>public.activity_type</code>
     * table.
     */
    public ActivityType activityType() {
        if (_activityType == null)
            _activityType = new ActivityType(this, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_ACTIVITY_TYPE_FKEY);

        return _activityType;
    }

    /**
     * Get the implicit join path to the <code>public.support_type</code> table.
     */
    public SupportType supportType() {
        if (_supportType == null)
            _supportType = new SupportType(this, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_SUPPORT_TYPE_FKEY);

        return _supportType;
    }

    /**
     * Get the implicit join path to the <code>public.disease</code> table.
     */
    public Disease disease() {
        if (_disease == null)
            _disease = new Disease(this, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_DISEASE_FKEY);

        return _disease;
    }

    /**
     * Get the implicit join path to the <code>public.vaccine</code> table.
     */
    public Vaccine vaccine() {
        if (_vaccine == null)
            _vaccine = new Vaccine(this, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_VACCINE_FKEY);

        return _vaccine;
    }

    /**
     * Get the implicit join path to the
     * <code>public.impact_estimate_ingredient</code> table.
     */
    public ImpactEstimateIngredient impactEstimateIngredient() {
        if (_impactEstimateIngredient == null)
            _impactEstimateIngredient = new ImpactEstimateIngredient(this, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_FOCAL_INGREDIENT_FKEY);

        return _impactEstimateIngredient;
    }

    /**
     * Get the implicit join path to the <code>public.impact_estimate_set</code>
     * table.
     */
    public ImpactEstimateSet impactEstimateSet() {
        if (_impactEstimateSet == null)
            _impactEstimateSet = new ImpactEstimateSet(this, Keys.IMPACT_ESTIMATE_RECIPE__IMPACT_ESTIMATE_RECIPE_CURRENT_IMPACT_ESTIMATE_SET_FKEY);

        return _impactEstimateSet;
    }

    @Override
    public ImpactEstimateRecipe as(String alias) {
        return new ImpactEstimateRecipe(DSL.name(alias), this);
    }

    @Override
    public ImpactEstimateRecipe as(Name alias) {
        return new ImpactEstimateRecipe(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ImpactEstimateRecipe rename(String name) {
        return new ImpactEstimateRecipe(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ImpactEstimateRecipe rename(Name name) {
        return new ImpactEstimateRecipe(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, Integer, String, String, String, String, String, String, String, String, Integer, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
