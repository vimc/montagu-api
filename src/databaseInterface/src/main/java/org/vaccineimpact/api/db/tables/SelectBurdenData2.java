/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.SelectBurdenData2Record;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelectBurdenData2 extends TableImpl<SelectBurdenData2Record> {

    private static final long serialVersionUID = -1600329828;

    /**
     * The reference instance of <code>public.select_burden_data2</code>
     */
    public static final SelectBurdenData2 SELECT_BURDEN_DATA2 = new SelectBurdenData2();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SelectBurdenData2Record> getRecordType() {
        return SelectBurdenData2Record.class;
    }

    /**
     * The column <code>public.select_burden_data2.country</code>.
     */
    public final TableField<SelectBurdenData2Record, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.select_burden_data2.year</code>.
     */
    public final TableField<SelectBurdenData2Record, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.select_burden_data2.value1</code>.
     */
    public final TableField<SelectBurdenData2Record, BigDecimal> VALUE1 = createField("value1", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.select_burden_data2.value2</code>.
     */
    public final TableField<SelectBurdenData2Record, BigDecimal> VALUE2 = createField("value2", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * Create a <code>public.select_burden_data2</code> table reference
     */
    public SelectBurdenData2() {
        this(DSL.name("select_burden_data2"), null);
    }

    /**
     * Create an aliased <code>public.select_burden_data2</code> table reference
     */
    public SelectBurdenData2(String alias) {
        this(DSL.name(alias), SELECT_BURDEN_DATA2);
    }

    /**
     * Create an aliased <code>public.select_burden_data2</code> table reference
     */
    public SelectBurdenData2(Name alias) {
        this(alias, SELECT_BURDEN_DATA2);
    }

    private SelectBurdenData2(Name alias, Table<SelectBurdenData2Record> aliased) {
        this(alias, aliased, new Field[4]);
    }

    private SelectBurdenData2(Name alias, Table<SelectBurdenData2Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectBurdenData2 as(String alias) {
        return new SelectBurdenData2(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectBurdenData2 as(Name alias) {
        return new SelectBurdenData2(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public SelectBurdenData2 rename(String name) {
        return new SelectBurdenData2(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public SelectBurdenData2 rename(Name name) {
        return new SelectBurdenData2(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public SelectBurdenData2 call(Integer set1, Integer outcome1, Integer set2, Integer outcome2) {
        return new SelectBurdenData2(DSL.name(getName()), null, new Field[] { 
              DSL.val(set1, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(outcome1, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(set2, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(outcome2, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public SelectBurdenData2 call(Field<Integer> set1, Field<Integer> outcome1, Field<Integer> set2, Field<Integer> outcome2) {
        return new SelectBurdenData2(DSL.name(getName()), null, new Field[] { 
              set1
            , outcome1
            , set2
            , outcome2
        });
    }
}
