/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.GaviRegionRecord;


/**
 * include four types of gavi region interested by gavi donors
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GaviRegion extends TableImpl<GaviRegionRecord> {

    private static final long serialVersionUID = -1640216579;

    /**
     * The reference instance of <code>public.gavi_region</code>
     */
    public static final GaviRegion GAVI_REGION = new GaviRegion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GaviRegionRecord> getRecordType() {
        return GaviRegionRecord.class;
    }

    /**
     * The column <code>public.gavi_region.id</code>.
     */
    public final TableField<GaviRegionRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.gavi_region.name</code>.
     */
    public final TableField<GaviRegionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.gavi_region</code> table reference
     */
    public GaviRegion() {
        this(DSL.name("gavi_region"), null);
    }

    /**
     * Create an aliased <code>public.gavi_region</code> table reference
     */
    public GaviRegion(String alias) {
        this(DSL.name(alias), GAVI_REGION);
    }

    /**
     * Create an aliased <code>public.gavi_region</code> table reference
     */
    public GaviRegion(Name alias) {
        this(alias, GAVI_REGION);
    }

    private GaviRegion(Name alias, Table<GaviRegionRecord> aliased) {
        this(alias, aliased, null);
    }

    private GaviRegion(Name alias, Table<GaviRegionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "include four types of gavi region interested by gavi donors");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GAVI_REGION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GaviRegionRecord> getPrimaryKey() {
        return Keys.GAVI_REGION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GaviRegionRecord>> getKeys() {
        return Arrays.<UniqueKey<GaviRegionRecord>>asList(Keys.GAVI_REGION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaviRegion as(String alias) {
        return new GaviRegion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaviRegion as(Name alias) {
        return new GaviRegion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GaviRegion rename(String name) {
        return new GaviRegion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GaviRegion rename(Name name) {
        return new GaviRegion(name, null);
    }
}
