/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.CountryVaccineMetadataRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryVaccineMetadata extends TableImpl<CountryVaccineMetadataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.country_vaccine_metadata</code>
     */
    public static final CountryVaccineMetadata COUNTRY_VACCINE_METADATA = new CountryVaccineMetadata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CountryVaccineMetadataRecord> getRecordType() {
        return CountryVaccineMetadataRecord.class;
    }

    /**
     * The column <code>public.country_vaccine_metadata.id</code>.
     */
    public final TableField<CountryVaccineMetadataRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.country_vaccine_metadata.touchstone</code>.
     */
    public final TableField<CountryVaccineMetadataRecord, String> TOUCHSTONE = createField(DSL.name("touchstone"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_vaccine_metadata.country</code>.
     */
    public final TableField<CountryVaccineMetadataRecord, String> COUNTRY = createField(DSL.name("country"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_vaccine_metadata.vaccine</code>.
     */
    public final TableField<CountryVaccineMetadataRecord, String> VACCINE = createField(DSL.name("vaccine"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>public.country_vaccine_metadata.year_vaccine_intro</code>.
     */
    public final TableField<CountryVaccineMetadataRecord, Integer> YEAR_VACCINE_INTRO = createField(DSL.name("year_vaccine_intro"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>public.country_vaccine_metadata.year_support_first</code>.
     */
    public final TableField<CountryVaccineMetadataRecord, Integer> YEAR_SUPPORT_FIRST = createField(DSL.name("year_support_first"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>public.country_vaccine_metadata.year_support_last</code>.
     */
    public final TableField<CountryVaccineMetadataRecord, Integer> YEAR_SUPPORT_LAST = createField(DSL.name("year_support_last"), SQLDataType.INTEGER, this, "");

    private CountryVaccineMetadata(Name alias, Table<CountryVaccineMetadataRecord> aliased) {
        this(alias, aliased, null);
    }

    private CountryVaccineMetadata(Name alias, Table<CountryVaccineMetadataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.country_vaccine_metadata</code> table
     * reference
     */
    public CountryVaccineMetadata(String alias) {
        this(DSL.name(alias), COUNTRY_VACCINE_METADATA);
    }

    /**
     * Create an aliased <code>public.country_vaccine_metadata</code> table
     * reference
     */
    public CountryVaccineMetadata(Name alias) {
        this(alias, COUNTRY_VACCINE_METADATA);
    }

    /**
     * Create a <code>public.country_vaccine_metadata</code> table reference
     */
    public CountryVaccineMetadata() {
        this(DSL.name("country_vaccine_metadata"), null);
    }

    public <O extends Record> CountryVaccineMetadata(Table<O> child, ForeignKey<O, CountryVaccineMetadataRecord> key) {
        super(child, key, COUNTRY_VACCINE_METADATA);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<CountryVaccineMetadataRecord, Integer> getIdentity() {
        return (Identity<CountryVaccineMetadataRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CountryVaccineMetadataRecord> getPrimaryKey() {
        return Keys.COUNTRY_VACCINE_METADATA_PKEY;
    }

    @Override
    public List<ForeignKey<CountryVaccineMetadataRecord, ?>> getReferences() {
        return Arrays.asList(Keys.COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_TOUCHSTONE_FKEY, Keys.COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_COUNTRY_FKEY, Keys.COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_VACCINE_FKEY);
    }

    private transient Touchstone _touchstone;
    private transient Country _country;
    private transient Vaccine _vaccine;

    /**
     * Get the implicit join path to the <code>public.touchstone</code> table.
     */
    public Touchstone touchstone() {
        if (_touchstone == null)
            _touchstone = new Touchstone(this, Keys.COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_TOUCHSTONE_FKEY);

        return _touchstone;
    }

    /**
     * Get the implicit join path to the <code>public.country</code> table.
     */
    public Country country() {
        if (_country == null)
            _country = new Country(this, Keys.COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_COUNTRY_FKEY);

        return _country;
    }

    /**
     * Get the implicit join path to the <code>public.vaccine</code> table.
     */
    public Vaccine vaccine() {
        if (_vaccine == null)
            _vaccine = new Vaccine(this, Keys.COUNTRY_VACCINE_METADATA__COUNTRY_VACCINE_METADATA_VACCINE_FKEY);

        return _vaccine;
    }

    @Override
    public CountryVaccineMetadata as(String alias) {
        return new CountryVaccineMetadata(DSL.name(alias), this);
    }

    @Override
    public CountryVaccineMetadata as(Name alias) {
        return new CountryVaccineMetadata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryVaccineMetadata rename(String name) {
        return new CountryVaccineMetadata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryVaccineMetadata rename(Name name) {
        return new CountryVaccineMetadata(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, Integer, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
