/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.CountryFragilityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryFragility extends TableImpl<CountryFragilityRecord> {

    private static final long serialVersionUID = 1140382541;

    /**
     * The reference instance of <code>public.country_fragility</code>
     */
    public static final CountryFragility COUNTRY_FRAGILITY = new CountryFragility();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CountryFragilityRecord> getRecordType() {
        return CountryFragilityRecord.class;
    }

    /**
     * The column <code>public.country_fragility.id</code>.
     */
    public final TableField<CountryFragilityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('country_fragility_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.country_fragility.touchstone</code>.
     */
    public final TableField<CountryFragilityRecord, String> TOUCHSTONE = createField("touchstone", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_fragility.country</code>.
     */
    public final TableField<CountryFragilityRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_fragility.year</code>.
     */
    public final TableField<CountryFragilityRecord, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.country_fragility.is_fragile</code>.
     */
    public final TableField<CountryFragilityRecord, Boolean> IS_FRAGILE = createField("is_fragile", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>public.country_fragility</code> table reference
     */
    public CountryFragility() {
        this(DSL.name("country_fragility"), null);
    }

    /**
     * Create an aliased <code>public.country_fragility</code> table reference
     */
    public CountryFragility(String alias) {
        this(DSL.name(alias), COUNTRY_FRAGILITY);
    }

    /**
     * Create an aliased <code>public.country_fragility</code> table reference
     */
    public CountryFragility(Name alias) {
        this(alias, COUNTRY_FRAGILITY);
    }

    private CountryFragility(Name alias, Table<CountryFragilityRecord> aliased) {
        this(alias, aliased, null);
    }

    private CountryFragility(Name alias, Table<CountryFragilityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COUNTRY_FRAGILITY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CountryFragilityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COUNTRY_FRAGILITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CountryFragilityRecord> getPrimaryKey() {
        return Keys.COUNTRY_FRAGILITY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CountryFragilityRecord>> getKeys() {
        return Arrays.<UniqueKey<CountryFragilityRecord>>asList(Keys.COUNTRY_FRAGILITY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CountryFragilityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CountryFragilityRecord, ?>>asList(Keys.COUNTRY_FRAGILITY__COUNTRY_FRAGILITY_TOUCHSTONE_FKEY, Keys.COUNTRY_FRAGILITY__COUNTRY_FRAGILITY_COUNTRY_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryFragility as(String alias) {
        return new CountryFragility(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryFragility as(Name alias) {
        return new CountryFragility(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryFragility rename(String name) {
        return new CountryFragility(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryFragility rename(Name name) {
        return new CountryFragility(name, null);
    }
}
