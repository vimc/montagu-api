/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.DemographicValueUnitRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DemographicValueUnit extends TableImpl<DemographicValueUnitRecord> {

    private static final long serialVersionUID = -201737310;

    /**
     * The reference instance of <code>public.demographic_value_unit</code>
     */
    public static final DemographicValueUnit DEMOGRAPHIC_VALUE_UNIT = new DemographicValueUnit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DemographicValueUnitRecord> getRecordType() {
        return DemographicValueUnitRecord.class;
    }

    /**
     * The column <code>public.demographic_value_unit.id</code>.
     */
    public final TableField<DemographicValueUnitRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('demographic_value_unit_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.demographic_value_unit.name</code>. A free text description
     */
    public final TableField<DemographicValueUnitRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "A free text description");

    /**
     * Create a <code>public.demographic_value_unit</code> table reference
     */
    public DemographicValueUnit() {
        this(DSL.name("demographic_value_unit"), null);
    }

    /**
     * Create an aliased <code>public.demographic_value_unit</code> table reference
     */
    public DemographicValueUnit(String alias) {
        this(DSL.name(alias), DEMOGRAPHIC_VALUE_UNIT);
    }

    /**
     * Create an aliased <code>public.demographic_value_unit</code> table reference
     */
    public DemographicValueUnit(Name alias) {
        this(alias, DEMOGRAPHIC_VALUE_UNIT);
    }

    private DemographicValueUnit(Name alias, Table<DemographicValueUnitRecord> aliased) {
        this(alias, aliased, null);
    }

    private DemographicValueUnit(Name alias, Table<DemographicValueUnitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEMOGRAPHIC_VALUE_UNIT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DemographicValueUnitRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEMOGRAPHIC_VALUE_UNIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DemographicValueUnitRecord> getPrimaryKey() {
        return Keys.DEMOGRAPHIC_VALUE_UNIT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DemographicValueUnitRecord>> getKeys() {
        return Arrays.<UniqueKey<DemographicValueUnitRecord>>asList(Keys.DEMOGRAPHIC_VALUE_UNIT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemographicValueUnit as(String alias) {
        return new DemographicValueUnit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemographicValueUnit as(Name alias) {
        return new DemographicValueUnit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DemographicValueUnit rename(String name) {
        return new DemographicValueUnit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DemographicValueUnit rename(Name name) {
        return new DemographicValueUnit(name, null);
    }
}
