/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BurdenEstimate extends TableImpl<BurdenEstimateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.burden_estimate</code>
     */
    public static final BurdenEstimate BURDEN_ESTIMATE = new BurdenEstimate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BurdenEstimateRecord> getRecordType() {
        return BurdenEstimateRecord.class;
    }

    /**
     * The column <code>public.burden_estimate.burden_estimate_set</code>.
     */
    public final TableField<BurdenEstimateRecord, Integer> BURDEN_ESTIMATE_SET = createField(DSL.name("burden_estimate_set"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.burden_estimate.country</code>.
     */
    public final TableField<BurdenEstimateRecord, Short> COUNTRY = createField(DSL.name("country"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.burden_estimate.year</code>.
     */
    public final TableField<BurdenEstimateRecord, Short> YEAR = createField(DSL.name("year"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.burden_estimate.burden_outcome</code>.
     */
    public final TableField<BurdenEstimateRecord, Short> BURDEN_OUTCOME = createField(DSL.name("burden_outcome"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.burden_estimate.value</code>.
     */
    public final TableField<BurdenEstimateRecord, Float> VALUE = createField(DSL.name("value"), SQLDataType.REAL, this, "");

    /**
     * The column <code>public.burden_estimate.age</code>.
     */
    public final TableField<BurdenEstimateRecord, Short> AGE = createField(DSL.name("age"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.burden_estimate.model_run</code>.
     */
    public final TableField<BurdenEstimateRecord, Integer> MODEL_RUN = createField(DSL.name("model_run"), SQLDataType.INTEGER, this, "");

    private BurdenEstimate(Name alias, Table<BurdenEstimateRecord> aliased) {
        this(alias, aliased, null);
    }

    private BurdenEstimate(Name alias, Table<BurdenEstimateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.burden_estimate</code> table reference
     */
    public BurdenEstimate(String alias) {
        this(DSL.name(alias), BURDEN_ESTIMATE);
    }

    /**
     * Create an aliased <code>public.burden_estimate</code> table reference
     */
    public BurdenEstimate(Name alias) {
        this(alias, BURDEN_ESTIMATE);
    }

    /**
     * Create a <code>public.burden_estimate</code> table reference
     */
    public BurdenEstimate() {
        this(DSL.name("burden_estimate"), null);
    }

    public <O extends Record> BurdenEstimate(Table<O> child, ForeignKey<O, BurdenEstimateRecord> key) {
        super(child, key, BURDEN_ESTIMATE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.BURDEN_ESTIMATE_BURDEN_ESTIMATE_SET_IDX);
    }

    @Override
    public List<UniqueKey<BurdenEstimateRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.BURDEN_ESTIMATE_UNIQUE);
    }

    @Override
    public List<ForeignKey<BurdenEstimateRecord, ?>> getReferences() {
        return Arrays.asList(Keys.BURDEN_ESTIMATE__BURDEN_ESTIMATE_BURDEN_ESTIMATE_SET, Keys.BURDEN_ESTIMATE__BURDEN_ESTIMATE_COUNTRY_NID, Keys.BURDEN_ESTIMATE__BURDEN_ESTIMATE_BURDEN_OUTCOME, Keys.BURDEN_ESTIMATE__BURDEN_ESTIMATE_MODEL_RUN);
    }

    private transient BurdenEstimateSet _burdenEstimateSet;
    private transient Country _country;
    private transient BurdenOutcome _burdenOutcome;
    private transient ModelRun _modelRun;

    /**
     * Get the implicit join path to the <code>public.burden_estimate_set</code>
     * table.
     */
    public BurdenEstimateSet burdenEstimateSet() {
        if (_burdenEstimateSet == null)
            _burdenEstimateSet = new BurdenEstimateSet(this, Keys.BURDEN_ESTIMATE__BURDEN_ESTIMATE_BURDEN_ESTIMATE_SET);

        return _burdenEstimateSet;
    }

    /**
     * Get the implicit join path to the <code>public.country</code> table.
     */
    public Country country() {
        if (_country == null)
            _country = new Country(this, Keys.BURDEN_ESTIMATE__BURDEN_ESTIMATE_COUNTRY_NID);

        return _country;
    }

    /**
     * Get the implicit join path to the <code>public.burden_outcome</code>
     * table.
     */
    public BurdenOutcome burdenOutcome() {
        if (_burdenOutcome == null)
            _burdenOutcome = new BurdenOutcome(this, Keys.BURDEN_ESTIMATE__BURDEN_ESTIMATE_BURDEN_OUTCOME);

        return _burdenOutcome;
    }

    /**
     * Get the implicit join path to the <code>public.model_run</code> table.
     */
    public ModelRun modelRun() {
        if (_modelRun == null)
            _modelRun = new ModelRun(this, Keys.BURDEN_ESTIMATE__BURDEN_ESTIMATE_MODEL_RUN);

        return _modelRun;
    }

    @Override
    public BurdenEstimate as(String alias) {
        return new BurdenEstimate(DSL.name(alias), this);
    }

    @Override
    public BurdenEstimate as(Name alias) {
        return new BurdenEstimate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BurdenEstimate rename(String name) {
        return new BurdenEstimate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BurdenEstimate rename(Name name) {
        return new BurdenEstimate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Short, Short, Short, Float, Short, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
