/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.ModelRunParameterSetRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelRunParameterSet extends TableImpl<ModelRunParameterSetRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.model_run_parameter_set</code>
     */
    public static final ModelRunParameterSet MODEL_RUN_PARAMETER_SET = new ModelRunParameterSet();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ModelRunParameterSetRecord> getRecordType() {
        return ModelRunParameterSetRecord.class;
    }

    /**
     * The column <code>public.model_run_parameter_set.id</code>.
     */
    public final TableField<ModelRunParameterSetRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>public.model_run_parameter_set.responsibility_set</code>.
     */
    public final TableField<ModelRunParameterSetRecord, Integer> RESPONSIBILITY_SET = createField(DSL.name("responsibility_set"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.model_run_parameter_set.upload_info</code>.
     */
    public final TableField<ModelRunParameterSetRecord, Integer> UPLOAD_INFO = createField(DSL.name("upload_info"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.model_run_parameter_set.model_version</code>.
     */
    public final TableField<ModelRunParameterSetRecord, Integer> MODEL_VERSION = createField(DSL.name("model_version"), SQLDataType.INTEGER.nullable(false), this, "");

    private ModelRunParameterSet(Name alias, Table<ModelRunParameterSetRecord> aliased) {
        this(alias, aliased, null);
    }

    private ModelRunParameterSet(Name alias, Table<ModelRunParameterSetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.model_run_parameter_set</code> table
     * reference
     */
    public ModelRunParameterSet(String alias) {
        this(DSL.name(alias), MODEL_RUN_PARAMETER_SET);
    }

    /**
     * Create an aliased <code>public.model_run_parameter_set</code> table
     * reference
     */
    public ModelRunParameterSet(Name alias) {
        this(alias, MODEL_RUN_PARAMETER_SET);
    }

    /**
     * Create a <code>public.model_run_parameter_set</code> table reference
     */
    public ModelRunParameterSet() {
        this(DSL.name("model_run_parameter_set"), null);
    }

    public <O extends Record> ModelRunParameterSet(Table<O> child, ForeignKey<O, ModelRunParameterSetRecord> key) {
        super(child, key, MODEL_RUN_PARAMETER_SET);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ModelRunParameterSetRecord, Integer> getIdentity() {
        return (Identity<ModelRunParameterSetRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<ModelRunParameterSetRecord> getPrimaryKey() {
        return Keys.MODEL_RUN_PARAMETER_SET_PKEY;
    }

    @Override
    public List<ForeignKey<ModelRunParameterSetRecord, ?>> getReferences() {
        return Arrays.asList(Keys.MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_RESPONSIBILITY_SET_FKEY, Keys.MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_UPLOAD_INFO_FKEY, Keys.MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_MODEL_VERSION_FKEY);
    }

    private transient ResponsibilitySet _responsibilitySet;
    private transient UploadInfo _uploadInfo;
    private transient ModelVersion _modelVersion;

    /**
     * Get the implicit join path to the <code>public.responsibility_set</code>
     * table.
     */
    public ResponsibilitySet responsibilitySet() {
        if (_responsibilitySet == null)
            _responsibilitySet = new ResponsibilitySet(this, Keys.MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_RESPONSIBILITY_SET_FKEY);

        return _responsibilitySet;
    }

    /**
     * Get the implicit join path to the <code>public.upload_info</code> table.
     */
    public UploadInfo uploadInfo() {
        if (_uploadInfo == null)
            _uploadInfo = new UploadInfo(this, Keys.MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_UPLOAD_INFO_FKEY);

        return _uploadInfo;
    }

    /**
     * Get the implicit join path to the <code>public.model_version</code>
     * table.
     */
    public ModelVersion modelVersion() {
        if (_modelVersion == null)
            _modelVersion = new ModelVersion(this, Keys.MODEL_RUN_PARAMETER_SET__MODEL_RUN_PARAMETER_SET_MODEL_VERSION_FKEY);

        return _modelVersion;
    }

    @Override
    public ModelRunParameterSet as(String alias) {
        return new ModelRunParameterSet(DSL.name(alias), this);
    }

    @Override
    public ModelRunParameterSet as(Name alias) {
        return new ModelRunParameterSet(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ModelRunParameterSet rename(String name) {
        return new ModelRunParameterSet(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ModelRunParameterSet rename(Name name) {
        return new ModelRunParameterSet(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
