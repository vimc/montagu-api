/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.TouchstoneStatusRecord;


/**
 * Valid values: {in-preparation, open, finished}
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TouchstoneStatus extends TableImpl<TouchstoneStatusRecord> {

    private static final long serialVersionUID = -1928405712;

    /**
     * The reference instance of <code>public.touchstone_status</code>
     */
    public static final TouchstoneStatus TOUCHSTONE_STATUS = new TouchstoneStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TouchstoneStatusRecord> getRecordType() {
        return TouchstoneStatusRecord.class;
    }

    /**
     * The column <code>public.touchstone_status.id</code>.
     */
    public final TableField<TouchstoneStatusRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.touchstone_status.name</code>.
     */
    public final TableField<TouchstoneStatusRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.touchstone_status</code> table reference
     */
    public TouchstoneStatus() {
        this(DSL.name("touchstone_status"), null);
    }

    /**
     * Create an aliased <code>public.touchstone_status</code> table reference
     */
    public TouchstoneStatus(String alias) {
        this(DSL.name(alias), TOUCHSTONE_STATUS);
    }

    /**
     * Create an aliased <code>public.touchstone_status</code> table reference
     */
    public TouchstoneStatus(Name alias) {
        this(alias, TOUCHSTONE_STATUS);
    }

    private TouchstoneStatus(Name alias, Table<TouchstoneStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private TouchstoneStatus(Name alias, Table<TouchstoneStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Valid values: {in-preparation, open, finished}");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TOUCHSTONE_STATUS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TouchstoneStatusRecord> getPrimaryKey() {
        return Keys.TOUCHSTONE_STATUS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TouchstoneStatusRecord>> getKeys() {
        return Arrays.<UniqueKey<TouchstoneStatusRecord>>asList(Keys.TOUCHSTONE_STATUS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TouchstoneStatus as(String alias) {
        return new TouchstoneStatus(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TouchstoneStatus as(Name alias) {
        return new TouchstoneStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TouchstoneStatus rename(String name) {
        return new TouchstoneStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TouchstoneStatus rename(Name name) {
        return new TouchstoneStatus(name, null);
    }
}
