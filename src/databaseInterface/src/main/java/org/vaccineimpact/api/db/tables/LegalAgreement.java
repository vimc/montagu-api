/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.LegalAgreementRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LegalAgreement extends TableImpl<LegalAgreementRecord> {

    private static final long serialVersionUID = 691552761;

    /**
     * The reference instance of <code>public.legal_agreement</code>
     */
    public static final LegalAgreement LEGAL_AGREEMENT = new LegalAgreement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LegalAgreementRecord> getRecordType() {
        return LegalAgreementRecord.class;
    }

    /**
     * The column <code>public.legal_agreement.name</code>.
     */
    public final TableField<LegalAgreementRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.legal_agreement.description</code>.
     */
    public final TableField<LegalAgreementRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.legal_agreement</code> table reference
     */
    public LegalAgreement() {
        this(DSL.name("legal_agreement"), null);
    }

    /**
     * Create an aliased <code>public.legal_agreement</code> table reference
     */
    public LegalAgreement(String alias) {
        this(DSL.name(alias), LEGAL_AGREEMENT);
    }

    /**
     * Create an aliased <code>public.legal_agreement</code> table reference
     */
    public LegalAgreement(Name alias) {
        this(alias, LEGAL_AGREEMENT);
    }

    private LegalAgreement(Name alias, Table<LegalAgreementRecord> aliased) {
        this(alias, aliased, null);
    }

    private LegalAgreement(Name alias, Table<LegalAgreementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LEGAL_AGREEMENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LegalAgreementRecord> getPrimaryKey() {
        return Keys.LEGAL_AGREEMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LegalAgreementRecord>> getKeys() {
        return Arrays.<UniqueKey<LegalAgreementRecord>>asList(Keys.LEGAL_AGREEMENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LegalAgreement as(String alias) {
        return new LegalAgreement(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LegalAgreement as(Name alias) {
        return new LegalAgreement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LegalAgreement rename(String name) {
        return new LegalAgreement(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LegalAgreement rename(Name name) {
        return new LegalAgreement(name, null);
    }
}
