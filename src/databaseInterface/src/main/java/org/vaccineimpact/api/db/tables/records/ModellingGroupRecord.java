/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.api.db.tables.ModellingGroup;


/**
 * With the self-referencing "current" field; we consider a modelling group 
 * to be the current one if current is null.  This is not recursive; if we 
 * move a modelling group to a new id then every modelling group that has 
 * current pointing at the old id must be updated to point at the new one. 
 *  This means that no `current` points at an `id` that does not have `current` 
 * as `null`.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModellingGroupRecord extends UpdatableRecordImpl<ModellingGroupRecord> implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = -377536813;

    /**
     * Setter for <code>public.modelling_group.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.modelling_group.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.modelling_group.institution</code>.
     */
    public void setInstitution(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.modelling_group.institution</code>.
     */
    public String getInstitution() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.modelling_group.pi</code>.
     */
    public void setPi(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.modelling_group.pi</code>.
     */
    public String getPi() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.modelling_group.comment</code>.
     */
    public void setComment(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.modelling_group.comment</code>.
     */
    public String getComment() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.modelling_group.current</code>.
     */
    public void setCurrent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.modelling_group.current</code>.
     */
    public String getCurrent() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ModellingGroup.MODELLING_GROUP.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ModellingGroup.MODELLING_GROUP.INSTITUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ModellingGroup.MODELLING_GROUP.PI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ModellingGroup.MODELLING_GROUP.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ModellingGroup.MODELLING_GROUP.CURRENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getInstitution();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPi();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModellingGroupRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModellingGroupRecord value2(String value) {
        setInstitution(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModellingGroupRecord value3(String value) {
        setPi(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModellingGroupRecord value4(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModellingGroupRecord value5(String value) {
        setCurrent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModellingGroupRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModellingGroupRecord
     */
    public ModellingGroupRecord() {
        super(ModellingGroup.MODELLING_GROUP);
    }

    /**
     * Create a detached, initialised ModellingGroupRecord
     */
    public ModellingGroupRecord(String id, String institution, String pi, String comment, String current) {
        super(ModellingGroup.MODELLING_GROUP);

        set(0, id);
        set(1, institution);
        set(2, pi);
        set(3, comment);
        set(4, current);
    }
}
