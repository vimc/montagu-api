/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.DemographicSourceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DemographicSource extends TableImpl<DemographicSourceRecord> {

    private static final long serialVersionUID = -1143429011;

    /**
     * The reference instance of <code>public.demographic_source</code>
     */
    public static final DemographicSource DEMOGRAPHIC_SOURCE = new DemographicSource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DemographicSourceRecord> getRecordType() {
        return DemographicSourceRecord.class;
    }

    /**
     * The column <code>public.demographic_source.id</code>.
     */
    public final TableField<DemographicSourceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('demographic_source_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.demographic_source.code</code>.
     */
    public final TableField<DemographicSourceRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.demographic_source.name</code>.
     */
    public final TableField<DemographicSourceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>public.demographic_source</code> table reference
     */
    public DemographicSource() {
        this(DSL.name("demographic_source"), null);
    }

    /**
     * Create an aliased <code>public.demographic_source</code> table reference
     */
    public DemographicSource(String alias) {
        this(DSL.name(alias), DEMOGRAPHIC_SOURCE);
    }

    /**
     * Create an aliased <code>public.demographic_source</code> table reference
     */
    public DemographicSource(Name alias) {
        this(alias, DEMOGRAPHIC_SOURCE);
    }

    private DemographicSource(Name alias, Table<DemographicSourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private DemographicSource(Name alias, Table<DemographicSourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEMOGRAPHIC_SOURCE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DemographicSourceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEMOGRAPHIC_SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DemographicSourceRecord> getPrimaryKey() {
        return Keys.DEMOGRAPHIC_SOURCE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DemographicSourceRecord>> getKeys() {
        return Arrays.<UniqueKey<DemographicSourceRecord>>asList(Keys.DEMOGRAPHIC_SOURCE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemographicSource as(String alias) {
        return new DemographicSource(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemographicSource as(Name alias) {
        return new DemographicSource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DemographicSource rename(String name) {
        return new DemographicSource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DemographicSource rename(Name name) {
        return new DemographicSource(name, null);
    }
}
