/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.api.db.tables.ModelVersionCountry;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelVersionCountryRecord extends UpdatableRecordImpl<ModelVersionCountryRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 2073817135;

    /**
     * Setter for <code>public.model_version_country.model_version</code>.
     */
    public void setModelVersion(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.model_version_country.model_version</code>.
     */
    public Integer getModelVersion() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.model_version_country.country</code>.
     */
    public void setCountry(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.model_version_country.country</code>.
     */
    public String getCountry() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ModelVersionCountry.MODEL_VERSION_COUNTRY.MODEL_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ModelVersionCountry.MODEL_VERSION_COUNTRY.COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getModelVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getModelVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelVersionCountryRecord value1(Integer value) {
        setModelVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelVersionCountryRecord value2(String value) {
        setCountry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelVersionCountryRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModelVersionCountryRecord
     */
    public ModelVersionCountryRecord() {
        super(ModelVersionCountry.MODEL_VERSION_COUNTRY);
    }

    /**
     * Create a detached, initialised ModelVersionCountryRecord
     */
    public ModelVersionCountryRecord(Integer modelVersion, String country) {
        super(ModelVersionCountry.MODEL_VERSION_COUNTRY);

        set(0, modelVersion);
        set(1, country);
    }
}
