/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateSetStatusRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BurdenEstimateSetStatus extends TableImpl<BurdenEstimateSetStatusRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.burden_estimate_set_status</code>
     */
    public static final BurdenEstimateSetStatus BURDEN_ESTIMATE_SET_STATUS = new BurdenEstimateSetStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BurdenEstimateSetStatusRecord> getRecordType() {
        return BurdenEstimateSetStatusRecord.class;
    }

    /**
     * The column <code>public.burden_estimate_set_status.code</code>. Valid
     * values: {empty, partial, complete, invalid}
     */
    public final TableField<BurdenEstimateSetStatusRecord, String> CODE = createField(DSL.name("code"), SQLDataType.CLOB.nullable(false), this, "Valid values: {empty, partial, complete, invalid}");

    /**
     * The column <code>public.burden_estimate_set_status.description</code>.
     */
    public final TableField<BurdenEstimateSetStatusRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.CLOB.nullable(false), this, "");

    private BurdenEstimateSetStatus(Name alias, Table<BurdenEstimateSetStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private BurdenEstimateSetStatus(Name alias, Table<BurdenEstimateSetStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.burden_estimate_set_status</code> table
     * reference
     */
    public BurdenEstimateSetStatus(String alias) {
        this(DSL.name(alias), BURDEN_ESTIMATE_SET_STATUS);
    }

    /**
     * Create an aliased <code>public.burden_estimate_set_status</code> table
     * reference
     */
    public BurdenEstimateSetStatus(Name alias) {
        this(alias, BURDEN_ESTIMATE_SET_STATUS);
    }

    /**
     * Create a <code>public.burden_estimate_set_status</code> table reference
     */
    public BurdenEstimateSetStatus() {
        this(DSL.name("burden_estimate_set_status"), null);
    }

    public <O extends Record> BurdenEstimateSetStatus(Table<O> child, ForeignKey<O, BurdenEstimateSetStatusRecord> key) {
        super(child, key, BURDEN_ESTIMATE_SET_STATUS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<BurdenEstimateSetStatusRecord> getPrimaryKey() {
        return Keys.BURDEN_ESTIMATE_SET_STATUS_PKEY;
    }

    @Override
    public BurdenEstimateSetStatus as(String alias) {
        return new BurdenEstimateSetStatus(DSL.name(alias), this);
    }

    @Override
    public BurdenEstimateSetStatus as(Name alias) {
        return new BurdenEstimateSetStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BurdenEstimateSetStatus rename(String name) {
        return new BurdenEstimateSetStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BurdenEstimateSetStatus rename(Name name) {
        return new BurdenEstimateSetStatus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
