/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.GaviEligibilityStatusRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GaviEligibilityStatus extends TableImpl<GaviEligibilityStatusRecord> {

    private static final long serialVersionUID = -1874636773;

    /**
     * The reference instance of <code>public.gavi_eligibility_status</code>
     */
    public static final GaviEligibilityStatus GAVI_ELIGIBILITY_STATUS = new GaviEligibilityStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GaviEligibilityStatusRecord> getRecordType() {
        return GaviEligibilityStatusRecord.class;
    }

    /**
     * The column <code>public.gavi_eligibility_status.id</code>.
     */
    public final TableField<GaviEligibilityStatusRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.gavi_eligibility_status.name</code>.
     */
    public final TableField<GaviEligibilityStatusRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.gavi_eligibility_status</code> table reference
     */
    public GaviEligibilityStatus() {
        this(DSL.name("gavi_eligibility_status"), null);
    }

    /**
     * Create an aliased <code>public.gavi_eligibility_status</code> table reference
     */
    public GaviEligibilityStatus(String alias) {
        this(DSL.name(alias), GAVI_ELIGIBILITY_STATUS);
    }

    /**
     * Create an aliased <code>public.gavi_eligibility_status</code> table reference
     */
    public GaviEligibilityStatus(Name alias) {
        this(alias, GAVI_ELIGIBILITY_STATUS);
    }

    private GaviEligibilityStatus(Name alias, Table<GaviEligibilityStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private GaviEligibilityStatus(Name alias, Table<GaviEligibilityStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GAVI_ELIGIBILITY_STATUS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GaviEligibilityStatusRecord> getPrimaryKey() {
        return Keys.GAVI_ELIGIBILITY_STATUS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GaviEligibilityStatusRecord>> getKeys() {
        return Arrays.<UniqueKey<GaviEligibilityStatusRecord>>asList(Keys.GAVI_ELIGIBILITY_STATUS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaviEligibilityStatus as(String alias) {
        return new GaviEligibilityStatus(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaviEligibilityStatus as(Name alias) {
        return new GaviEligibilityStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GaviEligibilityStatus rename(String name) {
        return new GaviEligibilityStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GaviEligibilityStatus rename(Name name) {
        return new GaviEligibilityStatus(name, null);
    }
}
