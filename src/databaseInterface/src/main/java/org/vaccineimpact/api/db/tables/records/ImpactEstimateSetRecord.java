/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.vaccineimpact.api.db.tables.ImpactEstimateSet;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImpactEstimateSetRecord extends UpdatableRecordImpl<ImpactEstimateSetRecord> implements Record7<Integer, Integer, LocalDateTime, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.impact_estimate_set.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.impact_estimate_set.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>public.impact_estimate_set.impact_estimate_recipe</code>.
     */
    public void setImpactEstimateRecipe(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.impact_estimate_set.impact_estimate_recipe</code>.
     */
    public Integer getImpactEstimateRecipe() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.impact_estimate_set.computed_on</code>.
     */
    public void setComputedOn(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.impact_estimate_set.computed_on</code>.
     */
    public LocalDateTime getComputedOn() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.impact_estimate_set.recipe_touchstone</code>.
     */
    public void setRecipeTouchstone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.impact_estimate_set.recipe_touchstone</code>.
     */
    public String getRecipeTouchstone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.impact_estimate_set.coverage_touchstone</code>.
     */
    public void setCoverageTouchstone(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.impact_estimate_set.coverage_touchstone</code>.
     */
    public String getCoverageTouchstone() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.impact_estimate_set.focal_coverage_set</code>.
     */
    public void setFocalCoverageSet(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.impact_estimate_set.focal_coverage_set</code>.
     */
    public Integer getFocalCoverageSet() {
        return (Integer) get(5);
    }

    /**
     * Setter for
     * <code>public.impact_estimate_set.focal_burden_estimate_set</code>.
     */
    public void setFocalBurdenEstimateSet(Integer value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>public.impact_estimate_set.focal_burden_estimate_set</code>.
     */
    public Integer getFocalBurdenEstimateSet() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, LocalDateTime, String, String, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, LocalDateTime, String, String, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ImpactEstimateSet.IMPACT_ESTIMATE_SET.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ImpactEstimateSet.IMPACT_ESTIMATE_SET.IMPACT_ESTIMATE_RECIPE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ImpactEstimateSet.IMPACT_ESTIMATE_SET.COMPUTED_ON;
    }

    @Override
    public Field<String> field4() {
        return ImpactEstimateSet.IMPACT_ESTIMATE_SET.RECIPE_TOUCHSTONE;
    }

    @Override
    public Field<String> field5() {
        return ImpactEstimateSet.IMPACT_ESTIMATE_SET.COVERAGE_TOUCHSTONE;
    }

    @Override
    public Field<Integer> field6() {
        return ImpactEstimateSet.IMPACT_ESTIMATE_SET.FOCAL_COVERAGE_SET;
    }

    @Override
    public Field<Integer> field7() {
        return ImpactEstimateSet.IMPACT_ESTIMATE_SET.FOCAL_BURDEN_ESTIMATE_SET;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getImpactEstimateRecipe();
    }

    @Override
    public LocalDateTime component3() {
        return getComputedOn();
    }

    @Override
    public String component4() {
        return getRecipeTouchstone();
    }

    @Override
    public String component5() {
        return getCoverageTouchstone();
    }

    @Override
    public Integer component6() {
        return getFocalCoverageSet();
    }

    @Override
    public Integer component7() {
        return getFocalBurdenEstimateSet();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getImpactEstimateRecipe();
    }

    @Override
    public LocalDateTime value3() {
        return getComputedOn();
    }

    @Override
    public String value4() {
        return getRecipeTouchstone();
    }

    @Override
    public String value5() {
        return getCoverageTouchstone();
    }

    @Override
    public Integer value6() {
        return getFocalCoverageSet();
    }

    @Override
    public Integer value7() {
        return getFocalBurdenEstimateSet();
    }

    @Override
    public ImpactEstimateSetRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ImpactEstimateSetRecord value2(Integer value) {
        setImpactEstimateRecipe(value);
        return this;
    }

    @Override
    public ImpactEstimateSetRecord value3(LocalDateTime value) {
        setComputedOn(value);
        return this;
    }

    @Override
    public ImpactEstimateSetRecord value4(String value) {
        setRecipeTouchstone(value);
        return this;
    }

    @Override
    public ImpactEstimateSetRecord value5(String value) {
        setCoverageTouchstone(value);
        return this;
    }

    @Override
    public ImpactEstimateSetRecord value6(Integer value) {
        setFocalCoverageSet(value);
        return this;
    }

    @Override
    public ImpactEstimateSetRecord value7(Integer value) {
        setFocalBurdenEstimateSet(value);
        return this;
    }

    @Override
    public ImpactEstimateSetRecord values(Integer value1, Integer value2, LocalDateTime value3, String value4, String value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImpactEstimateSetRecord
     */
    public ImpactEstimateSetRecord() {
        super(ImpactEstimateSet.IMPACT_ESTIMATE_SET);
    }

    /**
     * Create a detached, initialised ImpactEstimateSetRecord
     */
    public ImpactEstimateSetRecord(Integer id, Integer impactEstimateRecipe, LocalDateTime computedOn, String recipeTouchstone, String coverageTouchstone, Integer focalCoverageSet, Integer focalBurdenEstimateSet) {
        super(ImpactEstimateSet.IMPACT_ESTIMATE_SET);

        setId(id);
        setImpactEstimateRecipe(impactEstimateRecipe);
        setComputedOn(computedOn);
        setRecipeTouchstone(recipeTouchstone);
        setCoverageTouchstone(coverageTouchstone);
        setFocalCoverageSet(focalCoverageSet);
        setFocalBurdenEstimateSet(focalBurdenEstimateSet);
    }
}
