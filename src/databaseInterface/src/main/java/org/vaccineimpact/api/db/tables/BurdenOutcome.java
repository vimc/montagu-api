/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.BurdenOutcomeRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BurdenOutcome extends TableImpl<BurdenOutcomeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.burden_outcome</code>
     */
    public static final BurdenOutcome BURDEN_OUTCOME = new BurdenOutcome();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BurdenOutcomeRecord> getRecordType() {
        return BurdenOutcomeRecord.class;
    }

    /**
     * The column <code>public.burden_outcome.id</code>.
     */
    public final TableField<BurdenOutcomeRecord, Short> ID = createField(DSL.name("id"), SQLDataType.SMALLINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.burden_outcome.code</code>.
     */
    public final TableField<BurdenOutcomeRecord, String> CODE = createField(DSL.name("code"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.burden_outcome.name</code>.
     */
    public final TableField<BurdenOutcomeRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.burden_outcome.proportion</code>.
     */
    public final TableField<BurdenOutcomeRecord, Boolean> PROPORTION = createField(DSL.name("proportion"), SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");

    private BurdenOutcome(Name alias, Table<BurdenOutcomeRecord> aliased) {
        this(alias, aliased, null);
    }

    private BurdenOutcome(Name alias, Table<BurdenOutcomeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.burden_outcome</code> table reference
     */
    public BurdenOutcome(String alias) {
        this(DSL.name(alias), BURDEN_OUTCOME);
    }

    /**
     * Create an aliased <code>public.burden_outcome</code> table reference
     */
    public BurdenOutcome(Name alias) {
        this(alias, BURDEN_OUTCOME);
    }

    /**
     * Create a <code>public.burden_outcome</code> table reference
     */
    public BurdenOutcome() {
        this(DSL.name("burden_outcome"), null);
    }

    public <O extends Record> BurdenOutcome(Table<O> child, ForeignKey<O, BurdenOutcomeRecord> key) {
        super(child, key, BURDEN_OUTCOME);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<BurdenOutcomeRecord, Short> getIdentity() {
        return (Identity<BurdenOutcomeRecord, Short>) super.getIdentity();
    }

    @Override
    public UniqueKey<BurdenOutcomeRecord> getPrimaryKey() {
        return Keys.BURDEN_OUTCOME_PKEY;
    }

    @Override
    public List<UniqueKey<BurdenOutcomeRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.BURDEN_OUTCOME_CODE_KEY);
    }

    @Override
    public BurdenOutcome as(String alias) {
        return new BurdenOutcome(DSL.name(alias), this);
    }

    @Override
    public BurdenOutcome as(Name alias) {
        return new BurdenOutcome(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BurdenOutcome rename(String name) {
        return new BurdenOutcome(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BurdenOutcome rename(Name name) {
        return new BurdenOutcome(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Short, String, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
