/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.ProjectionVariantRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectionVariant extends TableImpl<ProjectionVariantRecord> {

    private static final long serialVersionUID = 1938308876;

    /**
     * The reference instance of <code>public.projection_variant</code>
     */
    public static final ProjectionVariant PROJECTION_VARIANT = new ProjectionVariant();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProjectionVariantRecord> getRecordType() {
        return ProjectionVariantRecord.class;
    }

    /**
     * The column <code>public.projection_variant.id</code>.
     */
    public final TableField<ProjectionVariantRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('projection_variant_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.projection_variant.code</code>.
     */
    public final TableField<ProjectionVariantRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.projection_variant.name</code>.
     */
    public final TableField<ProjectionVariantRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false).defaultValue(org.jooq.impl.DSL.field("'NULL'::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>public.projection_variant</code> table reference
     */
    public ProjectionVariant() {
        this("projection_variant", null);
    }

    /**
     * Create an aliased <code>public.projection_variant</code> table reference
     */
    public ProjectionVariant(String alias) {
        this(alias, PROJECTION_VARIANT);
    }

    private ProjectionVariant(String alias, Table<ProjectionVariantRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProjectionVariant(String alias, Table<ProjectionVariantRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProjectionVariantRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROJECTION_VARIANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProjectionVariantRecord> getPrimaryKey() {
        return Keys.PROJECTION_VARIANT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProjectionVariantRecord>> getKeys() {
        return Arrays.<UniqueKey<ProjectionVariantRecord>>asList(Keys.PROJECTION_VARIANT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectionVariant as(String alias) {
        return new ProjectionVariant(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProjectionVariant rename(String name) {
        return new ProjectionVariant(name, null);
    }
}
