/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.CoverageSetRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoverageSet extends TableImpl<CoverageSetRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.coverage_set</code>
     */
    public static final CoverageSet COVERAGE_SET = new CoverageSet();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoverageSetRecord> getRecordType() {
        return CoverageSetRecord.class;
    }

    /**
     * The column <code>public.coverage_set.id</code>.
     */
    public final TableField<CoverageSetRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.coverage_set.name</code>.
     */
    public final TableField<CoverageSetRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.coverage_set.touchstone</code>.
     */
    public final TableField<CoverageSetRecord, String> TOUCHSTONE = createField(DSL.name("touchstone"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.coverage_set.vaccine</code>.
     */
    public final TableField<CoverageSetRecord, String> VACCINE = createField(DSL.name("vaccine"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.coverage_set.gavi_support_level</code>.
     */
    public final TableField<CoverageSetRecord, String> GAVI_SUPPORT_LEVEL = createField(DSL.name("gavi_support_level"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.coverage_set.activity_type</code>.
     */
    public final TableField<CoverageSetRecord, String> ACTIVITY_TYPE = createField(DSL.name("activity_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.coverage_set.coverage_set_upload_metadata</code>.
     */
    public final TableField<CoverageSetRecord, Integer> COVERAGE_SET_UPLOAD_METADATA = createField(DSL.name("coverage_set_upload_metadata"), SQLDataType.INTEGER, this, "");

    private CoverageSet(Name alias, Table<CoverageSetRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoverageSet(Name alias, Table<CoverageSetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.coverage_set</code> table reference
     */
    public CoverageSet(String alias) {
        this(DSL.name(alias), COVERAGE_SET);
    }

    /**
     * Create an aliased <code>public.coverage_set</code> table reference
     */
    public CoverageSet(Name alias) {
        this(alias, COVERAGE_SET);
    }

    /**
     * Create a <code>public.coverage_set</code> table reference
     */
    public CoverageSet() {
        this(DSL.name("coverage_set"), null);
    }

    public <O extends Record> CoverageSet(Table<O> child, ForeignKey<O, CoverageSetRecord> key) {
        super(child, key, COVERAGE_SET);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<CoverageSetRecord, Integer> getIdentity() {
        return (Identity<CoverageSetRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoverageSetRecord> getPrimaryKey() {
        return Keys.COVERAGE_SET_PKEY;
    }

    @Override
    public List<ForeignKey<CoverageSetRecord, ?>> getReferences() {
        return Arrays.asList(Keys.COVERAGE_SET__COVERAGE_SET_TOUCHSTONE_FKEY, Keys.COVERAGE_SET__COVERAGE_SET_VACCINE_FKEY, Keys.COVERAGE_SET__COVERAGE_SET_GAVI_SUPPORT_LEVEL_FKEY, Keys.COVERAGE_SET__COVERAGE_SET_ACTIVITY_TYPE_FKEY, Keys.COVERAGE_SET__COVERAGE_SET_COVERAGE_SET_UPLOAD_METADATA_FKEY);
    }

    private transient Touchstone _touchstone;
    private transient Vaccine _vaccine;
    private transient GaviSupportLevel _gaviSupportLevel;
    private transient ActivityType _activityType;
    private transient CoverageSetUploadMetadata _coverageSetUploadMetadata;

    /**
     * Get the implicit join path to the <code>public.touchstone</code> table.
     */
    public Touchstone touchstone() {
        if (_touchstone == null)
            _touchstone = new Touchstone(this, Keys.COVERAGE_SET__COVERAGE_SET_TOUCHSTONE_FKEY);

        return _touchstone;
    }

    /**
     * Get the implicit join path to the <code>public.vaccine</code> table.
     */
    public Vaccine vaccine() {
        if (_vaccine == null)
            _vaccine = new Vaccine(this, Keys.COVERAGE_SET__COVERAGE_SET_VACCINE_FKEY);

        return _vaccine;
    }

    /**
     * Get the implicit join path to the <code>public.gavi_support_level</code>
     * table.
     */
    public GaviSupportLevel gaviSupportLevel() {
        if (_gaviSupportLevel == null)
            _gaviSupportLevel = new GaviSupportLevel(this, Keys.COVERAGE_SET__COVERAGE_SET_GAVI_SUPPORT_LEVEL_FKEY);

        return _gaviSupportLevel;
    }

    /**
     * Get the implicit join path to the <code>public.activity_type</code>
     * table.
     */
    public ActivityType activityType() {
        if (_activityType == null)
            _activityType = new ActivityType(this, Keys.COVERAGE_SET__COVERAGE_SET_ACTIVITY_TYPE_FKEY);

        return _activityType;
    }

    /**
     * Get the implicit join path to the
     * <code>public.coverage_set_upload_metadata</code> table.
     */
    public CoverageSetUploadMetadata coverageSetUploadMetadata() {
        if (_coverageSetUploadMetadata == null)
            _coverageSetUploadMetadata = new CoverageSetUploadMetadata(this, Keys.COVERAGE_SET__COVERAGE_SET_COVERAGE_SET_UPLOAD_METADATA_FKEY);

        return _coverageSetUploadMetadata;
    }

    @Override
    public CoverageSet as(String alias) {
        return new CoverageSet(DSL.name(alias), this);
    }

    @Override
    public CoverageSet as(Name alias) {
        return new CoverageSet(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoverageSet rename(String name) {
        return new CoverageSet(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoverageSet rename(Name name) {
        return new CoverageSet(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
