/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.OnetimeTokenRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OnetimeToken extends TableImpl<OnetimeTokenRecord> {

    private static final long serialVersionUID = -2012025210;

    /**
     * The reference instance of <code>public.onetime_token</code>
     */
    public static final OnetimeToken ONETIME_TOKEN = new OnetimeToken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OnetimeTokenRecord> getRecordType() {
        return OnetimeTokenRecord.class;
    }

    /**
     * The column <code>public.onetime_token.token</code>.
     */
    public final TableField<OnetimeTokenRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.onetime_token</code> table reference
     */
    public OnetimeToken() {
        this(DSL.name("onetime_token"), null);
    }

    /**
     * Create an aliased <code>public.onetime_token</code> table reference
     */
    public OnetimeToken(String alias) {
        this(DSL.name(alias), ONETIME_TOKEN);
    }

    /**
     * Create an aliased <code>public.onetime_token</code> table reference
     */
    public OnetimeToken(Name alias) {
        this(alias, ONETIME_TOKEN);
    }

    private OnetimeToken(Name alias, Table<OnetimeTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private OnetimeToken(Name alias, Table<OnetimeTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ONETIME_TOKEN_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OnetimeTokenRecord> getPrimaryKey() {
        return Keys.ONETIME_TOKEN_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OnetimeTokenRecord>> getKeys() {
        return Arrays.<UniqueKey<OnetimeTokenRecord>>asList(Keys.ONETIME_TOKEN_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OnetimeToken as(String alias) {
        return new OnetimeToken(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OnetimeToken as(Name alias) {
        return new OnetimeToken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OnetimeToken rename(String name) {
        return new OnetimeToken(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OnetimeToken rename(Name name) {
        return new OnetimeToken(name, null);
    }
}
