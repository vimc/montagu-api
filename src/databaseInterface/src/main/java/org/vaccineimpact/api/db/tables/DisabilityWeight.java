/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.DisabilityWeightRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DisabilityWeight extends TableImpl<DisabilityWeightRecord> {

    private static final long serialVersionUID = 1728774366;

    /**
     * The reference instance of <code>public.disability_weight</code>
     */
    public static final DisabilityWeight DISABILITY_WEIGHT = new DisabilityWeight();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DisabilityWeightRecord> getRecordType() {
        return DisabilityWeightRecord.class;
    }

    /**
     * The column <code>public.disability_weight.id</code>.
     */
    public final TableField<DisabilityWeightRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('disability_weight_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.disability_weight.touchstone</code>.
     */
    public final TableField<DisabilityWeightRecord, String> TOUCHSTONE = createField("touchstone", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.disability_weight.disease</code>.
     */
    public final TableField<DisabilityWeightRecord, String> DISEASE = createField("disease", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.disability_weight.sequela</code>.
     */
    public final TableField<DisabilityWeightRecord, String> SEQUELA = createField("sequela", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.disability_weight.disability_weight</code>.
     */
    public final TableField<DisabilityWeightRecord, BigDecimal> DISABILITY_WEIGHT_ = createField("disability_weight", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.disability_weight.disability_weight_min</code>.
     */
    public final TableField<DisabilityWeightRecord, BigDecimal> DISABILITY_WEIGHT_MIN = createField("disability_weight_min", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.disability_weight.disability_weight_max</code>.
     */
    public final TableField<DisabilityWeightRecord, BigDecimal> DISABILITY_WEIGHT_MAX = createField("disability_weight_max", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * Create a <code>public.disability_weight</code> table reference
     */
    public DisabilityWeight() {
        this(DSL.name("disability_weight"), null);
    }

    /**
     * Create an aliased <code>public.disability_weight</code> table reference
     */
    public DisabilityWeight(String alias) {
        this(DSL.name(alias), DISABILITY_WEIGHT);
    }

    /**
     * Create an aliased <code>public.disability_weight</code> table reference
     */
    public DisabilityWeight(Name alias) {
        this(alias, DISABILITY_WEIGHT);
    }

    private DisabilityWeight(Name alias, Table<DisabilityWeightRecord> aliased) {
        this(alias, aliased, null);
    }

    private DisabilityWeight(Name alias, Table<DisabilityWeightRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DISABILITY_WEIGHT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DisabilityWeightRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DISABILITY_WEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DisabilityWeightRecord> getPrimaryKey() {
        return Keys.DISABILITY_WEIGHT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DisabilityWeightRecord>> getKeys() {
        return Arrays.<UniqueKey<DisabilityWeightRecord>>asList(Keys.DISABILITY_WEIGHT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DisabilityWeightRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DisabilityWeightRecord, ?>>asList(Keys.DISABILITY_WEIGHT__DISABILITY_WEIGHT_TOUCHSTONE_FKEY, Keys.DISABILITY_WEIGHT__DISABILITY_WEIGHT_DISEASE_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DisabilityWeight as(String alias) {
        return new DisabilityWeight(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DisabilityWeight as(Name alias) {
        return new DisabilityWeight(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DisabilityWeight rename(String name) {
        return new DisabilityWeight(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DisabilityWeight rename(Name name) {
        return new DisabilityWeight(name, null);
    }
}
