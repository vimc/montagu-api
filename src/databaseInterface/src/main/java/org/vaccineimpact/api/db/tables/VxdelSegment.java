/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row1;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.VxdelSegmentRecord;


/**
 * Status within BMGF vxdel country classifiecation
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VxdelSegment extends TableImpl<VxdelSegmentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.vxdel_segment</code>
     */
    public static final VxdelSegment VXDEL_SEGMENT = new VxdelSegment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VxdelSegmentRecord> getRecordType() {
        return VxdelSegmentRecord.class;
    }

    /**
     * The column <code>public.vxdel_segment.id</code>.
     */
    public final TableField<VxdelSegmentRecord, String> ID = createField(DSL.name("id"), SQLDataType.CLOB.nullable(false), this, "");

    private VxdelSegment(Name alias, Table<VxdelSegmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private VxdelSegment(Name alias, Table<VxdelSegmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Status within BMGF vxdel country classifiecation"), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.vxdel_segment</code> table reference
     */
    public VxdelSegment(String alias) {
        this(DSL.name(alias), VXDEL_SEGMENT);
    }

    /**
     * Create an aliased <code>public.vxdel_segment</code> table reference
     */
    public VxdelSegment(Name alias) {
        this(alias, VXDEL_SEGMENT);
    }

    /**
     * Create a <code>public.vxdel_segment</code> table reference
     */
    public VxdelSegment() {
        this(DSL.name("vxdel_segment"), null);
    }

    public <O extends Record> VxdelSegment(Table<O> child, ForeignKey<O, VxdelSegmentRecord> key) {
        super(child, key, VXDEL_SEGMENT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<VxdelSegmentRecord> getPrimaryKey() {
        return Keys.VXDEL_SEGMENT_PKEY;
    }

    @Override
    public VxdelSegment as(String alias) {
        return new VxdelSegment(DSL.name(alias), this);
    }

    @Override
    public VxdelSegment as(Name alias) {
        return new VxdelSegment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VxdelSegment rename(String name) {
        return new VxdelSegment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VxdelSegment rename(Name name) {
        return new VxdelSegment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row1 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row1<String> fieldsRow() {
        return (Row1) super.fieldsRow();
    }
}
