/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.WorldbankStatusRecord;


/**
 * Country development status according to the worldbank
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorldbankStatus extends TableImpl<WorldbankStatusRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.worldbank_status</code>
     */
    public static final WorldbankStatus WORLDBANK_STATUS = new WorldbankStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorldbankStatusRecord> getRecordType() {
        return WorldbankStatusRecord.class;
    }

    /**
     * The column <code>public.worldbank_status.id</code>.
     */
    public final TableField<WorldbankStatusRecord, String> ID = createField(DSL.name("id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.worldbank_status.name</code>.
     */
    public final TableField<WorldbankStatusRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

    private WorldbankStatus(Name alias, Table<WorldbankStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorldbankStatus(Name alias, Table<WorldbankStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Country development status according to the worldbank"), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.worldbank_status</code> table reference
     */
    public WorldbankStatus(String alias) {
        this(DSL.name(alias), WORLDBANK_STATUS);
    }

    /**
     * Create an aliased <code>public.worldbank_status</code> table reference
     */
    public WorldbankStatus(Name alias) {
        this(alias, WORLDBANK_STATUS);
    }

    /**
     * Create a <code>public.worldbank_status</code> table reference
     */
    public WorldbankStatus() {
        this(DSL.name("worldbank_status"), null);
    }

    public <O extends Record> WorldbankStatus(Table<O> child, ForeignKey<O, WorldbankStatusRecord> key) {
        super(child, key, WORLDBANK_STATUS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<WorldbankStatusRecord> getPrimaryKey() {
        return Keys.WORLDBANK_STATUS_PKEY;
    }

    @Override
    public WorldbankStatus as(String alias) {
        return new WorldbankStatus(DSL.name(alias), this);
    }

    @Override
    public WorldbankStatus as(Name alias) {
        return new WorldbankStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorldbankStatus rename(String name) {
        return new WorldbankStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorldbankStatus rename(Name name) {
        return new WorldbankStatus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
