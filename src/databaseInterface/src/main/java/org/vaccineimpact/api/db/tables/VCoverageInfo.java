/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.VCoverageInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VCoverageInfo extends TableImpl<VCoverageInfoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.v_coverage_info</code>
     */
    public static final VCoverageInfo V_COVERAGE_INFO = new VCoverageInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VCoverageInfoRecord> getRecordType() {
        return VCoverageInfoRecord.class;
    }

    /**
     * The column <code>public.v_coverage_info.touchstone</code>.
     */
    public final TableField<VCoverageInfoRecord, String> TOUCHSTONE = createField(DSL.name("touchstone"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.v_coverage_info.scenario_description</code>.
     */
    public final TableField<VCoverageInfoRecord, String> SCENARIO_DESCRIPTION = createField(DSL.name("scenario_description"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.v_coverage_info.disease</code>.
     */
    public final TableField<VCoverageInfoRecord, String> DISEASE = createField(DSL.name("disease"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.v_coverage_info.vaccine</code>.
     */
    public final TableField<VCoverageInfoRecord, String> VACCINE = createField(DSL.name("vaccine"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.v_coverage_info.gavi_support_level</code>.
     */
    public final TableField<VCoverageInfoRecord, String> GAVI_SUPPORT_LEVEL = createField(DSL.name("gavi_support_level"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.v_coverage_info.activity_type</code>.
     */
    public final TableField<VCoverageInfoRecord, String> ACTIVITY_TYPE = createField(DSL.name("activity_type"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.v_coverage_info.coverage_set_id</code>.
     */
    public final TableField<VCoverageInfoRecord, Integer> COVERAGE_SET_ID = createField(DSL.name("coverage_set_id"), SQLDataType.INTEGER, this, "");

    private VCoverageInfo(Name alias, Table<VCoverageInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private VCoverageInfo(Name alias, Table<VCoverageInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"v_coverage_info\" as  SELECT scenario.touchstone,\n    scenario.scenario_description,\n    scenario_description.disease,\n    coverage_set.vaccine,\n    coverage_set.gavi_support_level,\n    coverage_set.activity_type,\n    coverage_set.id AS coverage_set_id\n   FROM ((((coverage_set\n     JOIN touchstone ON ((coverage_set.touchstone = touchstone.id)))\n     JOIN scenario_coverage_set ON ((scenario_coverage_set.coverage_set = coverage_set.id)))\n     JOIN scenario ON ((scenario_coverage_set.scenario = scenario.id)))\n     JOIN scenario_description ON ((scenario.scenario_description = scenario_description.id)));"));
    }

    /**
     * Create an aliased <code>public.v_coverage_info</code> table reference
     */
    public VCoverageInfo(String alias) {
        this(DSL.name(alias), V_COVERAGE_INFO);
    }

    /**
     * Create an aliased <code>public.v_coverage_info</code> table reference
     */
    public VCoverageInfo(Name alias) {
        this(alias, V_COVERAGE_INFO);
    }

    /**
     * Create a <code>public.v_coverage_info</code> table reference
     */
    public VCoverageInfo() {
        this(DSL.name("v_coverage_info"), null);
    }

    public <O extends Record> VCoverageInfo(Table<O> child, ForeignKey<O, VCoverageInfoRecord> key) {
        super(child, key, V_COVERAGE_INFO);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public VCoverageInfo as(String alias) {
        return new VCoverageInfo(DSL.name(alias), this);
    }

    @Override
    public VCoverageInfo as(Name alias) {
        return new VCoverageInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VCoverageInfo rename(String name) {
        return new VCoverageInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VCoverageInfo rename(Name name) {
        return new VCoverageInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
