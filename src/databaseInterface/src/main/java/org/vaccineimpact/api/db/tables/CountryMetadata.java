/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.CountryMetadataRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryMetadata extends TableImpl<CountryMetadataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.country_metadata</code>
     */
    public static final CountryMetadata COUNTRY_METADATA = new CountryMetadata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CountryMetadataRecord> getRecordType() {
        return CountryMetadataRecord.class;
    }

    /**
     * The column <code>public.country_metadata.id</code>.
     */
    public final TableField<CountryMetadataRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.country_metadata.touchstone</code>.
     */
    public final TableField<CountryMetadataRecord, String> TOUCHSTONE = createField(DSL.name("touchstone"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.country</code>.
     */
    public final TableField<CountryMetadataRecord, String> COUNTRY = createField(DSL.name("country"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.gavi73</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> GAVI73 = createField(DSL.name("gavi73"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.who_region</code>.
     */
    public final TableField<CountryMetadataRecord, String> WHO_REGION = createField(DSL.name("who_region"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.wuenic_coverage</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> WUENIC_COVERAGE = createField(DSL.name("wuenic_coverage"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.continent</code>.
     */
    public final TableField<CountryMetadataRecord, String> CONTINENT = createField(DSL.name("continent"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.region</code>.
     */
    public final TableField<CountryMetadataRecord, String> REGION = createField(DSL.name("region"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.francophone</code>. 28
     * Gavi-supported French-speaking countries of interest to Gavi donors + 1
     * associated member + 4 observer counrties
     */
    public final TableField<CountryMetadataRecord, String> FRANCOPHONE = createField(DSL.name("francophone"), SQLDataType.CLOB.nullable(false), this, "28 Gavi-supported French-speaking countries of interest to Gavi donors + 1 associated member + 4 observer counrties");

    /**
     * The column <code>public.country_metadata.vxdel_segment</code>. An
     * internal grouping as used by BMFG to stratify countries
     */
    public final TableField<CountryMetadataRecord, String> VXDEL_SEGMENT = createField(DSL.name("vxdel_segment"), SQLDataType.CLOB.nullable(false), this, "An internal grouping as used by BMFG to stratify countries");

    /**
     * The column <code>public.country_metadata.pine_5</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> PINE_5 = createField(DSL.name("pine_5"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.dove94</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> DOVE94 = createField(DSL.name("dove94"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.gavi68</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> GAVI68 = createField(DSL.name("gavi68"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.gavi72</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> GAVI72 = createField(DSL.name("gavi72"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.gavi77</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> GAVI77 = createField(DSL.name("gavi77"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.dove96</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> DOVE96 = createField(DSL.name("dove96"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.gavi_region</code>.
     */
    public final TableField<CountryMetadataRecord, String> GAVI_REGION = createField(DSL.name("gavi_region"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.gavi_pef_tier</code>. Gavi
     * Partners engagement framework; Tier 1, 2 or 3 (stored as integer). NULL
     * values indicate "Not PEF"
     */
    public final TableField<CountryMetadataRecord, Integer> GAVI_PEF_TIER = createField(DSL.name("gavi_pef_tier"), SQLDataType.INTEGER, this, "Gavi Partners engagement framework; Tier 1, 2 or 3 (stored as integer). NULL values indicate \"Not PEF\"");

    /**
     * The column <code>public.country_metadata.gavi74</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> GAVI74 = createField(DSL.name("gavi74"), SQLDataType.BOOLEAN.nullable(false), this, "");

    private CountryMetadata(Name alias, Table<CountryMetadataRecord> aliased) {
        this(alias, aliased, null);
    }

    private CountryMetadata(Name alias, Table<CountryMetadataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.country_metadata</code> table reference
     */
    public CountryMetadata(String alias) {
        this(DSL.name(alias), COUNTRY_METADATA);
    }

    /**
     * Create an aliased <code>public.country_metadata</code> table reference
     */
    public CountryMetadata(Name alias) {
        this(alias, COUNTRY_METADATA);
    }

    /**
     * Create a <code>public.country_metadata</code> table reference
     */
    public CountryMetadata() {
        this(DSL.name("country_metadata"), null);
    }

    public <O extends Record> CountryMetadata(Table<O> child, ForeignKey<O, CountryMetadataRecord> key) {
        super(child, key, COUNTRY_METADATA);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<CountryMetadataRecord, Integer> getIdentity() {
        return (Identity<CountryMetadataRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CountryMetadataRecord> getPrimaryKey() {
        return Keys.COUNTRY_METADATA_PKEY;
    }

    @Override
    public List<ForeignKey<CountryMetadataRecord, ?>> getReferences() {
        return Arrays.asList(Keys.COUNTRY_METADATA__COUNTRY_METADATA_TOUCHSTONE_FKEY, Keys.COUNTRY_METADATA__COUNTRY_METADATA_COUNTRY_FKEY, Keys.COUNTRY_METADATA__COUNTRY_METADATA_FRANCOPHONE_FKEY, Keys.COUNTRY_METADATA__COUNTRY_METADATA_VXDEL_SEGMENT_FKEY, Keys.COUNTRY_METADATA__COUNTRY_METADATA_GAVI_REGION_FKEY);
    }

    private transient Touchstone _touchstone;
    private transient Country _country;
    private transient FrancophoneStatus _francophoneStatus;
    private transient VxdelSegment _vxdelSegment;
    private transient GaviRegion _gaviRegion;

    /**
     * Get the implicit join path to the <code>public.touchstone</code> table.
     */
    public Touchstone touchstone() {
        if (_touchstone == null)
            _touchstone = new Touchstone(this, Keys.COUNTRY_METADATA__COUNTRY_METADATA_TOUCHSTONE_FKEY);

        return _touchstone;
    }

    /**
     * Get the implicit join path to the <code>public.country</code> table.
     */
    public Country country() {
        if (_country == null)
            _country = new Country(this, Keys.COUNTRY_METADATA__COUNTRY_METADATA_COUNTRY_FKEY);

        return _country;
    }

    /**
     * Get the implicit join path to the <code>public.francophone_status</code>
     * table.
     */
    public FrancophoneStatus francophoneStatus() {
        if (_francophoneStatus == null)
            _francophoneStatus = new FrancophoneStatus(this, Keys.COUNTRY_METADATA__COUNTRY_METADATA_FRANCOPHONE_FKEY);

        return _francophoneStatus;
    }

    /**
     * Get the implicit join path to the <code>public.vxdel_segment</code>
     * table.
     */
    public VxdelSegment vxdelSegment() {
        if (_vxdelSegment == null)
            _vxdelSegment = new VxdelSegment(this, Keys.COUNTRY_METADATA__COUNTRY_METADATA_VXDEL_SEGMENT_FKEY);

        return _vxdelSegment;
    }

    /**
     * Get the implicit join path to the <code>public.gavi_region</code> table.
     */
    public GaviRegion gaviRegion() {
        if (_gaviRegion == null)
            _gaviRegion = new GaviRegion(this, Keys.COUNTRY_METADATA__COUNTRY_METADATA_GAVI_REGION_FKEY);

        return _gaviRegion;
    }

    @Override
    public CountryMetadata as(String alias) {
        return new CountryMetadata(DSL.name(alias), this);
    }

    @Override
    public CountryMetadata as(Name alias) {
        return new CountryMetadata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryMetadata rename(String name) {
        return new CountryMetadata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryMetadata rename(Name name) {
        return new CountryMetadata(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<Integer, String, String, Boolean, String, Boolean, String, String, String, String, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, String, Integer, Boolean> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
