/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.CountryMetadataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryMetadata extends TableImpl<CountryMetadataRecord> {

    private static final long serialVersionUID = -1721190837;

    /**
     * The reference instance of <code>public.country_metadata</code>
     */
    public static final CountryMetadata COUNTRY_METADATA = new CountryMetadata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CountryMetadataRecord> getRecordType() {
        return CountryMetadataRecord.class;
    }

    /**
     * The column <code>public.country_metadata.id</code>.
     */
    public final TableField<CountryMetadataRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('country_metadata_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.country_metadata.touchstone</code>.
     */
    public final TableField<CountryMetadataRecord, String> TOUCHSTONE = createField("touchstone", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.country</code>.
     */
    public final TableField<CountryMetadataRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.gavi73</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> GAVI73 = createField("gavi73", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.who_region</code>.
     */
    public final TableField<CountryMetadataRecord, String> WHO_REGION = createField("who_region", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.wuenic_coverage</code>.
     */
    public final TableField<CountryMetadataRecord, Boolean> WUENIC_COVERAGE = createField("wuenic_coverage", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.continent</code>.
     */
    public final TableField<CountryMetadataRecord, String> CONTINENT = createField("continent", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.country_metadata.region</code>.
     */
    public final TableField<CountryMetadataRecord, String> REGION = createField("region", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.country_metadata</code> table reference
     */
    public CountryMetadata() {
        this(DSL.name("country_metadata"), null);
    }

    /**
     * Create an aliased <code>public.country_metadata</code> table reference
     */
    public CountryMetadata(String alias) {
        this(DSL.name(alias), COUNTRY_METADATA);
    }

    /**
     * Create an aliased <code>public.country_metadata</code> table reference
     */
    public CountryMetadata(Name alias) {
        this(alias, COUNTRY_METADATA);
    }

    private CountryMetadata(Name alias, Table<CountryMetadataRecord> aliased) {
        this(alias, aliased, null);
    }

    private CountryMetadata(Name alias, Table<CountryMetadataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COUNTRY_METADATA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CountryMetadataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COUNTRY_METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CountryMetadataRecord> getPrimaryKey() {
        return Keys.COUNTRY_METADATA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CountryMetadataRecord>> getKeys() {
        return Arrays.<UniqueKey<CountryMetadataRecord>>asList(Keys.COUNTRY_METADATA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CountryMetadataRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CountryMetadataRecord, ?>>asList(Keys.COUNTRY_METADATA__COUNTRY_METADATA_TOUCHSTONE_FKEY, Keys.COUNTRY_METADATA__COUNTRY_METADATA_COUNTRY_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryMetadata as(String alias) {
        return new CountryMetadata(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryMetadata as(Name alias) {
        return new CountryMetadata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryMetadata rename(String name) {
        return new CountryMetadata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryMetadata rename(Name name) {
        return new CountryMetadata(name, null);
    }
}
