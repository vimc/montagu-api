/*
 * This file is generated by jOOQ.
*/
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Indexes;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.GaviSupportLevelRecord;


/**
 * Enum table. Possible values: none (No vaccination), without (Vaccination 
 * without GAVI support), with (Vaccination with GAVI support)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GaviSupportLevel extends TableImpl<GaviSupportLevelRecord> {

    private static final long serialVersionUID = 1143728252;

    /**
     * The reference instance of <code>public.gavi_support_level</code>
     */
    public static final GaviSupportLevel GAVI_SUPPORT_LEVEL = new GaviSupportLevel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GaviSupportLevelRecord> getRecordType() {
        return GaviSupportLevelRecord.class;
    }

    /**
     * The column <code>public.gavi_support_level.id</code>.
     */
    public final TableField<GaviSupportLevelRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.gavi_support_level.name</code>.
     */
    public final TableField<GaviSupportLevelRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("'NULL'::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>public.gavi_support_level</code> table reference
     */
    public GaviSupportLevel() {
        this(DSL.name("gavi_support_level"), null);
    }

    /**
     * Create an aliased <code>public.gavi_support_level</code> table reference
     */
    public GaviSupportLevel(String alias) {
        this(DSL.name(alias), GAVI_SUPPORT_LEVEL);
    }

    /**
     * Create an aliased <code>public.gavi_support_level</code> table reference
     */
    public GaviSupportLevel(Name alias) {
        this(alias, GAVI_SUPPORT_LEVEL);
    }

    private GaviSupportLevel(Name alias, Table<GaviSupportLevelRecord> aliased) {
        this(alias, aliased, null);
    }

    private GaviSupportLevel(Name alias, Table<GaviSupportLevelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Enum table. Possible values: none (No vaccination), without (Vaccination without GAVI support), with (Vaccination with GAVI support)");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GAVI_SUPPORT_LEVEL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GaviSupportLevelRecord> getPrimaryKey() {
        return Keys.GAVI_SUPPORT_LEVEL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GaviSupportLevelRecord>> getKeys() {
        return Arrays.<UniqueKey<GaviSupportLevelRecord>>asList(Keys.GAVI_SUPPORT_LEVEL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaviSupportLevel as(String alias) {
        return new GaviSupportLevel(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaviSupportLevel as(Name alias) {
        return new GaviSupportLevel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GaviSupportLevel rename(String name) {
        return new GaviSupportLevel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GaviSupportLevel rename(Name name) {
        return new GaviSupportLevel(name, null);
    }
}
