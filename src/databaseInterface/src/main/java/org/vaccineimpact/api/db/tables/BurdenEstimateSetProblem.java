/*
 * This file is generated by jOOQ.
 */
package org.vaccineimpact.api.db.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.vaccineimpact.api.db.Keys;
import org.vaccineimpact.api.db.Public;
import org.vaccineimpact.api.db.tables.records.BurdenEstimateSetProblemRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BurdenEstimateSetProblem extends TableImpl<BurdenEstimateSetProblemRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.burden_estimate_set_problem</code>
     */
    public static final BurdenEstimateSetProblem BURDEN_ESTIMATE_SET_PROBLEM = new BurdenEstimateSetProblem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BurdenEstimateSetProblemRecord> getRecordType() {
        return BurdenEstimateSetProblemRecord.class;
    }

    /**
     * The column <code>public.burden_estimate_set_problem.id</code>.
     */
    public final TableField<BurdenEstimateSetProblemRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>public.burden_estimate_set_problem.burden_estimate_set</code>.
     */
    public final TableField<BurdenEstimateSetProblemRecord, Integer> BURDEN_ESTIMATE_SET = createField(DSL.name("burden_estimate_set"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.burden_estimate_set_problem.problem</code>.
     */
    public final TableField<BurdenEstimateSetProblemRecord, String> PROBLEM = createField(DSL.name("problem"), SQLDataType.CLOB.nullable(false), this, "");

    private BurdenEstimateSetProblem(Name alias, Table<BurdenEstimateSetProblemRecord> aliased) {
        this(alias, aliased, null);
    }

    private BurdenEstimateSetProblem(Name alias, Table<BurdenEstimateSetProblemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.burden_estimate_set_problem</code> table
     * reference
     */
    public BurdenEstimateSetProblem(String alias) {
        this(DSL.name(alias), BURDEN_ESTIMATE_SET_PROBLEM);
    }

    /**
     * Create an aliased <code>public.burden_estimate_set_problem</code> table
     * reference
     */
    public BurdenEstimateSetProblem(Name alias) {
        this(alias, BURDEN_ESTIMATE_SET_PROBLEM);
    }

    /**
     * Create a <code>public.burden_estimate_set_problem</code> table reference
     */
    public BurdenEstimateSetProblem() {
        this(DSL.name("burden_estimate_set_problem"), null);
    }

    public <O extends Record> BurdenEstimateSetProblem(Table<O> child, ForeignKey<O, BurdenEstimateSetProblemRecord> key) {
        super(child, key, BURDEN_ESTIMATE_SET_PROBLEM);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<BurdenEstimateSetProblemRecord, Integer> getIdentity() {
        return (Identity<BurdenEstimateSetProblemRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<BurdenEstimateSetProblemRecord> getPrimaryKey() {
        return Keys.BURDEN_ESTIMATE_SET_PROBLEM_PKEY;
    }

    @Override
    public List<ForeignKey<BurdenEstimateSetProblemRecord, ?>> getReferences() {
        return Arrays.asList(Keys.BURDEN_ESTIMATE_SET_PROBLEM__BURDEN_ESTIMATE_SET_PROBLEM_BURDEN_ESTIMATE_SET_FKEY);
    }

    private transient BurdenEstimateSet _burdenEstimateSet;

    /**
     * Get the implicit join path to the <code>public.burden_estimate_set</code>
     * table.
     */
    public BurdenEstimateSet burdenEstimateSet() {
        if (_burdenEstimateSet == null)
            _burdenEstimateSet = new BurdenEstimateSet(this, Keys.BURDEN_ESTIMATE_SET_PROBLEM__BURDEN_ESTIMATE_SET_PROBLEM_BURDEN_ESTIMATE_SET_FKEY);

        return _burdenEstimateSet;
    }

    @Override
    public BurdenEstimateSetProblem as(String alias) {
        return new BurdenEstimateSetProblem(DSL.name(alias), this);
    }

    @Override
    public BurdenEstimateSetProblem as(Name alias) {
        return new BurdenEstimateSetProblem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BurdenEstimateSetProblem rename(String name) {
        return new BurdenEstimateSetProblem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BurdenEstimateSetProblem rename(Name name) {
        return new BurdenEstimateSetProblem(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
