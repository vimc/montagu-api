buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.palantir.docker' version '0.33.0'
}

def api_docker_version = 'UNKNOWN'
if (hasProperty('docker_version')) {
    api_docker_version = docker_version
}

def api_docker_name = 'montagu-api'
if (hasProperty('docker_name')) {
    api_docker_name = docker_name
}

apply plugin: 'application'

mainClassName = "org.vaccineimpact.api.app.app_start.MainKt"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "com.sparkjava:spark-core:2.7.1"

    compile "org.postgresql:postgresql:42.2.1"
    compile "org.jooq:jooq:3.10.5"
    compile "org.jooq:jooq-meta:3.10.5"

    compile "org.pac4j:spark-pac4j:2.2.0"
    compile "org.pac4j:pac4j-http:2.2.1"
    compile "commons-fileupload:commons-fileupload:1.3.3"
    compile "com.offbytwo:docopt:0.6.0.20150202"
    compile "khttp:khttp:0.1.0"
    compile "com.squareup.okhttp3:okhttp:4.0.0-RC1"

    compile project(":databaseInterface")
    compile project(":models")
    compile project(":security")
    compile project(":emails")
    compile project(":serialization")

    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:2.+"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
    testCompile "org.assertj:assertj-core:3.9.1"
    testCompile "com.beust:klaxon:2.1.8"
    testCompile "com.github.fge:json-schema-validator:2.2.8"
    testCompile project(":testHelpers")
}

docker {
    name "${api_docker_name}:${api_docker_version}"
    file('Dockerfile')
    files tasks.distTar.outputs, "app.jar"
}

copyConfig.finalizedBy 'showConfig'

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }

    sourceSets project(':app').sourceSets.main
    sourceSets project(':security').sourceSets.main
    sourceSets project(':emails').sourceSets.main
    sourceSets project(':models').sourceSets.main
}
