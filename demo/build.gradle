group 'ac.uk.imperial.vimc'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.0-rc-91'

    repositories {
        mavenCentral()
        maven {
            url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

def loadPropertiesFile(path) {
    def props = new Properties()
    file(path).withReader {
        props.load(it)
    }
    return props
}

def loadProperties() {
    def properties = loadPropertiesFile("config/default.properties")
    def userFile = file("config/current_user")
    if (userFile.exists()) {
        def user = userFile.text.trim()
        print("Using configuration for user $user")
        def userPropertiesFile = file("config/users/${user}.properties")
        if (userPropertiesFile.exists()) {
            def userProperties = loadPropertiesFile(userPropertiesFile.path)
            properties.putAll(userProperties)
        } else {
            throw new Exception("You defined a user file, with user '$user', " +
                    "but no corresponding properties file exists at $userPropertiesFile.absolutePath")
        }
    }
    return properties
}

def properties = loadProperties()

task run(dependsOn: ':app:run')
task generateFromDatabase(dependsOn: ':generateFromDatabase:run')

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'application'

    repositories {
        mavenCentral()
        maven {
            url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

        compile "com.sparkjava:spark-core:2.5.4"
        compile "org.slf4j:slf4j-simple:1.7.21"

        compile "com.google.code.gson:gson:2.2.4"
        compile "com.github.salomonbrys.kotson:kotson:2.5.0"

        compile "org.postgresql:postgresql:9.4.1212.jre7"
        compile "org.jooq:jooq:3.9.1"
        compile "org.jooq:jooq-meta:3.9.1"
    }
}

project(':app')  {
    mainClassName = "uk.ac.imperial.vimc.demo.app.SparkAppKt"

    task copyConfig(type: Copy) {
        from 'src/main/resources'
        include 'config.properties'
        into 'build/resources/main/'
        expand(properties)
    }

    processResources.finalizedBy copyConfig
}
project(':generateFromDatabase')  {
    mainClassName = "uk.ac.imperial.vimc.demo.generateFromDatabase.AppKt"

    dependencies {
        compile "org.jooq:jooq-codegen:3.9.1"
    }

    task copyConfig(type: Copy) {
        from 'src/main/resources'
        include 'config.xml'
        into 'build/resources/main/'
        expand(properties)
    }

    processResources.finalizedBy copyConfig
}